(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();var kR={exports:{}},q0={},CR={exports:{}},bt={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var If=Symbol.for("react.element"),YW=Symbol.for("react.portal"),jW=Symbol.for("react.fragment"),QW=Symbol.for("react.strict_mode"),JW=Symbol.for("react.profiler"),qW=Symbol.for("react.provider"),eV=Symbol.for("react.context"),tV=Symbol.for("react.forward_ref"),nV=Symbol.for("react.suspense"),rV=Symbol.for("react.memo"),sV=Symbol.for("react.lazy"),J_=Symbol.iterator;function iV(n){return n===null||typeof n!="object"?null:(n=J_&&n[J_]||n["@@iterator"],typeof n=="function"?n:null)}var _R={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},MR=Object.assign,NR={};function hd(n,e,t){this.props=n,this.context=e,this.refs=NR,this.updater=t||_R}hd.prototype.isReactComponent={};hd.prototype.setState=function(n,e){if(typeof n!="object"&&typeof n!="function"&&n!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,n,e,"setState")};hd.prototype.forceUpdate=function(n){this.updater.enqueueForceUpdate(this,n,"forceUpdate")};function ER(){}ER.prototype=hd.prototype;function P2(n,e,t){this.props=n,this.context=e,this.refs=NR,this.updater=t||_R}var $2=P2.prototype=new ER;$2.constructor=P2;MR($2,hd.prototype);$2.isPureReactComponent=!0;var q_=Array.isArray,RR=Object.prototype.hasOwnProperty,F2={current:null},LR={key:!0,ref:!0,__self:!0,__source:!0};function AR(n,e,t){var r,s={},i=null,a=null;if(e!=null)for(r in e.ref!==void 0&&(a=e.ref),e.key!==void 0&&(i=""+e.key),e)RR.call(e,r)&&!LR.hasOwnProperty(r)&&(s[r]=e[r]);var o=arguments.length-2;if(o===1)s.children=t;else if(1<o){for(var l=Array(o),u=0;u<o;u++)l[u]=arguments[u+2];s.children=l}if(n&&n.defaultProps)for(r in o=n.defaultProps,o)s[r]===void 0&&(s[r]=o[r]);return{$$typeof:If,type:n,key:i,ref:a,props:s,_owner:F2.current}}function aV(n,e){return{$$typeof:If,type:n.type,key:e,ref:n.ref,props:n.props,_owner:n._owner}}function G2(n){return typeof n=="object"&&n!==null&&n.$$typeof===If}function oV(n){var e={"=":"=0",":":"=2"};return"$"+n.replace(/[=:]/g,function(t){return e[t]})}var eM=/\/+/g;function Hv(n,e){return typeof n=="object"&&n!==null&&n.key!=null?oV(""+n.key):e.toString(36)}function Iy(n,e,t,r,s){var i=typeof n;(i==="undefined"||i==="boolean")&&(n=null);var a=!1;if(n===null)a=!0;else switch(i){case"string":case"number":a=!0;break;case"object":switch(n.$$typeof){case If:case YW:a=!0}}if(a)return a=n,s=s(a),n=r===""?"."+Hv(a,0):r,q_(s)?(t="",n!=null&&(t=n.replace(eM,"$&/")+"/"),Iy(s,e,t,"",function(u){return u})):s!=null&&(G2(s)&&(s=aV(s,t+(!s.key||a&&a.key===s.key?"":(""+s.key).replace(eM,"$&/")+"/")+n)),e.push(s)),1;if(a=0,r=r===""?".":r+":",q_(n))for(var o=0;o<n.length;o++){i=n[o];var l=r+Hv(i,o);a+=Iy(i,e,t,l,s)}else if(l=iV(n),typeof l=="function")for(n=l.call(n),o=0;!(i=n.next()).done;)i=i.value,l=r+Hv(i,o++),a+=Iy(i,e,t,l,s);else if(i==="object")throw e=String(n),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return a}function wg(n,e,t){if(n==null)return n;var r=[],s=0;return Iy(n,r,"","",function(i){return e.call(t,i,s++)}),r}function lV(n){if(n._status===-1){var e=n._result;e=e(),e.then(function(t){(n._status===0||n._status===-1)&&(n._status=1,n._result=t)},function(t){(n._status===0||n._status===-1)&&(n._status=2,n._result=t)}),n._status===-1&&(n._status=0,n._result=e)}if(n._status===1)return n._result.default;throw n._result}var Kr={current:null},ky={transition:null},uV={ReactCurrentDispatcher:Kr,ReactCurrentBatchConfig:ky,ReactCurrentOwner:F2};function zR(){throw Error("act(...) is not supported in production builds of React.")}bt.Children={map:wg,forEach:function(n,e,t){wg(n,function(){e.apply(this,arguments)},t)},count:function(n){var e=0;return wg(n,function(){e++}),e},toArray:function(n){return wg(n,function(e){return e})||[]},only:function(n){if(!G2(n))throw Error("React.Children.only expected to receive a single React element child.");return n}};bt.Component=hd;bt.Fragment=jW;bt.Profiler=JW;bt.PureComponent=P2;bt.StrictMode=QW;bt.Suspense=nV;bt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=uV;bt.act=zR;bt.cloneElement=function(n,e,t){if(n==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+n+".");var r=MR({},n.props),s=n.key,i=n.ref,a=n._owner;if(e!=null){if(e.ref!==void 0&&(i=e.ref,a=F2.current),e.key!==void 0&&(s=""+e.key),n.type&&n.type.defaultProps)var o=n.type.defaultProps;for(l in e)RR.call(e,l)&&!LR.hasOwnProperty(l)&&(r[l]=e[l]===void 0&&o!==void 0?o[l]:e[l])}var l=arguments.length-2;if(l===1)r.children=t;else if(1<l){o=Array(l);for(var u=0;u<l;u++)o[u]=arguments[u+2];r.children=o}return{$$typeof:If,type:n.type,key:s,ref:i,props:r,_owner:a}};bt.createContext=function(n){return n={$$typeof:eV,_currentValue:n,_currentValue2:n,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},n.Provider={$$typeof:qW,_context:n},n.Consumer=n};bt.createElement=AR;bt.createFactory=function(n){var e=AR.bind(null,n);return e.type=n,e};bt.createRef=function(){return{current:null}};bt.forwardRef=function(n){return{$$typeof:tV,render:n}};bt.isValidElement=G2;bt.lazy=function(n){return{$$typeof:sV,_payload:{_status:-1,_result:n},_init:lV}};bt.memo=function(n,e){return{$$typeof:rV,type:n,compare:e===void 0?null:e}};bt.startTransition=function(n){var e=ky.transition;ky.transition={};try{n()}finally{ky.transition=e}};bt.unstable_act=zR;bt.useCallback=function(n,e){return Kr.current.useCallback(n,e)};bt.useContext=function(n){return Kr.current.useContext(n)};bt.useDebugValue=function(){};bt.useDeferredValue=function(n){return Kr.current.useDeferredValue(n)};bt.useEffect=function(n,e){return Kr.current.useEffect(n,e)};bt.useId=function(){return Kr.current.useId()};bt.useImperativeHandle=function(n,e,t){return Kr.current.useImperativeHandle(n,e,t)};bt.useInsertionEffect=function(n,e){return Kr.current.useInsertionEffect(n,e)};bt.useLayoutEffect=function(n,e){return Kr.current.useLayoutEffect(n,e)};bt.useMemo=function(n,e){return Kr.current.useMemo(n,e)};bt.useReducer=function(n,e,t){return Kr.current.useReducer(n,e,t)};bt.useRef=function(n){return Kr.current.useRef(n)};bt.useState=function(n){return Kr.current.useState(n)};bt.useSyncExternalStore=function(n,e,t){return Kr.current.useSyncExternalStore(n,e,t)};bt.useTransition=function(){return Kr.current.useTransition()};bt.version="18.3.1";CR.exports=bt;var Hy=CR.exports;/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var cV=Hy,dV=Symbol.for("react.element"),hV=Symbol.for("react.fragment"),pV=Object.prototype.hasOwnProperty,fV=cV.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,mV={key:!0,ref:!0,__self:!0,__source:!0};function DR(n,e,t){var r,s={},i=null,a=null;t!==void 0&&(i=""+t),e.key!==void 0&&(i=""+e.key),e.ref!==void 0&&(a=e.ref);for(r in e)pV.call(e,r)&&!mV.hasOwnProperty(r)&&(s[r]=e[r]);if(n&&n.defaultProps)for(r in e=n.defaultProps,e)s[r]===void 0&&(s[r]=e[r]);return{$$typeof:dV,type:n,key:i,ref:a,props:s,_owner:fV.current}}q0.Fragment=hV;q0.jsx=DR;q0.jsxs=DR;kR.exports=q0;var Cy=kR.exports,Dw={},PR={exports:{}},zs={},$R={exports:{}},FR={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(n){function e(L,O){var U=L.length;L.push(O);e:for(;0<U;){var ee=U-1>>>1,G=L[ee];if(0<s(G,O))L[ee]=O,L[U]=G,U=ee;else break e}}function t(L){return L.length===0?null:L[0]}function r(L){if(L.length===0)return null;var O=L[0],U=L.pop();if(U!==O){L[0]=U;e:for(var ee=0,G=L.length,Q=G>>>1;ee<Q;){var ne=2*(ee+1)-1,X=L[ne],ue=ne+1,le=L[ue];if(0>s(X,U))ue<G&&0>s(le,X)?(L[ee]=le,L[ue]=U,ee=ue):(L[ee]=X,L[ne]=U,ee=ne);else if(ue<G&&0>s(le,U))L[ee]=le,L[ue]=U,ee=ue;else break e}}return O}function s(L,O){var U=L.sortIndex-O.sortIndex;return U!==0?U:L.id-O.id}if(typeof performance=="object"&&typeof performance.now=="function"){var i=performance;n.unstable_now=function(){return i.now()}}else{var a=Date,o=a.now();n.unstable_now=function(){return a.now()-o}}var l=[],u=[],c=1,d=null,h=3,p=!1,g=!1,f=!1,m=typeof setTimeout=="function"?setTimeout:null,y=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function x(L){for(var O=t(u);O!==null;){if(O.callback===null)r(u);else if(O.startTime<=L)r(u),O.sortIndex=O.expirationTime,e(l,O);else break;O=t(u)}}function v(L){if(f=!1,x(L),!g)if(t(l)!==null)g=!0,B(w);else{var O=t(u);O!==null&&K(v,O.startTime-L)}}function w(L,O){g=!1,f&&(f=!1,y(S),S=-1),p=!0;var U=h;try{for(x(O),d=t(l);d!==null&&(!(d.expirationTime>O)||L&&!z());){var ee=d.callback;if(typeof ee=="function"){d.callback=null,h=d.priorityLevel;var G=ee(d.expirationTime<=O);O=n.unstable_now(),typeof G=="function"?d.callback=G:d===t(l)&&r(l),x(O)}else r(l);d=t(l)}if(d!==null)var Q=!0;else{var ne=t(u);ne!==null&&K(v,ne.startTime-O),Q=!1}return Q}finally{d=null,h=U,p=!1}}var T=!1,k=null,S=-1,C=5,_=-1;function z(){return!(n.unstable_now()-_<C)}function P(){if(k!==null){var L=n.unstable_now();_=L;var O=!0;try{O=k(!0,L)}finally{O?R():(T=!1,k=null)}}else T=!1}var R;if(typeof b=="function")R=function(){b(P)};else if(typeof MessageChannel<"u"){var A=new MessageChannel,F=A.port2;A.port1.onmessage=P,R=function(){F.postMessage(null)}}else R=function(){m(P,0)};function B(L){k=L,T||(T=!0,R())}function K(L,O){S=m(function(){L(n.unstable_now())},O)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(L){L.callback=null},n.unstable_continueExecution=function(){g||p||(g=!0,B(w))},n.unstable_forceFrameRate=function(L){0>L||125<L?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<L?Math.floor(1e3/L):5},n.unstable_getCurrentPriorityLevel=function(){return h},n.unstable_getFirstCallbackNode=function(){return t(l)},n.unstable_next=function(L){switch(h){case 1:case 2:case 3:var O=3;break;default:O=h}var U=h;h=O;try{return L()}finally{h=U}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(L,O){switch(L){case 1:case 2:case 3:case 4:case 5:break;default:L=3}var U=h;h=L;try{return O()}finally{h=U}},n.unstable_scheduleCallback=function(L,O,U){var ee=n.unstable_now();switch(typeof U=="object"&&U!==null?(U=U.delay,U=typeof U=="number"&&0<U?ee+U:ee):U=ee,L){case 1:var G=-1;break;case 2:G=250;break;case 5:G=1073741823;break;case 4:G=1e4;break;default:G=5e3}return G=U+G,L={id:c++,callback:O,priorityLevel:L,startTime:U,expirationTime:G,sortIndex:-1},U>ee?(L.sortIndex=U,e(u,L),t(l)===null&&L===t(u)&&(f?(y(S),S=-1):f=!0,K(v,U-ee))):(L.sortIndex=G,e(l,L),g||p||(g=!0,B(w))),L},n.unstable_shouldYield=z,n.unstable_wrapCallback=function(L){var O=h;return function(){var U=h;h=O;try{return L.apply(this,arguments)}finally{h=U}}}})(FR);$R.exports=FR;var gV=$R.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var yV=Hy,Rs=gV;function xe(n){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+n,t=1;t<arguments.length;t++)e+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+n+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var GR=new Set,zp={};function Tu(n,e){Oc(n,e),Oc(n+"Capture",e)}function Oc(n,e){for(zp[n]=e,n=0;n<e.length;n++)GR.add(e[n])}var La=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Pw=Object.prototype.hasOwnProperty,bV=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,tM={},nM={};function xV(n){return Pw.call(nM,n)?!0:Pw.call(tM,n)?!1:bV.test(n)?nM[n]=!0:(tM[n]=!0,!1)}function vV(n,e,t,r){if(t!==null&&t.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return r?!1:t!==null?!t.acceptsBooleans:(n=n.toLowerCase().slice(0,5),n!=="data-"&&n!=="aria-");default:return!1}}function wV(n,e,t,r){if(e===null||typeof e>"u"||vV(n,e,t,r))return!0;if(r)return!1;if(t!==null)switch(t.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function Yr(n,e,t,r,s,i,a){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=r,this.attributeNamespace=s,this.mustUseProperty=t,this.propertyName=n,this.type=e,this.sanitizeURL=i,this.removeEmptyString=a}var pr={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(n){pr[n]=new Yr(n,0,!1,n,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(n){var e=n[0];pr[e]=new Yr(e,1,!1,n[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(n){pr[n]=new Yr(n,2,!1,n.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(n){pr[n]=new Yr(n,2,!1,n,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(n){pr[n]=new Yr(n,3,!1,n.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(n){pr[n]=new Yr(n,3,!0,n,null,!1,!1)});["capture","download"].forEach(function(n){pr[n]=new Yr(n,4,!1,n,null,!1,!1)});["cols","rows","size","span"].forEach(function(n){pr[n]=new Yr(n,6,!1,n,null,!1,!1)});["rowSpan","start"].forEach(function(n){pr[n]=new Yr(n,5,!1,n.toLowerCase(),null,!1,!1)});var O2=/[\-:]([a-z])/g;function W2(n){return n[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(n){var e=n.replace(O2,W2);pr[e]=new Yr(e,1,!1,n,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(n){var e=n.replace(O2,W2);pr[e]=new Yr(e,1,!1,n,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(n){var e=n.replace(O2,W2);pr[e]=new Yr(e,1,!1,n,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(n){pr[n]=new Yr(n,1,!1,n.toLowerCase(),null,!1,!1)});pr.xlinkHref=new Yr("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(n){pr[n]=new Yr(n,1,!1,n.toLowerCase(),null,!0,!0)});function V2(n,e,t,r){var s=pr.hasOwnProperty(e)?pr[e]:null;(s!==null?s.type!==0:r||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(wV(e,t,s,r)&&(t=null),r||s===null?xV(e)&&(t===null?n.removeAttribute(e):n.setAttribute(e,""+t)):s.mustUseProperty?n[s.propertyName]=t===null?s.type===3?!1:"":t:(e=s.attributeName,r=s.attributeNamespace,t===null?n.removeAttribute(e):(s=s.type,t=s===3||s===4&&t===!0?"":""+t,r?n.setAttributeNS(r,e,t):n.setAttribute(e,t))))}var Ua=yV.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Sg=Symbol.for("react.element"),dc=Symbol.for("react.portal"),hc=Symbol.for("react.fragment"),B2=Symbol.for("react.strict_mode"),$w=Symbol.for("react.profiler"),OR=Symbol.for("react.provider"),WR=Symbol.for("react.context"),X2=Symbol.for("react.forward_ref"),Fw=Symbol.for("react.suspense"),Gw=Symbol.for("react.suspense_list"),U2=Symbol.for("react.memo"),lo=Symbol.for("react.lazy"),VR=Symbol.for("react.offscreen"),rM=Symbol.iterator;function $h(n){return n===null||typeof n!="object"?null:(n=rM&&n[rM]||n["@@iterator"],typeof n=="function"?n:null)}var dn=Object.assign,Kv;function ap(n){if(Kv===void 0)try{throw Error()}catch(t){var e=t.stack.trim().match(/\n( *(at )?)/);Kv=e&&e[1]||""}return`
`+Kv+n}var Yv=!1;function jv(n,e){if(!n||Yv)return"";Yv=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(u){var r=u}Reflect.construct(n,[],e)}else{try{e.call()}catch(u){r=u}n.call(e.prototype)}else{try{throw Error()}catch(u){r=u}n()}}catch(u){if(u&&r&&typeof u.stack=="string"){for(var s=u.stack.split(`
`),i=r.stack.split(`
`),a=s.length-1,o=i.length-1;1<=a&&0<=o&&s[a]!==i[o];)o--;for(;1<=a&&0<=o;a--,o--)if(s[a]!==i[o]){if(a!==1||o!==1)do if(a--,o--,0>o||s[a]!==i[o]){var l=`
`+s[a].replace(" at new "," at ");return n.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",n.displayName)),l}while(1<=a&&0<=o);break}}}finally{Yv=!1,Error.prepareStackTrace=t}return(n=n?n.displayName||n.name:"")?ap(n):""}function SV(n){switch(n.tag){case 5:return ap(n.type);case 16:return ap("Lazy");case 13:return ap("Suspense");case 19:return ap("SuspenseList");case 0:case 2:case 15:return n=jv(n.type,!1),n;case 11:return n=jv(n.type.render,!1),n;case 1:return n=jv(n.type,!0),n;default:return""}}function Ow(n){if(n==null)return null;if(typeof n=="function")return n.displayName||n.name||null;if(typeof n=="string")return n;switch(n){case hc:return"Fragment";case dc:return"Portal";case $w:return"Profiler";case B2:return"StrictMode";case Fw:return"Suspense";case Gw:return"SuspenseList"}if(typeof n=="object")switch(n.$$typeof){case WR:return(n.displayName||"Context")+".Consumer";case OR:return(n._context.displayName||"Context")+".Provider";case X2:var e=n.render;return n=n.displayName,n||(n=e.displayName||e.name||"",n=n!==""?"ForwardRef("+n+")":"ForwardRef"),n;case U2:return e=n.displayName||null,e!==null?e:Ow(n.type)||"Memo";case lo:e=n._payload,n=n._init;try{return Ow(n(e))}catch{}}return null}function TV(n){var e=n.type;switch(n.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return n=e.render,n=n.displayName||n.name||"",e.displayName||(n!==""?"ForwardRef("+n+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Ow(e);case 8:return e===B2?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function Po(n){switch(typeof n){case"boolean":case"number":case"string":case"undefined":return n;case"object":return n;default:return""}}function BR(n){var e=n.type;return(n=n.nodeName)&&n.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function IV(n){var e=BR(n)?"checked":"value",t=Object.getOwnPropertyDescriptor(n.constructor.prototype,e),r=""+n[e];if(!n.hasOwnProperty(e)&&typeof t<"u"&&typeof t.get=="function"&&typeof t.set=="function"){var s=t.get,i=t.set;return Object.defineProperty(n,e,{configurable:!0,get:function(){return s.call(this)},set:function(a){r=""+a,i.call(this,a)}}),Object.defineProperty(n,e,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(a){r=""+a},stopTracking:function(){n._valueTracker=null,delete n[e]}}}}function Tg(n){n._valueTracker||(n._valueTracker=IV(n))}function XR(n){if(!n)return!1;var e=n._valueTracker;if(!e)return!0;var t=e.getValue(),r="";return n&&(r=BR(n)?n.checked?"true":"false":n.value),n=r,n!==t?(e.setValue(n),!0):!1}function Ky(n){if(n=n||(typeof document<"u"?document:void 0),typeof n>"u")return null;try{return n.activeElement||n.body}catch{return n.body}}function Ww(n,e){var t=e.checked;return dn({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:t??n._wrapperState.initialChecked})}function sM(n,e){var t=e.defaultValue==null?"":e.defaultValue,r=e.checked!=null?e.checked:e.defaultChecked;t=Po(e.value!=null?e.value:t),n._wrapperState={initialChecked:r,initialValue:t,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function UR(n,e){e=e.checked,e!=null&&V2(n,"checked",e,!1)}function Vw(n,e){UR(n,e);var t=Po(e.value),r=e.type;if(t!=null)r==="number"?(t===0&&n.value===""||n.value!=t)&&(n.value=""+t):n.value!==""+t&&(n.value=""+t);else if(r==="submit"||r==="reset"){n.removeAttribute("value");return}e.hasOwnProperty("value")?Bw(n,e.type,t):e.hasOwnProperty("defaultValue")&&Bw(n,e.type,Po(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(n.defaultChecked=!!e.defaultChecked)}function iM(n,e,t){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!(r!=="submit"&&r!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+n._wrapperState.initialValue,t||e===n.value||(n.value=e),n.defaultValue=e}t=n.name,t!==""&&(n.name=""),n.defaultChecked=!!n._wrapperState.initialChecked,t!==""&&(n.name=t)}function Bw(n,e,t){(e!=="number"||Ky(n.ownerDocument)!==n)&&(t==null?n.defaultValue=""+n._wrapperState.initialValue:n.defaultValue!==""+t&&(n.defaultValue=""+t))}var op=Array.isArray;function _c(n,e,t,r){if(n=n.options,e){e={};for(var s=0;s<t.length;s++)e["$"+t[s]]=!0;for(t=0;t<n.length;t++)s=e.hasOwnProperty("$"+n[t].value),n[t].selected!==s&&(n[t].selected=s),s&&r&&(n[t].defaultSelected=!0)}else{for(t=""+Po(t),e=null,s=0;s<n.length;s++){if(n[s].value===t){n[s].selected=!0,r&&(n[s].defaultSelected=!0);return}e!==null||n[s].disabled||(e=n[s])}e!==null&&(e.selected=!0)}}function Xw(n,e){if(e.dangerouslySetInnerHTML!=null)throw Error(xe(91));return dn({},e,{value:void 0,defaultValue:void 0,children:""+n._wrapperState.initialValue})}function aM(n,e){var t=e.value;if(t==null){if(t=e.children,e=e.defaultValue,t!=null){if(e!=null)throw Error(xe(92));if(op(t)){if(1<t.length)throw Error(xe(93));t=t[0]}e=t}e==null&&(e=""),t=e}n._wrapperState={initialValue:Po(t)}}function ZR(n,e){var t=Po(e.value),r=Po(e.defaultValue);t!=null&&(t=""+t,t!==n.value&&(n.value=t),e.defaultValue==null&&n.defaultValue!==t&&(n.defaultValue=t)),r!=null&&(n.defaultValue=""+r)}function oM(n){var e=n.textContent;e===n._wrapperState.initialValue&&e!==""&&e!==null&&(n.value=e)}function HR(n){switch(n){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Uw(n,e){return n==null||n==="http://www.w3.org/1999/xhtml"?HR(e):n==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":n}var Ig,KR=function(n){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(e,t,r,s){MSApp.execUnsafeLocalFunction(function(){return n(e,t,r,s)})}:n}(function(n,e){if(n.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in n)n.innerHTML=e;else{for(Ig=Ig||document.createElement("div"),Ig.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Ig.firstChild;n.firstChild;)n.removeChild(n.firstChild);for(;e.firstChild;)n.appendChild(e.firstChild)}});function Dp(n,e){if(e){var t=n.firstChild;if(t&&t===n.lastChild&&t.nodeType===3){t.nodeValue=e;return}}n.textContent=e}var wp={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kV=["Webkit","ms","Moz","O"];Object.keys(wp).forEach(function(n){kV.forEach(function(e){e=e+n.charAt(0).toUpperCase()+n.substring(1),wp[e]=wp[n]})});function YR(n,e,t){return e==null||typeof e=="boolean"||e===""?"":t||typeof e!="number"||e===0||wp.hasOwnProperty(n)&&wp[n]?(""+e).trim():e+"px"}function jR(n,e){n=n.style;for(var t in e)if(e.hasOwnProperty(t)){var r=t.indexOf("--")===0,s=YR(t,e[t],r);t==="float"&&(t="cssFloat"),r?n.setProperty(t,s):n[t]=s}}var CV=dn({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Zw(n,e){if(e){if(CV[n]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(xe(137,n));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(xe(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(xe(61))}if(e.style!=null&&typeof e.style!="object")throw Error(xe(62))}}function Hw(n,e){if(n.indexOf("-")===-1)return typeof e.is=="string";switch(n){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Kw=null;function Z2(n){return n=n.target||n.srcElement||window,n.correspondingUseElement&&(n=n.correspondingUseElement),n.nodeType===3?n.parentNode:n}var Yw=null,Mc=null,Nc=null;function lM(n){if(n=_f(n)){if(typeof Yw!="function")throw Error(xe(280));var e=n.stateNode;e&&(e=sb(e),Yw(n.stateNode,n.type,e))}}function QR(n){Mc?Nc?Nc.push(n):Nc=[n]:Mc=n}function JR(){if(Mc){var n=Mc,e=Nc;if(Nc=Mc=null,lM(n),e)for(n=0;n<e.length;n++)lM(e[n])}}function qR(n,e){return n(e)}function eL(){}var Qv=!1;function tL(n,e,t){if(Qv)return n(e,t);Qv=!0;try{return qR(n,e,t)}finally{Qv=!1,(Mc!==null||Nc!==null)&&(eL(),JR())}}function Pp(n,e){var t=n.stateNode;if(t===null)return null;var r=sb(t);if(r===null)return null;t=r[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(n=n.type,r=!(n==="button"||n==="input"||n==="select"||n==="textarea")),n=!r;break e;default:n=!1}if(n)return null;if(t&&typeof t!="function")throw Error(xe(231,e,typeof t));return t}var jw=!1;if(La)try{var Fh={};Object.defineProperty(Fh,"passive",{get:function(){jw=!0}}),window.addEventListener("test",Fh,Fh),window.removeEventListener("test",Fh,Fh)}catch{jw=!1}function _V(n,e,t,r,s,i,a,o,l){var u=Array.prototype.slice.call(arguments,3);try{e.apply(t,u)}catch(c){this.onError(c)}}var Sp=!1,Yy=null,jy=!1,Qw=null,MV={onError:function(n){Sp=!0,Yy=n}};function NV(n,e,t,r,s,i,a,o,l){Sp=!1,Yy=null,_V.apply(MV,arguments)}function EV(n,e,t,r,s,i,a,o,l){if(NV.apply(this,arguments),Sp){if(Sp){var u=Yy;Sp=!1,Yy=null}else throw Error(xe(198));jy||(jy=!0,Qw=u)}}function Iu(n){var e=n,t=n;if(n.alternate)for(;e.return;)e=e.return;else{n=e;do e=n,e.flags&4098&&(t=e.return),n=e.return;while(n)}return e.tag===3?t:null}function nL(n){if(n.tag===13){var e=n.memoizedState;if(e===null&&(n=n.alternate,n!==null&&(e=n.memoizedState)),e!==null)return e.dehydrated}return null}function uM(n){if(Iu(n)!==n)throw Error(xe(188))}function RV(n){var e=n.alternate;if(!e){if(e=Iu(n),e===null)throw Error(xe(188));return e!==n?null:n}for(var t=n,r=e;;){var s=t.return;if(s===null)break;var i=s.alternate;if(i===null){if(r=s.return,r!==null){t=r;continue}break}if(s.child===i.child){for(i=s.child;i;){if(i===t)return uM(s),n;if(i===r)return uM(s),e;i=i.sibling}throw Error(xe(188))}if(t.return!==r.return)t=s,r=i;else{for(var a=!1,o=s.child;o;){if(o===t){a=!0,t=s,r=i;break}if(o===r){a=!0,r=s,t=i;break}o=o.sibling}if(!a){for(o=i.child;o;){if(o===t){a=!0,t=i,r=s;break}if(o===r){a=!0,r=i,t=s;break}o=o.sibling}if(!a)throw Error(xe(189))}}if(t.alternate!==r)throw Error(xe(190))}if(t.tag!==3)throw Error(xe(188));return t.stateNode.current===t?n:e}function rL(n){return n=RV(n),n!==null?sL(n):null}function sL(n){if(n.tag===5||n.tag===6)return n;for(n=n.child;n!==null;){var e=sL(n);if(e!==null)return e;n=n.sibling}return null}var iL=Rs.unstable_scheduleCallback,cM=Rs.unstable_cancelCallback,LV=Rs.unstable_shouldYield,AV=Rs.unstable_requestPaint,wn=Rs.unstable_now,zV=Rs.unstable_getCurrentPriorityLevel,H2=Rs.unstable_ImmediatePriority,aL=Rs.unstable_UserBlockingPriority,Qy=Rs.unstable_NormalPriority,DV=Rs.unstable_LowPriority,oL=Rs.unstable_IdlePriority,eb=null,Qi=null;function PV(n){if(Qi&&typeof Qi.onCommitFiberRoot=="function")try{Qi.onCommitFiberRoot(eb,n,void 0,(n.current.flags&128)===128)}catch{}}var gi=Math.clz32?Math.clz32:GV,$V=Math.log,FV=Math.LN2;function GV(n){return n>>>=0,n===0?32:31-($V(n)/FV|0)|0}var kg=64,Cg=4194304;function lp(n){switch(n&-n){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return n&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return n}}function Jy(n,e){var t=n.pendingLanes;if(t===0)return 0;var r=0,s=n.suspendedLanes,i=n.pingedLanes,a=t&268435455;if(a!==0){var o=a&~s;o!==0?r=lp(o):(i&=a,i!==0&&(r=lp(i)))}else a=t&~s,a!==0?r=lp(a):i!==0&&(r=lp(i));if(r===0)return 0;if(e!==0&&e!==r&&!(e&s)&&(s=r&-r,i=e&-e,s>=i||s===16&&(i&4194240)!==0))return e;if(r&4&&(r|=t&16),e=n.entangledLanes,e!==0)for(n=n.entanglements,e&=r;0<e;)t=31-gi(e),s=1<<t,r|=n[t],e&=~s;return r}function OV(n,e){switch(n){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function WV(n,e){for(var t=n.suspendedLanes,r=n.pingedLanes,s=n.expirationTimes,i=n.pendingLanes;0<i;){var a=31-gi(i),o=1<<a,l=s[a];l===-1?(!(o&t)||o&r)&&(s[a]=OV(o,e)):l<=e&&(n.expiredLanes|=o),i&=~o}}function Jw(n){return n=n.pendingLanes&-1073741825,n!==0?n:n&1073741824?1073741824:0}function lL(){var n=kg;return kg<<=1,!(kg&4194240)&&(kg=64),n}function Jv(n){for(var e=[],t=0;31>t;t++)e.push(n);return e}function kf(n,e,t){n.pendingLanes|=e,e!==536870912&&(n.suspendedLanes=0,n.pingedLanes=0),n=n.eventTimes,e=31-gi(e),n[e]=t}function VV(n,e){var t=n.pendingLanes&~e;n.pendingLanes=e,n.suspendedLanes=0,n.pingedLanes=0,n.expiredLanes&=e,n.mutableReadLanes&=e,n.entangledLanes&=e,e=n.entanglements;var r=n.eventTimes;for(n=n.expirationTimes;0<t;){var s=31-gi(t),i=1<<s;e[s]=0,r[s]=-1,n[s]=-1,t&=~i}}function K2(n,e){var t=n.entangledLanes|=e;for(n=n.entanglements;t;){var r=31-gi(t),s=1<<r;s&e|n[r]&e&&(n[r]|=e),t&=~s}}var At=0;function uL(n){return n&=-n,1<n?4<n?n&268435455?16:536870912:4:1}var cL,Y2,dL,hL,pL,qw=!1,_g=[],To=null,Io=null,ko=null,$p=new Map,Fp=new Map,po=[],BV="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dM(n,e){switch(n){case"focusin":case"focusout":To=null;break;case"dragenter":case"dragleave":Io=null;break;case"mouseover":case"mouseout":ko=null;break;case"pointerover":case"pointerout":$p.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Fp.delete(e.pointerId)}}function Gh(n,e,t,r,s,i){return n===null||n.nativeEvent!==i?(n={blockedOn:e,domEventName:t,eventSystemFlags:r,nativeEvent:i,targetContainers:[s]},e!==null&&(e=_f(e),e!==null&&Y2(e)),n):(n.eventSystemFlags|=r,e=n.targetContainers,s!==null&&e.indexOf(s)===-1&&e.push(s),n)}function XV(n,e,t,r,s){switch(e){case"focusin":return To=Gh(To,n,e,t,r,s),!0;case"dragenter":return Io=Gh(Io,n,e,t,r,s),!0;case"mouseover":return ko=Gh(ko,n,e,t,r,s),!0;case"pointerover":var i=s.pointerId;return $p.set(i,Gh($p.get(i)||null,n,e,t,r,s)),!0;case"gotpointercapture":return i=s.pointerId,Fp.set(i,Gh(Fp.get(i)||null,n,e,t,r,s)),!0}return!1}function fL(n){var e=Ll(n.target);if(e!==null){var t=Iu(e);if(t!==null){if(e=t.tag,e===13){if(e=nL(t),e!==null){n.blockedOn=e,pL(n.priority,function(){dL(t)});return}}else if(e===3&&t.stateNode.current.memoizedState.isDehydrated){n.blockedOn=t.tag===3?t.stateNode.containerInfo:null;return}}}n.blockedOn=null}function _y(n){if(n.blockedOn!==null)return!1;for(var e=n.targetContainers;0<e.length;){var t=eS(n.domEventName,n.eventSystemFlags,e[0],n.nativeEvent);if(t===null){t=n.nativeEvent;var r=new t.constructor(t.type,t);Kw=r,t.target.dispatchEvent(r),Kw=null}else return e=_f(t),e!==null&&Y2(e),n.blockedOn=t,!1;e.shift()}return!0}function hM(n,e,t){_y(n)&&t.delete(e)}function UV(){qw=!1,To!==null&&_y(To)&&(To=null),Io!==null&&_y(Io)&&(Io=null),ko!==null&&_y(ko)&&(ko=null),$p.forEach(hM),Fp.forEach(hM)}function Oh(n,e){n.blockedOn===e&&(n.blockedOn=null,qw||(qw=!0,Rs.unstable_scheduleCallback(Rs.unstable_NormalPriority,UV)))}function Gp(n){function e(s){return Oh(s,n)}if(0<_g.length){Oh(_g[0],n);for(var t=1;t<_g.length;t++){var r=_g[t];r.blockedOn===n&&(r.blockedOn=null)}}for(To!==null&&Oh(To,n),Io!==null&&Oh(Io,n),ko!==null&&Oh(ko,n),$p.forEach(e),Fp.forEach(e),t=0;t<po.length;t++)r=po[t],r.blockedOn===n&&(r.blockedOn=null);for(;0<po.length&&(t=po[0],t.blockedOn===null);)fL(t),t.blockedOn===null&&po.shift()}var Ec=Ua.ReactCurrentBatchConfig,qy=!0;function ZV(n,e,t,r){var s=At,i=Ec.transition;Ec.transition=null;try{At=1,j2(n,e,t,r)}finally{At=s,Ec.transition=i}}function HV(n,e,t,r){var s=At,i=Ec.transition;Ec.transition=null;try{At=4,j2(n,e,t,r)}finally{At=s,Ec.transition=i}}function j2(n,e,t,r){if(qy){var s=eS(n,e,t,r);if(s===null)l1(n,e,r,e0,t),dM(n,r);else if(XV(s,n,e,t,r))r.stopPropagation();else if(dM(n,r),e&4&&-1<BV.indexOf(n)){for(;s!==null;){var i=_f(s);if(i!==null&&cL(i),i=eS(n,e,t,r),i===null&&l1(n,e,r,e0,t),i===s)break;s=i}s!==null&&r.stopPropagation()}else l1(n,e,r,null,t)}}var e0=null;function eS(n,e,t,r){if(e0=null,n=Z2(r),n=Ll(n),n!==null)if(e=Iu(n),e===null)n=null;else if(t=e.tag,t===13){if(n=nL(e),n!==null)return n;n=null}else if(t===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;n=null}else e!==n&&(n=null);return e0=n,null}function mL(n){switch(n){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(zV()){case H2:return 1;case aL:return 4;case Qy:case DV:return 16;case oL:return 536870912;default:return 16}default:return 16}}var mo=null,Q2=null,My=null;function gL(){if(My)return My;var n,e=Q2,t=e.length,r,s="value"in mo?mo.value:mo.textContent,i=s.length;for(n=0;n<t&&e[n]===s[n];n++);var a=t-n;for(r=1;r<=a&&e[t-r]===s[i-r];r++);return My=s.slice(n,1<r?1-r:void 0)}function Ny(n){var e=n.keyCode;return"charCode"in n?(n=n.charCode,n===0&&e===13&&(n=13)):n=e,n===10&&(n=13),32<=n||n===13?n:0}function Mg(){return!0}function pM(){return!1}function Ds(n){function e(t,r,s,i,a){this._reactName=t,this._targetInst=s,this.type=r,this.nativeEvent=i,this.target=a,this.currentTarget=null;for(var o in n)n.hasOwnProperty(o)&&(t=n[o],this[o]=t?t(i):i[o]);return this.isDefaultPrevented=(i.defaultPrevented!=null?i.defaultPrevented:i.returnValue===!1)?Mg:pM,this.isPropagationStopped=pM,this}return dn(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():typeof t.returnValue!="unknown"&&(t.returnValue=!1),this.isDefaultPrevented=Mg)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():typeof t.cancelBubble!="unknown"&&(t.cancelBubble=!0),this.isPropagationStopped=Mg)},persist:function(){},isPersistent:Mg}),e}var pd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(n){return n.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},J2=Ds(pd),Cf=dn({},pd,{view:0,detail:0}),KV=Ds(Cf),qv,e1,Wh,tb=dn({},Cf,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:q2,button:0,buttons:0,relatedTarget:function(n){return n.relatedTarget===void 0?n.fromElement===n.srcElement?n.toElement:n.fromElement:n.relatedTarget},movementX:function(n){return"movementX"in n?n.movementX:(n!==Wh&&(Wh&&n.type==="mousemove"?(qv=n.screenX-Wh.screenX,e1=n.screenY-Wh.screenY):e1=qv=0,Wh=n),qv)},movementY:function(n){return"movementY"in n?n.movementY:e1}}),fM=Ds(tb),YV=dn({},tb,{dataTransfer:0}),jV=Ds(YV),QV=dn({},Cf,{relatedTarget:0}),t1=Ds(QV),JV=dn({},pd,{animationName:0,elapsedTime:0,pseudoElement:0}),qV=Ds(JV),eB=dn({},pd,{clipboardData:function(n){return"clipboardData"in n?n.clipboardData:window.clipboardData}}),tB=Ds(eB),nB=dn({},pd,{data:0}),mM=Ds(nB),rB={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sB={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},iB={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function aB(n){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(n):(n=iB[n])?!!e[n]:!1}function q2(){return aB}var oB=dn({},Cf,{key:function(n){if(n.key){var e=rB[n.key]||n.key;if(e!=="Unidentified")return e}return n.type==="keypress"?(n=Ny(n),n===13?"Enter":String.fromCharCode(n)):n.type==="keydown"||n.type==="keyup"?sB[n.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:q2,charCode:function(n){return n.type==="keypress"?Ny(n):0},keyCode:function(n){return n.type==="keydown"||n.type==="keyup"?n.keyCode:0},which:function(n){return n.type==="keypress"?Ny(n):n.type==="keydown"||n.type==="keyup"?n.keyCode:0}}),lB=Ds(oB),uB=dn({},tb,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),gM=Ds(uB),cB=dn({},Cf,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:q2}),dB=Ds(cB),hB=dn({},pd,{propertyName:0,elapsedTime:0,pseudoElement:0}),pB=Ds(hB),fB=dn({},tb,{deltaX:function(n){return"deltaX"in n?n.deltaX:"wheelDeltaX"in n?-n.wheelDeltaX:0},deltaY:function(n){return"deltaY"in n?n.deltaY:"wheelDeltaY"in n?-n.wheelDeltaY:"wheelDelta"in n?-n.wheelDelta:0},deltaZ:0,deltaMode:0}),mB=Ds(fB),gB=[9,13,27,32],eT=La&&"CompositionEvent"in window,Tp=null;La&&"documentMode"in document&&(Tp=document.documentMode);var yB=La&&"TextEvent"in window&&!Tp,yL=La&&(!eT||Tp&&8<Tp&&11>=Tp),yM=" ",bM=!1;function bL(n,e){switch(n){case"keyup":return gB.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function xL(n){return n=n.detail,typeof n=="object"&&"data"in n?n.data:null}var pc=!1;function bB(n,e){switch(n){case"compositionend":return xL(e);case"keypress":return e.which!==32?null:(bM=!0,yM);case"textInput":return n=e.data,n===yM&&bM?null:n;default:return null}}function xB(n,e){if(pc)return n==="compositionend"||!eT&&bL(n,e)?(n=gL(),My=Q2=mo=null,pc=!1,n):null;switch(n){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return yL&&e.locale!=="ko"?null:e.data;default:return null}}var vB={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xM(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return e==="input"?!!vB[n.type]:e==="textarea"}function vL(n,e,t,r){QR(r),e=t0(e,"onChange"),0<e.length&&(t=new J2("onChange","change",null,t,r),n.push({event:t,listeners:e}))}var Ip=null,Op=null;function wB(n){RL(n,0)}function nb(n){var e=gc(n);if(XR(e))return n}function SB(n,e){if(n==="change")return e}var wL=!1;if(La){var n1;if(La){var r1="oninput"in document;if(!r1){var vM=document.createElement("div");vM.setAttribute("oninput","return;"),r1=typeof vM.oninput=="function"}n1=r1}else n1=!1;wL=n1&&(!document.documentMode||9<document.documentMode)}function wM(){Ip&&(Ip.detachEvent("onpropertychange",SL),Op=Ip=null)}function SL(n){if(n.propertyName==="value"&&nb(Op)){var e=[];vL(e,Op,n,Z2(n)),tL(wB,e)}}function TB(n,e,t){n==="focusin"?(wM(),Ip=e,Op=t,Ip.attachEvent("onpropertychange",SL)):n==="focusout"&&wM()}function IB(n){if(n==="selectionchange"||n==="keyup"||n==="keydown")return nb(Op)}function kB(n,e){if(n==="click")return nb(e)}function CB(n,e){if(n==="input"||n==="change")return nb(e)}function _B(n,e){return n===e&&(n!==0||1/n===1/e)||n!==n&&e!==e}var Si=typeof Object.is=="function"?Object.is:_B;function Wp(n,e){if(Si(n,e))return!0;if(typeof n!="object"||n===null||typeof e!="object"||e===null)return!1;var t=Object.keys(n),r=Object.keys(e);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var s=t[r];if(!Pw.call(e,s)||!Si(n[s],e[s]))return!1}return!0}function SM(n){for(;n&&n.firstChild;)n=n.firstChild;return n}function TM(n,e){var t=SM(n);n=0;for(var r;t;){if(t.nodeType===3){if(r=n+t.textContent.length,n<=e&&r>=e)return{node:t,offset:e-n};n=r}e:{for(;t;){if(t.nextSibling){t=t.nextSibling;break e}t=t.parentNode}t=void 0}t=SM(t)}}function TL(n,e){return n&&e?n===e?!0:n&&n.nodeType===3?!1:e&&e.nodeType===3?TL(n,e.parentNode):"contains"in n?n.contains(e):n.compareDocumentPosition?!!(n.compareDocumentPosition(e)&16):!1:!1}function IL(){for(var n=window,e=Ky();e instanceof n.HTMLIFrameElement;){try{var t=typeof e.contentWindow.location.href=="string"}catch{t=!1}if(t)n=e.contentWindow;else break;e=Ky(n.document)}return e}function tT(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return e&&(e==="input"&&(n.type==="text"||n.type==="search"||n.type==="tel"||n.type==="url"||n.type==="password")||e==="textarea"||n.contentEditable==="true")}function MB(n){var e=IL(),t=n.focusedElem,r=n.selectionRange;if(e!==t&&t&&t.ownerDocument&&TL(t.ownerDocument.documentElement,t)){if(r!==null&&tT(t)){if(e=r.start,n=r.end,n===void 0&&(n=e),"selectionStart"in t)t.selectionStart=e,t.selectionEnd=Math.min(n,t.value.length);else if(n=(e=t.ownerDocument||document)&&e.defaultView||window,n.getSelection){n=n.getSelection();var s=t.textContent.length,i=Math.min(r.start,s);r=r.end===void 0?i:Math.min(r.end,s),!n.extend&&i>r&&(s=r,r=i,i=s),s=TM(t,i);var a=TM(t,r);s&&a&&(n.rangeCount!==1||n.anchorNode!==s.node||n.anchorOffset!==s.offset||n.focusNode!==a.node||n.focusOffset!==a.offset)&&(e=e.createRange(),e.setStart(s.node,s.offset),n.removeAllRanges(),i>r?(n.addRange(e),n.extend(a.node,a.offset)):(e.setEnd(a.node,a.offset),n.addRange(e)))}}for(e=[],n=t;n=n.parentNode;)n.nodeType===1&&e.push({element:n,left:n.scrollLeft,top:n.scrollTop});for(typeof t.focus=="function"&&t.focus(),t=0;t<e.length;t++)n=e[t],n.element.scrollLeft=n.left,n.element.scrollTop=n.top}}var NB=La&&"documentMode"in document&&11>=document.documentMode,fc=null,tS=null,kp=null,nS=!1;function IM(n,e,t){var r=t.window===t?t.document:t.nodeType===9?t:t.ownerDocument;nS||fc==null||fc!==Ky(r)||(r=fc,"selectionStart"in r&&tT(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),kp&&Wp(kp,r)||(kp=r,r=t0(tS,"onSelect"),0<r.length&&(e=new J2("onSelect","select",null,e,t),n.push({event:e,listeners:r}),e.target=fc)))}function Ng(n,e){var t={};return t[n.toLowerCase()]=e.toLowerCase(),t["Webkit"+n]="webkit"+e,t["Moz"+n]="moz"+e,t}var mc={animationend:Ng("Animation","AnimationEnd"),animationiteration:Ng("Animation","AnimationIteration"),animationstart:Ng("Animation","AnimationStart"),transitionend:Ng("Transition","TransitionEnd")},s1={},kL={};La&&(kL=document.createElement("div").style,"AnimationEvent"in window||(delete mc.animationend.animation,delete mc.animationiteration.animation,delete mc.animationstart.animation),"TransitionEvent"in window||delete mc.transitionend.transition);function rb(n){if(s1[n])return s1[n];if(!mc[n])return n;var e=mc[n],t;for(t in e)if(e.hasOwnProperty(t)&&t in kL)return s1[n]=e[t];return n}var CL=rb("animationend"),_L=rb("animationiteration"),ML=rb("animationstart"),NL=rb("transitionend"),EL=new Map,kM="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function jo(n,e){EL.set(n,e),Tu(e,[n])}for(var i1=0;i1<kM.length;i1++){var a1=kM[i1],EB=a1.toLowerCase(),RB=a1[0].toUpperCase()+a1.slice(1);jo(EB,"on"+RB)}jo(CL,"onAnimationEnd");jo(_L,"onAnimationIteration");jo(ML,"onAnimationStart");jo("dblclick","onDoubleClick");jo("focusin","onFocus");jo("focusout","onBlur");jo(NL,"onTransitionEnd");Oc("onMouseEnter",["mouseout","mouseover"]);Oc("onMouseLeave",["mouseout","mouseover"]);Oc("onPointerEnter",["pointerout","pointerover"]);Oc("onPointerLeave",["pointerout","pointerover"]);Tu("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Tu("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Tu("onBeforeInput",["compositionend","keypress","textInput","paste"]);Tu("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Tu("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Tu("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var up="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),LB=new Set("cancel close invalid load scroll toggle".split(" ").concat(up));function CM(n,e,t){var r=n.type||"unknown-event";n.currentTarget=t,EV(r,e,void 0,n),n.currentTarget=null}function RL(n,e){e=(e&4)!==0;for(var t=0;t<n.length;t++){var r=n[t],s=r.event;r=r.listeners;e:{var i=void 0;if(e)for(var a=r.length-1;0<=a;a--){var o=r[a],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==i&&s.isPropagationStopped())break e;CM(s,o,u),i=l}else for(a=0;a<r.length;a++){if(o=r[a],l=o.instance,u=o.currentTarget,o=o.listener,l!==i&&s.isPropagationStopped())break e;CM(s,o,u),i=l}}}if(jy)throw n=Qw,jy=!1,Qw=null,n}function Ht(n,e){var t=e[oS];t===void 0&&(t=e[oS]=new Set);var r=n+"__bubble";t.has(r)||(LL(e,n,2,!1),t.add(r))}function o1(n,e,t){var r=0;e&&(r|=4),LL(t,n,r,e)}var Eg="_reactListening"+Math.random().toString(36).slice(2);function Vp(n){if(!n[Eg]){n[Eg]=!0,GR.forEach(function(t){t!=="selectionchange"&&(LB.has(t)||o1(t,!1,n),o1(t,!0,n))});var e=n.nodeType===9?n:n.ownerDocument;e===null||e[Eg]||(e[Eg]=!0,o1("selectionchange",!1,e))}}function LL(n,e,t,r){switch(mL(e)){case 1:var s=ZV;break;case 4:s=HV;break;default:s=j2}t=s.bind(null,e,t,n),s=void 0,!jw||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(s=!0),r?s!==void 0?n.addEventListener(e,t,{capture:!0,passive:s}):n.addEventListener(e,t,!0):s!==void 0?n.addEventListener(e,t,{passive:s}):n.addEventListener(e,t,!1)}function l1(n,e,t,r,s){var i=r;if(!(e&1)&&!(e&2)&&r!==null)e:for(;;){if(r===null)return;var a=r.tag;if(a===3||a===4){var o=r.stateNode.containerInfo;if(o===s||o.nodeType===8&&o.parentNode===s)break;if(a===4)for(a=r.return;a!==null;){var l=a.tag;if((l===3||l===4)&&(l=a.stateNode.containerInfo,l===s||l.nodeType===8&&l.parentNode===s))return;a=a.return}for(;o!==null;){if(a=Ll(o),a===null)return;if(l=a.tag,l===5||l===6){r=i=a;continue e}o=o.parentNode}}r=r.return}tL(function(){var u=i,c=Z2(t),d=[];e:{var h=EL.get(n);if(h!==void 0){var p=J2,g=n;switch(n){case"keypress":if(Ny(t)===0)break e;case"keydown":case"keyup":p=lB;break;case"focusin":g="focus",p=t1;break;case"focusout":g="blur",p=t1;break;case"beforeblur":case"afterblur":p=t1;break;case"click":if(t.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":p=fM;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":p=jV;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":p=dB;break;case CL:case _L:case ML:p=qV;break;case NL:p=pB;break;case"scroll":p=KV;break;case"wheel":p=mB;break;case"copy":case"cut":case"paste":p=tB;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":p=gM}var f=(e&4)!==0,m=!f&&n==="scroll",y=f?h!==null?h+"Capture":null:h;f=[];for(var b=u,x;b!==null;){x=b;var v=x.stateNode;if(x.tag===5&&v!==null&&(x=v,y!==null&&(v=Pp(b,y),v!=null&&f.push(Bp(b,v,x)))),m)break;b=b.return}0<f.length&&(h=new p(h,g,null,t,c),d.push({event:h,listeners:f}))}}if(!(e&7)){e:{if(h=n==="mouseover"||n==="pointerover",p=n==="mouseout"||n==="pointerout",h&&t!==Kw&&(g=t.relatedTarget||t.fromElement)&&(Ll(g)||g[Aa]))break e;if((p||h)&&(h=c.window===c?c:(h=c.ownerDocument)?h.defaultView||h.parentWindow:window,p?(g=t.relatedTarget||t.toElement,p=u,g=g?Ll(g):null,g!==null&&(m=Iu(g),g!==m||g.tag!==5&&g.tag!==6)&&(g=null)):(p=null,g=u),p!==g)){if(f=fM,v="onMouseLeave",y="onMouseEnter",b="mouse",(n==="pointerout"||n==="pointerover")&&(f=gM,v="onPointerLeave",y="onPointerEnter",b="pointer"),m=p==null?h:gc(p),x=g==null?h:gc(g),h=new f(v,b+"leave",p,t,c),h.target=m,h.relatedTarget=x,v=null,Ll(c)===u&&(f=new f(y,b+"enter",g,t,c),f.target=x,f.relatedTarget=m,v=f),m=v,p&&g)t:{for(f=p,y=g,b=0,x=f;x;x=Xu(x))b++;for(x=0,v=y;v;v=Xu(v))x++;for(;0<b-x;)f=Xu(f),b--;for(;0<x-b;)y=Xu(y),x--;for(;b--;){if(f===y||y!==null&&f===y.alternate)break t;f=Xu(f),y=Xu(y)}f=null}else f=null;p!==null&&_M(d,h,p,f,!1),g!==null&&m!==null&&_M(d,m,g,f,!0)}}e:{if(h=u?gc(u):window,p=h.nodeName&&h.nodeName.toLowerCase(),p==="select"||p==="input"&&h.type==="file")var w=SB;else if(xM(h))if(wL)w=CB;else{w=IB;var T=TB}else(p=h.nodeName)&&p.toLowerCase()==="input"&&(h.type==="checkbox"||h.type==="radio")&&(w=kB);if(w&&(w=w(n,u))){vL(d,w,t,c);break e}T&&T(n,h,u),n==="focusout"&&(T=h._wrapperState)&&T.controlled&&h.type==="number"&&Bw(h,"number",h.value)}switch(T=u?gc(u):window,n){case"focusin":(xM(T)||T.contentEditable==="true")&&(fc=T,tS=u,kp=null);break;case"focusout":kp=tS=fc=null;break;case"mousedown":nS=!0;break;case"contextmenu":case"mouseup":case"dragend":nS=!1,IM(d,t,c);break;case"selectionchange":if(NB)break;case"keydown":case"keyup":IM(d,t,c)}var k;if(eT)e:{switch(n){case"compositionstart":var S="onCompositionStart";break e;case"compositionend":S="onCompositionEnd";break e;case"compositionupdate":S="onCompositionUpdate";break e}S=void 0}else pc?bL(n,t)&&(S="onCompositionEnd"):n==="keydown"&&t.keyCode===229&&(S="onCompositionStart");S&&(yL&&t.locale!=="ko"&&(pc||S!=="onCompositionStart"?S==="onCompositionEnd"&&pc&&(k=gL()):(mo=c,Q2="value"in mo?mo.value:mo.textContent,pc=!0)),T=t0(u,S),0<T.length&&(S=new mM(S,n,null,t,c),d.push({event:S,listeners:T}),k?S.data=k:(k=xL(t),k!==null&&(S.data=k)))),(k=yB?bB(n,t):xB(n,t))&&(u=t0(u,"onBeforeInput"),0<u.length&&(c=new mM("onBeforeInput","beforeinput",null,t,c),d.push({event:c,listeners:u}),c.data=k))}RL(d,e)})}function Bp(n,e,t){return{instance:n,listener:e,currentTarget:t}}function t0(n,e){for(var t=e+"Capture",r=[];n!==null;){var s=n,i=s.stateNode;s.tag===5&&i!==null&&(s=i,i=Pp(n,t),i!=null&&r.unshift(Bp(n,i,s)),i=Pp(n,e),i!=null&&r.push(Bp(n,i,s))),n=n.return}return r}function Xu(n){if(n===null)return null;do n=n.return;while(n&&n.tag!==5);return n||null}function _M(n,e,t,r,s){for(var i=e._reactName,a=[];t!==null&&t!==r;){var o=t,l=o.alternate,u=o.stateNode;if(l!==null&&l===r)break;o.tag===5&&u!==null&&(o=u,s?(l=Pp(t,i),l!=null&&a.unshift(Bp(t,l,o))):s||(l=Pp(t,i),l!=null&&a.push(Bp(t,l,o)))),t=t.return}a.length!==0&&n.push({event:e,listeners:a})}var AB=/\r\n?/g,zB=/\u0000|\uFFFD/g;function MM(n){return(typeof n=="string"?n:""+n).replace(AB,`
`).replace(zB,"")}function Rg(n,e,t){if(e=MM(e),MM(n)!==e&&t)throw Error(xe(425))}function n0(){}var rS=null,sS=null;function iS(n,e){return n==="textarea"||n==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var aS=typeof setTimeout=="function"?setTimeout:void 0,DB=typeof clearTimeout=="function"?clearTimeout:void 0,NM=typeof Promise=="function"?Promise:void 0,PB=typeof queueMicrotask=="function"?queueMicrotask:typeof NM<"u"?function(n){return NM.resolve(null).then(n).catch($B)}:aS;function $B(n){setTimeout(function(){throw n})}function u1(n,e){var t=e,r=0;do{var s=t.nextSibling;if(n.removeChild(t),s&&s.nodeType===8)if(t=s.data,t==="/$"){if(r===0){n.removeChild(s),Gp(e);return}r--}else t!=="$"&&t!=="$?"&&t!=="$!"||r++;t=s}while(t);Gp(e)}function Co(n){for(;n!=null;n=n.nextSibling){var e=n.nodeType;if(e===1||e===3)break;if(e===8){if(e=n.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return n}function EM(n){n=n.previousSibling;for(var e=0;n;){if(n.nodeType===8){var t=n.data;if(t==="$"||t==="$!"||t==="$?"){if(e===0)return n;e--}else t==="/$"&&e++}n=n.previousSibling}return null}var fd=Math.random().toString(36).slice(2),Zi="__reactFiber$"+fd,Xp="__reactProps$"+fd,Aa="__reactContainer$"+fd,oS="__reactEvents$"+fd,FB="__reactListeners$"+fd,GB="__reactHandles$"+fd;function Ll(n){var e=n[Zi];if(e)return e;for(var t=n.parentNode;t;){if(e=t[Aa]||t[Zi]){if(t=e.alternate,e.child!==null||t!==null&&t.child!==null)for(n=EM(n);n!==null;){if(t=n[Zi])return t;n=EM(n)}return e}n=t,t=n.parentNode}return null}function _f(n){return n=n[Zi]||n[Aa],!n||n.tag!==5&&n.tag!==6&&n.tag!==13&&n.tag!==3?null:n}function gc(n){if(n.tag===5||n.tag===6)return n.stateNode;throw Error(xe(33))}function sb(n){return n[Xp]||null}var lS=[],yc=-1;function Qo(n){return{current:n}}function Yt(n){0>yc||(n.current=lS[yc],lS[yc]=null,yc--)}function Vt(n,e){yc++,lS[yc]=n.current,n.current=e}var $o={},Cr=Qo($o),as=Qo(!1),Kl=$o;function Wc(n,e){var t=n.type.contextTypes;if(!t)return $o;var r=n.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var s={},i;for(i in t)s[i]=e[i];return r&&(n=n.stateNode,n.__reactInternalMemoizedUnmaskedChildContext=e,n.__reactInternalMemoizedMaskedChildContext=s),s}function os(n){return n=n.childContextTypes,n!=null}function r0(){Yt(as),Yt(Cr)}function RM(n,e,t){if(Cr.current!==$o)throw Error(xe(168));Vt(Cr,e),Vt(as,t)}function AL(n,e,t){var r=n.stateNode;if(e=e.childContextTypes,typeof r.getChildContext!="function")return t;r=r.getChildContext();for(var s in r)if(!(s in e))throw Error(xe(108,TV(n)||"Unknown",s));return dn({},t,r)}function s0(n){return n=(n=n.stateNode)&&n.__reactInternalMemoizedMergedChildContext||$o,Kl=Cr.current,Vt(Cr,n),Vt(as,as.current),!0}function LM(n,e,t){var r=n.stateNode;if(!r)throw Error(xe(169));t?(n=AL(n,e,Kl),r.__reactInternalMemoizedMergedChildContext=n,Yt(as),Yt(Cr),Vt(Cr,n)):Yt(as),Vt(as,t)}var xa=null,ib=!1,c1=!1;function zL(n){xa===null?xa=[n]:xa.push(n)}function OB(n){ib=!0,zL(n)}function Jo(){if(!c1&&xa!==null){c1=!0;var n=0,e=At;try{var t=xa;for(At=1;n<t.length;n++){var r=t[n];do r=r(!0);while(r!==null)}xa=null,ib=!1}catch(s){throw xa!==null&&(xa=xa.slice(n+1)),iL(H2,Jo),s}finally{At=e,c1=!1}}return null}var bc=[],xc=0,i0=null,a0=0,Vs=[],Bs=0,Yl=null,Ca=1,_a="";function xl(n,e){bc[xc++]=a0,bc[xc++]=i0,i0=n,a0=e}function DL(n,e,t){Vs[Bs++]=Ca,Vs[Bs++]=_a,Vs[Bs++]=Yl,Yl=n;var r=Ca;n=_a;var s=32-gi(r)-1;r&=~(1<<s),t+=1;var i=32-gi(e)+s;if(30<i){var a=s-s%5;i=(r&(1<<a)-1).toString(32),r>>=a,s-=a,Ca=1<<32-gi(e)+s|t<<s|r,_a=i+n}else Ca=1<<i|t<<s|r,_a=n}function nT(n){n.return!==null&&(xl(n,1),DL(n,1,0))}function rT(n){for(;n===i0;)i0=bc[--xc],bc[xc]=null,a0=bc[--xc],bc[xc]=null;for(;n===Yl;)Yl=Vs[--Bs],Vs[Bs]=null,_a=Vs[--Bs],Vs[Bs]=null,Ca=Vs[--Bs],Vs[Bs]=null}var Cs=null,Ss=null,qt=!1,di=null;function PL(n,e){var t=Zs(5,null,null,0);t.elementType="DELETED",t.stateNode=e,t.return=n,e=n.deletions,e===null?(n.deletions=[t],n.flags|=16):e.push(t)}function AM(n,e){switch(n.tag){case 5:var t=n.type;return e=e.nodeType!==1||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(n.stateNode=e,Cs=n,Ss=Co(e.firstChild),!0):!1;case 6:return e=n.pendingProps===""||e.nodeType!==3?null:e,e!==null?(n.stateNode=e,Cs=n,Ss=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(t=Yl!==null?{id:Ca,overflow:_a}:null,n.memoizedState={dehydrated:e,treeContext:t,retryLane:1073741824},t=Zs(18,null,null,0),t.stateNode=e,t.return=n,n.child=t,Cs=n,Ss=null,!0):!1;default:return!1}}function uS(n){return(n.mode&1)!==0&&(n.flags&128)===0}function cS(n){if(qt){var e=Ss;if(e){var t=e;if(!AM(n,e)){if(uS(n))throw Error(xe(418));e=Co(t.nextSibling);var r=Cs;e&&AM(n,e)?PL(r,t):(n.flags=n.flags&-4097|2,qt=!1,Cs=n)}}else{if(uS(n))throw Error(xe(418));n.flags=n.flags&-4097|2,qt=!1,Cs=n}}}function zM(n){for(n=n.return;n!==null&&n.tag!==5&&n.tag!==3&&n.tag!==13;)n=n.return;Cs=n}function Lg(n){if(n!==Cs)return!1;if(!qt)return zM(n),qt=!0,!1;var e;if((e=n.tag!==3)&&!(e=n.tag!==5)&&(e=n.type,e=e!=="head"&&e!=="body"&&!iS(n.type,n.memoizedProps)),e&&(e=Ss)){if(uS(n))throw $L(),Error(xe(418));for(;e;)PL(n,e),e=Co(e.nextSibling)}if(zM(n),n.tag===13){if(n=n.memoizedState,n=n!==null?n.dehydrated:null,!n)throw Error(xe(317));e:{for(n=n.nextSibling,e=0;n;){if(n.nodeType===8){var t=n.data;if(t==="/$"){if(e===0){Ss=Co(n.nextSibling);break e}e--}else t!=="$"&&t!=="$!"&&t!=="$?"||e++}n=n.nextSibling}Ss=null}}else Ss=Cs?Co(n.stateNode.nextSibling):null;return!0}function $L(){for(var n=Ss;n;)n=Co(n.nextSibling)}function Vc(){Ss=Cs=null,qt=!1}function sT(n){di===null?di=[n]:di.push(n)}var WB=Ua.ReactCurrentBatchConfig;function Vh(n,e,t){if(n=t.ref,n!==null&&typeof n!="function"&&typeof n!="object"){if(t._owner){if(t=t._owner,t){if(t.tag!==1)throw Error(xe(309));var r=t.stateNode}if(!r)throw Error(xe(147,n));var s=r,i=""+n;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===i?e.ref:(e=function(a){var o=s.refs;a===null?delete o[i]:o[i]=a},e._stringRef=i,e)}if(typeof n!="string")throw Error(xe(284));if(!t._owner)throw Error(xe(290,n))}return n}function Ag(n,e){throw n=Object.prototype.toString.call(e),Error(xe(31,n==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":n))}function DM(n){var e=n._init;return e(n._payload)}function FL(n){function e(y,b){if(n){var x=y.deletions;x===null?(y.deletions=[b],y.flags|=16):x.push(b)}}function t(y,b){if(!n)return null;for(;b!==null;)e(y,b),b=b.sibling;return null}function r(y,b){for(y=new Map;b!==null;)b.key!==null?y.set(b.key,b):y.set(b.index,b),b=b.sibling;return y}function s(y,b){return y=Eo(y,b),y.index=0,y.sibling=null,y}function i(y,b,x){return y.index=x,n?(x=y.alternate,x!==null?(x=x.index,x<b?(y.flags|=2,b):x):(y.flags|=2,b)):(y.flags|=1048576,b)}function a(y){return n&&y.alternate===null&&(y.flags|=2),y}function o(y,b,x,v){return b===null||b.tag!==6?(b=y1(x,y.mode,v),b.return=y,b):(b=s(b,x),b.return=y,b)}function l(y,b,x,v){var w=x.type;return w===hc?c(y,b,x.props.children,v,x.key):b!==null&&(b.elementType===w||typeof w=="object"&&w!==null&&w.$$typeof===lo&&DM(w)===b.type)?(v=s(b,x.props),v.ref=Vh(y,b,x),v.return=y,v):(v=Py(x.type,x.key,x.props,null,y.mode,v),v.ref=Vh(y,b,x),v.return=y,v)}function u(y,b,x,v){return b===null||b.tag!==4||b.stateNode.containerInfo!==x.containerInfo||b.stateNode.implementation!==x.implementation?(b=b1(x,y.mode,v),b.return=y,b):(b=s(b,x.children||[]),b.return=y,b)}function c(y,b,x,v,w){return b===null||b.tag!==7?(b=Wl(x,y.mode,v,w),b.return=y,b):(b=s(b,x),b.return=y,b)}function d(y,b,x){if(typeof b=="string"&&b!==""||typeof b=="number")return b=y1(""+b,y.mode,x),b.return=y,b;if(typeof b=="object"&&b!==null){switch(b.$$typeof){case Sg:return x=Py(b.type,b.key,b.props,null,y.mode,x),x.ref=Vh(y,null,b),x.return=y,x;case dc:return b=b1(b,y.mode,x),b.return=y,b;case lo:var v=b._init;return d(y,v(b._payload),x)}if(op(b)||$h(b))return b=Wl(b,y.mode,x,null),b.return=y,b;Ag(y,b)}return null}function h(y,b,x,v){var w=b!==null?b.key:null;if(typeof x=="string"&&x!==""||typeof x=="number")return w!==null?null:o(y,b,""+x,v);if(typeof x=="object"&&x!==null){switch(x.$$typeof){case Sg:return x.key===w?l(y,b,x,v):null;case dc:return x.key===w?u(y,b,x,v):null;case lo:return w=x._init,h(y,b,w(x._payload),v)}if(op(x)||$h(x))return w!==null?null:c(y,b,x,v,null);Ag(y,x)}return null}function p(y,b,x,v,w){if(typeof v=="string"&&v!==""||typeof v=="number")return y=y.get(x)||null,o(b,y,""+v,w);if(typeof v=="object"&&v!==null){switch(v.$$typeof){case Sg:return y=y.get(v.key===null?x:v.key)||null,l(b,y,v,w);case dc:return y=y.get(v.key===null?x:v.key)||null,u(b,y,v,w);case lo:var T=v._init;return p(y,b,x,T(v._payload),w)}if(op(v)||$h(v))return y=y.get(x)||null,c(b,y,v,w,null);Ag(b,v)}return null}function g(y,b,x,v){for(var w=null,T=null,k=b,S=b=0,C=null;k!==null&&S<x.length;S++){k.index>S?(C=k,k=null):C=k.sibling;var _=h(y,k,x[S],v);if(_===null){k===null&&(k=C);break}n&&k&&_.alternate===null&&e(y,k),b=i(_,b,S),T===null?w=_:T.sibling=_,T=_,k=C}if(S===x.length)return t(y,k),qt&&xl(y,S),w;if(k===null){for(;S<x.length;S++)k=d(y,x[S],v),k!==null&&(b=i(k,b,S),T===null?w=k:T.sibling=k,T=k);return qt&&xl(y,S),w}for(k=r(y,k);S<x.length;S++)C=p(k,y,S,x[S],v),C!==null&&(n&&C.alternate!==null&&k.delete(C.key===null?S:C.key),b=i(C,b,S),T===null?w=C:T.sibling=C,T=C);return n&&k.forEach(function(z){return e(y,z)}),qt&&xl(y,S),w}function f(y,b,x,v){var w=$h(x);if(typeof w!="function")throw Error(xe(150));if(x=w.call(x),x==null)throw Error(xe(151));for(var T=w=null,k=b,S=b=0,C=null,_=x.next();k!==null&&!_.done;S++,_=x.next()){k.index>S?(C=k,k=null):C=k.sibling;var z=h(y,k,_.value,v);if(z===null){k===null&&(k=C);break}n&&k&&z.alternate===null&&e(y,k),b=i(z,b,S),T===null?w=z:T.sibling=z,T=z,k=C}if(_.done)return t(y,k),qt&&xl(y,S),w;if(k===null){for(;!_.done;S++,_=x.next())_=d(y,_.value,v),_!==null&&(b=i(_,b,S),T===null?w=_:T.sibling=_,T=_);return qt&&xl(y,S),w}for(k=r(y,k);!_.done;S++,_=x.next())_=p(k,y,S,_.value,v),_!==null&&(n&&_.alternate!==null&&k.delete(_.key===null?S:_.key),b=i(_,b,S),T===null?w=_:T.sibling=_,T=_);return n&&k.forEach(function(P){return e(y,P)}),qt&&xl(y,S),w}function m(y,b,x,v){if(typeof x=="object"&&x!==null&&x.type===hc&&x.key===null&&(x=x.props.children),typeof x=="object"&&x!==null){switch(x.$$typeof){case Sg:e:{for(var w=x.key,T=b;T!==null;){if(T.key===w){if(w=x.type,w===hc){if(T.tag===7){t(y,T.sibling),b=s(T,x.props.children),b.return=y,y=b;break e}}else if(T.elementType===w||typeof w=="object"&&w!==null&&w.$$typeof===lo&&DM(w)===T.type){t(y,T.sibling),b=s(T,x.props),b.ref=Vh(y,T,x),b.return=y,y=b;break e}t(y,T);break}else e(y,T);T=T.sibling}x.type===hc?(b=Wl(x.props.children,y.mode,v,x.key),b.return=y,y=b):(v=Py(x.type,x.key,x.props,null,y.mode,v),v.ref=Vh(y,b,x),v.return=y,y=v)}return a(y);case dc:e:{for(T=x.key;b!==null;){if(b.key===T)if(b.tag===4&&b.stateNode.containerInfo===x.containerInfo&&b.stateNode.implementation===x.implementation){t(y,b.sibling),b=s(b,x.children||[]),b.return=y,y=b;break e}else{t(y,b);break}else e(y,b);b=b.sibling}b=b1(x,y.mode,v),b.return=y,y=b}return a(y);case lo:return T=x._init,m(y,b,T(x._payload),v)}if(op(x))return g(y,b,x,v);if($h(x))return f(y,b,x,v);Ag(y,x)}return typeof x=="string"&&x!==""||typeof x=="number"?(x=""+x,b!==null&&b.tag===6?(t(y,b.sibling),b=s(b,x),b.return=y,y=b):(t(y,b),b=y1(x,y.mode,v),b.return=y,y=b),a(y)):t(y,b)}return m}var Bc=FL(!0),GL=FL(!1),o0=Qo(null),l0=null,vc=null,iT=null;function aT(){iT=vc=l0=null}function oT(n){var e=o0.current;Yt(o0),n._currentValue=e}function dS(n,e,t){for(;n!==null;){var r=n.alternate;if((n.childLanes&e)!==e?(n.childLanes|=e,r!==null&&(r.childLanes|=e)):r!==null&&(r.childLanes&e)!==e&&(r.childLanes|=e),n===t)break;n=n.return}}function Rc(n,e){l0=n,iT=vc=null,n=n.dependencies,n!==null&&n.firstContext!==null&&(n.lanes&e&&(ss=!0),n.firstContext=null)}function Js(n){var e=n._currentValue;if(iT!==n)if(n={context:n,memoizedValue:e,next:null},vc===null){if(l0===null)throw Error(xe(308));vc=n,l0.dependencies={lanes:0,firstContext:n}}else vc=vc.next=n;return e}var Al=null;function lT(n){Al===null?Al=[n]:Al.push(n)}function OL(n,e,t,r){var s=e.interleaved;return s===null?(t.next=t,lT(e)):(t.next=s.next,s.next=t),e.interleaved=t,za(n,r)}function za(n,e){n.lanes|=e;var t=n.alternate;for(t!==null&&(t.lanes|=e),t=n,n=n.return;n!==null;)n.childLanes|=e,t=n.alternate,t!==null&&(t.childLanes|=e),t=n,n=n.return;return t.tag===3?t.stateNode:null}var uo=!1;function uT(n){n.updateQueue={baseState:n.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function WL(n,e){n=n.updateQueue,e.updateQueue===n&&(e.updateQueue={baseState:n.baseState,firstBaseUpdate:n.firstBaseUpdate,lastBaseUpdate:n.lastBaseUpdate,shared:n.shared,effects:n.effects})}function Na(n,e){return{eventTime:n,lane:e,tag:0,payload:null,callback:null,next:null}}function _o(n,e,t){var r=n.updateQueue;if(r===null)return null;if(r=r.shared,Ct&2){var s=r.pending;return s===null?e.next=e:(e.next=s.next,s.next=e),r.pending=e,za(n,t)}return s=r.interleaved,s===null?(e.next=e,lT(r)):(e.next=s.next,s.next=e),r.interleaved=e,za(n,t)}function Ey(n,e,t){if(e=e.updateQueue,e!==null&&(e=e.shared,(t&4194240)!==0)){var r=e.lanes;r&=n.pendingLanes,t|=r,e.lanes=t,K2(n,t)}}function PM(n,e){var t=n.updateQueue,r=n.alternate;if(r!==null&&(r=r.updateQueue,t===r)){var s=null,i=null;if(t=t.firstBaseUpdate,t!==null){do{var a={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};i===null?s=i=a:i=i.next=a,t=t.next}while(t!==null);i===null?s=i=e:i=i.next=e}else s=i=e;t={baseState:r.baseState,firstBaseUpdate:s,lastBaseUpdate:i,shared:r.shared,effects:r.effects},n.updateQueue=t;return}n=t.lastBaseUpdate,n===null?t.firstBaseUpdate=e:n.next=e,t.lastBaseUpdate=e}function u0(n,e,t,r){var s=n.updateQueue;uo=!1;var i=s.firstBaseUpdate,a=s.lastBaseUpdate,o=s.shared.pending;if(o!==null){s.shared.pending=null;var l=o,u=l.next;l.next=null,a===null?i=u:a.next=u,a=l;var c=n.alternate;c!==null&&(c=c.updateQueue,o=c.lastBaseUpdate,o!==a&&(o===null?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l))}if(i!==null){var d=s.baseState;a=0,c=u=l=null,o=i;do{var h=o.lane,p=o.eventTime;if((r&h)===h){c!==null&&(c=c.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var g=n,f=o;switch(h=e,p=t,f.tag){case 1:if(g=f.payload,typeof g=="function"){d=g.call(p,d,h);break e}d=g;break e;case 3:g.flags=g.flags&-65537|128;case 0:if(g=f.payload,h=typeof g=="function"?g.call(p,d,h):g,h==null)break e;d=dn({},d,h);break e;case 2:uo=!0}}o.callback!==null&&o.lane!==0&&(n.flags|=64,h=s.effects,h===null?s.effects=[o]:h.push(o))}else p={eventTime:p,lane:h,tag:o.tag,payload:o.payload,callback:o.callback,next:null},c===null?(u=c=p,l=d):c=c.next=p,a|=h;if(o=o.next,o===null){if(o=s.shared.pending,o===null)break;h=o,o=h.next,h.next=null,s.lastBaseUpdate=h,s.shared.pending=null}}while(!0);if(c===null&&(l=d),s.baseState=l,s.firstBaseUpdate=u,s.lastBaseUpdate=c,e=s.shared.interleaved,e!==null){s=e;do a|=s.lane,s=s.next;while(s!==e)}else i===null&&(s.shared.lanes=0);Ql|=a,n.lanes=a,n.memoizedState=d}}function $M(n,e,t){if(n=e.effects,e.effects=null,n!==null)for(e=0;e<n.length;e++){var r=n[e],s=r.callback;if(s!==null){if(r.callback=null,r=t,typeof s!="function")throw Error(xe(191,s));s.call(r)}}}var Mf={},Ji=Qo(Mf),Up=Qo(Mf),Zp=Qo(Mf);function zl(n){if(n===Mf)throw Error(xe(174));return n}function cT(n,e){switch(Vt(Zp,e),Vt(Up,n),Vt(Ji,Mf),n=e.nodeType,n){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Uw(null,"");break;default:n=n===8?e.parentNode:e,e=n.namespaceURI||null,n=n.tagName,e=Uw(e,n)}Yt(Ji),Vt(Ji,e)}function Xc(){Yt(Ji),Yt(Up),Yt(Zp)}function VL(n){zl(Zp.current);var e=zl(Ji.current),t=Uw(e,n.type);e!==t&&(Vt(Up,n),Vt(Ji,t))}function dT(n){Up.current===n&&(Yt(Ji),Yt(Up))}var an=Qo(0);function c0(n){for(var e=n;e!==null;){if(e.tag===13){var t=e.memoizedState;if(t!==null&&(t=t.dehydrated,t===null||t.data==="$?"||t.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if(e.flags&128)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===n)break;for(;e.sibling===null;){if(e.return===null||e.return===n)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var d1=[];function hT(){for(var n=0;n<d1.length;n++)d1[n]._workInProgressVersionPrimary=null;d1.length=0}var Ry=Ua.ReactCurrentDispatcher,h1=Ua.ReactCurrentBatchConfig,jl=0,cn=null,Dn=null,jn=null,d0=!1,Cp=!1,Hp=0,VB=0;function gr(){throw Error(xe(321))}function pT(n,e){if(e===null)return!1;for(var t=0;t<e.length&&t<n.length;t++)if(!Si(n[t],e[t]))return!1;return!0}function fT(n,e,t,r,s,i){if(jl=i,cn=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,Ry.current=n===null||n.memoizedState===null?ZB:HB,n=t(r,s),Cp){i=0;do{if(Cp=!1,Hp=0,25<=i)throw Error(xe(301));i+=1,jn=Dn=null,e.updateQueue=null,Ry.current=KB,n=t(r,s)}while(Cp)}if(Ry.current=h0,e=Dn!==null&&Dn.next!==null,jl=0,jn=Dn=cn=null,d0=!1,e)throw Error(xe(300));return n}function mT(){var n=Hp!==0;return Hp=0,n}function Wi(){var n={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return jn===null?cn.memoizedState=jn=n:jn=jn.next=n,jn}function qs(){if(Dn===null){var n=cn.alternate;n=n!==null?n.memoizedState:null}else n=Dn.next;var e=jn===null?cn.memoizedState:jn.next;if(e!==null)jn=e,Dn=n;else{if(n===null)throw Error(xe(310));Dn=n,n={memoizedState:Dn.memoizedState,baseState:Dn.baseState,baseQueue:Dn.baseQueue,queue:Dn.queue,next:null},jn===null?cn.memoizedState=jn=n:jn=jn.next=n}return jn}function Kp(n,e){return typeof e=="function"?e(n):e}function p1(n){var e=qs(),t=e.queue;if(t===null)throw Error(xe(311));t.lastRenderedReducer=n;var r=Dn,s=r.baseQueue,i=t.pending;if(i!==null){if(s!==null){var a=s.next;s.next=i.next,i.next=a}r.baseQueue=s=i,t.pending=null}if(s!==null){i=s.next,r=r.baseState;var o=a=null,l=null,u=i;do{var c=u.lane;if((jl&c)===c)l!==null&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:n(r,u.action);else{var d={lane:c,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};l===null?(o=l=d,a=r):l=l.next=d,cn.lanes|=c,Ql|=c}u=u.next}while(u!==null&&u!==i);l===null?a=r:l.next=o,Si(r,e.memoizedState)||(ss=!0),e.memoizedState=r,e.baseState=a,e.baseQueue=l,t.lastRenderedState=r}if(n=t.interleaved,n!==null){s=n;do i=s.lane,cn.lanes|=i,Ql|=i,s=s.next;while(s!==n)}else s===null&&(t.lanes=0);return[e.memoizedState,t.dispatch]}function f1(n){var e=qs(),t=e.queue;if(t===null)throw Error(xe(311));t.lastRenderedReducer=n;var r=t.dispatch,s=t.pending,i=e.memoizedState;if(s!==null){t.pending=null;var a=s=s.next;do i=n(i,a.action),a=a.next;while(a!==s);Si(i,e.memoizedState)||(ss=!0),e.memoizedState=i,e.baseQueue===null&&(e.baseState=i),t.lastRenderedState=i}return[i,r]}function BL(){}function XL(n,e){var t=cn,r=qs(),s=e(),i=!Si(r.memoizedState,s);if(i&&(r.memoizedState=s,ss=!0),r=r.queue,gT(HL.bind(null,t,r,n),[n]),r.getSnapshot!==e||i||jn!==null&&jn.memoizedState.tag&1){if(t.flags|=2048,Yp(9,ZL.bind(null,t,r,s,e),void 0,null),rr===null)throw Error(xe(349));jl&30||UL(t,e,s)}return s}function UL(n,e,t){n.flags|=16384,n={getSnapshot:e,value:t},e=cn.updateQueue,e===null?(e={lastEffect:null,stores:null},cn.updateQueue=e,e.stores=[n]):(t=e.stores,t===null?e.stores=[n]:t.push(n))}function ZL(n,e,t,r){e.value=t,e.getSnapshot=r,KL(e)&&YL(n)}function HL(n,e,t){return t(function(){KL(e)&&YL(n)})}function KL(n){var e=n.getSnapshot;n=n.value;try{var t=e();return!Si(n,t)}catch{return!0}}function YL(n){var e=za(n,1);e!==null&&yi(e,n,1,-1)}function FM(n){var e=Wi();return typeof n=="function"&&(n=n()),e.memoizedState=e.baseState=n,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Kp,lastRenderedState:n},e.queue=n,n=n.dispatch=UB.bind(null,cn,n),[e.memoizedState,n]}function Yp(n,e,t,r){return n={tag:n,create:e,destroy:t,deps:r,next:null},e=cn.updateQueue,e===null?(e={lastEffect:null,stores:null},cn.updateQueue=e,e.lastEffect=n.next=n):(t=e.lastEffect,t===null?e.lastEffect=n.next=n:(r=t.next,t.next=n,n.next=r,e.lastEffect=n)),n}function jL(){return qs().memoizedState}function Ly(n,e,t,r){var s=Wi();cn.flags|=n,s.memoizedState=Yp(1|e,t,void 0,r===void 0?null:r)}function ab(n,e,t,r){var s=qs();r=r===void 0?null:r;var i=void 0;if(Dn!==null){var a=Dn.memoizedState;if(i=a.destroy,r!==null&&pT(r,a.deps)){s.memoizedState=Yp(e,t,i,r);return}}cn.flags|=n,s.memoizedState=Yp(1|e,t,i,r)}function GM(n,e){return Ly(8390656,8,n,e)}function gT(n,e){return ab(2048,8,n,e)}function QL(n,e){return ab(4,2,n,e)}function JL(n,e){return ab(4,4,n,e)}function qL(n,e){if(typeof e=="function")return n=n(),e(n),function(){e(null)};if(e!=null)return n=n(),e.current=n,function(){e.current=null}}function eA(n,e,t){return t=t!=null?t.concat([n]):null,ab(4,4,qL.bind(null,e,n),t)}function yT(){}function tA(n,e){var t=qs();e=e===void 0?null:e;var r=t.memoizedState;return r!==null&&e!==null&&pT(e,r[1])?r[0]:(t.memoizedState=[n,e],n)}function nA(n,e){var t=qs();e=e===void 0?null:e;var r=t.memoizedState;return r!==null&&e!==null&&pT(e,r[1])?r[0]:(n=n(),t.memoizedState=[n,e],n)}function rA(n,e,t){return jl&21?(Si(t,e)||(t=lL(),cn.lanes|=t,Ql|=t,n.baseState=!0),e):(n.baseState&&(n.baseState=!1,ss=!0),n.memoizedState=t)}function BB(n,e){var t=At;At=t!==0&&4>t?t:4,n(!0);var r=h1.transition;h1.transition={};try{n(!1),e()}finally{At=t,h1.transition=r}}function sA(){return qs().memoizedState}function XB(n,e,t){var r=No(n);if(t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},iA(n))aA(e,t);else if(t=OL(n,e,t,r),t!==null){var s=Or();yi(t,n,r,s),oA(t,e,r)}}function UB(n,e,t){var r=No(n),s={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(iA(n))aA(e,s);else{var i=n.alternate;if(n.lanes===0&&(i===null||i.lanes===0)&&(i=e.lastRenderedReducer,i!==null))try{var a=e.lastRenderedState,o=i(a,t);if(s.hasEagerState=!0,s.eagerState=o,Si(o,a)){var l=e.interleaved;l===null?(s.next=s,lT(e)):(s.next=l.next,l.next=s),e.interleaved=s;return}}catch{}finally{}t=OL(n,e,s,r),t!==null&&(s=Or(),yi(t,n,r,s),oA(t,e,r))}}function iA(n){var e=n.alternate;return n===cn||e!==null&&e===cn}function aA(n,e){Cp=d0=!0;var t=n.pending;t===null?e.next=e:(e.next=t.next,t.next=e),n.pending=e}function oA(n,e,t){if(t&4194240){var r=e.lanes;r&=n.pendingLanes,t|=r,e.lanes=t,K2(n,t)}}var h0={readContext:Js,useCallback:gr,useContext:gr,useEffect:gr,useImperativeHandle:gr,useInsertionEffect:gr,useLayoutEffect:gr,useMemo:gr,useReducer:gr,useRef:gr,useState:gr,useDebugValue:gr,useDeferredValue:gr,useTransition:gr,useMutableSource:gr,useSyncExternalStore:gr,useId:gr,unstable_isNewReconciler:!1},ZB={readContext:Js,useCallback:function(n,e){return Wi().memoizedState=[n,e===void 0?null:e],n},useContext:Js,useEffect:GM,useImperativeHandle:function(n,e,t){return t=t!=null?t.concat([n]):null,Ly(4194308,4,qL.bind(null,e,n),t)},useLayoutEffect:function(n,e){return Ly(4194308,4,n,e)},useInsertionEffect:function(n,e){return Ly(4,2,n,e)},useMemo:function(n,e){var t=Wi();return e=e===void 0?null:e,n=n(),t.memoizedState=[n,e],n},useReducer:function(n,e,t){var r=Wi();return e=t!==void 0?t(e):e,r.memoizedState=r.baseState=e,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:n,lastRenderedState:e},r.queue=n,n=n.dispatch=XB.bind(null,cn,n),[r.memoizedState,n]},useRef:function(n){var e=Wi();return n={current:n},e.memoizedState=n},useState:FM,useDebugValue:yT,useDeferredValue:function(n){return Wi().memoizedState=n},useTransition:function(){var n=FM(!1),e=n[0];return n=BB.bind(null,n[1]),Wi().memoizedState=n,[e,n]},useMutableSource:function(){},useSyncExternalStore:function(n,e,t){var r=cn,s=Wi();if(qt){if(t===void 0)throw Error(xe(407));t=t()}else{if(t=e(),rr===null)throw Error(xe(349));jl&30||UL(r,e,t)}s.memoizedState=t;var i={value:t,getSnapshot:e};return s.queue=i,GM(HL.bind(null,r,i,n),[n]),r.flags|=2048,Yp(9,ZL.bind(null,r,i,t,e),void 0,null),t},useId:function(){var n=Wi(),e=rr.identifierPrefix;if(qt){var t=_a,r=Ca;t=(r&~(1<<32-gi(r)-1)).toString(32)+t,e=":"+e+"R"+t,t=Hp++,0<t&&(e+="H"+t.toString(32)),e+=":"}else t=VB++,e=":"+e+"r"+t.toString(32)+":";return n.memoizedState=e},unstable_isNewReconciler:!1},HB={readContext:Js,useCallback:tA,useContext:Js,useEffect:gT,useImperativeHandle:eA,useInsertionEffect:QL,useLayoutEffect:JL,useMemo:nA,useReducer:p1,useRef:jL,useState:function(){return p1(Kp)},useDebugValue:yT,useDeferredValue:function(n){var e=qs();return rA(e,Dn.memoizedState,n)},useTransition:function(){var n=p1(Kp)[0],e=qs().memoizedState;return[n,e]},useMutableSource:BL,useSyncExternalStore:XL,useId:sA,unstable_isNewReconciler:!1},KB={readContext:Js,useCallback:tA,useContext:Js,useEffect:gT,useImperativeHandle:eA,useInsertionEffect:QL,useLayoutEffect:JL,useMemo:nA,useReducer:f1,useRef:jL,useState:function(){return f1(Kp)},useDebugValue:yT,useDeferredValue:function(n){var e=qs();return Dn===null?e.memoizedState=n:rA(e,Dn.memoizedState,n)},useTransition:function(){var n=f1(Kp)[0],e=qs().memoizedState;return[n,e]},useMutableSource:BL,useSyncExternalStore:XL,useId:sA,unstable_isNewReconciler:!1};function ui(n,e){if(n&&n.defaultProps){e=dn({},e),n=n.defaultProps;for(var t in n)e[t]===void 0&&(e[t]=n[t]);return e}return e}function hS(n,e,t,r){e=n.memoizedState,t=t(r,e),t=t==null?e:dn({},e,t),n.memoizedState=t,n.lanes===0&&(n.updateQueue.baseState=t)}var ob={isMounted:function(n){return(n=n._reactInternals)?Iu(n)===n:!1},enqueueSetState:function(n,e,t){n=n._reactInternals;var r=Or(),s=No(n),i=Na(r,s);i.payload=e,t!=null&&(i.callback=t),e=_o(n,i,s),e!==null&&(yi(e,n,s,r),Ey(e,n,s))},enqueueReplaceState:function(n,e,t){n=n._reactInternals;var r=Or(),s=No(n),i=Na(r,s);i.tag=1,i.payload=e,t!=null&&(i.callback=t),e=_o(n,i,s),e!==null&&(yi(e,n,s,r),Ey(e,n,s))},enqueueForceUpdate:function(n,e){n=n._reactInternals;var t=Or(),r=No(n),s=Na(t,r);s.tag=2,e!=null&&(s.callback=e),e=_o(n,s,r),e!==null&&(yi(e,n,r,t),Ey(e,n,r))}};function OM(n,e,t,r,s,i,a){return n=n.stateNode,typeof n.shouldComponentUpdate=="function"?n.shouldComponentUpdate(r,i,a):e.prototype&&e.prototype.isPureReactComponent?!Wp(t,r)||!Wp(s,i):!0}function lA(n,e,t){var r=!1,s=$o,i=e.contextType;return typeof i=="object"&&i!==null?i=Js(i):(s=os(e)?Kl:Cr.current,r=e.contextTypes,i=(r=r!=null)?Wc(n,s):$o),e=new e(t,i),n.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=ob,n.stateNode=e,e._reactInternals=n,r&&(n=n.stateNode,n.__reactInternalMemoizedUnmaskedChildContext=s,n.__reactInternalMemoizedMaskedChildContext=i),e}function WM(n,e,t,r){n=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(t,r),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(t,r),e.state!==n&&ob.enqueueReplaceState(e,e.state,null)}function pS(n,e,t,r){var s=n.stateNode;s.props=t,s.state=n.memoizedState,s.refs={},uT(n);var i=e.contextType;typeof i=="object"&&i!==null?s.context=Js(i):(i=os(e)?Kl:Cr.current,s.context=Wc(n,i)),s.state=n.memoizedState,i=e.getDerivedStateFromProps,typeof i=="function"&&(hS(n,e,i,t),s.state=n.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof s.getSnapshotBeforeUpdate=="function"||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(e=s.state,typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount(),e!==s.state&&ob.enqueueReplaceState(s,s.state,null),u0(n,t,s,r),s.state=n.memoizedState),typeof s.componentDidMount=="function"&&(n.flags|=4194308)}function Uc(n,e){try{var t="",r=e;do t+=SV(r),r=r.return;while(r);var s=t}catch(i){s=`
Error generating stack: `+i.message+`
`+i.stack}return{value:n,source:e,stack:s,digest:null}}function m1(n,e,t){return{value:n,source:null,stack:t??null,digest:e??null}}function fS(n,e){try{console.error(e.value)}catch(t){setTimeout(function(){throw t})}}var YB=typeof WeakMap=="function"?WeakMap:Map;function uA(n,e,t){t=Na(-1,t),t.tag=3,t.payload={element:null};var r=e.value;return t.callback=function(){f0||(f0=!0,IS=r),fS(n,e)},t}function cA(n,e,t){t=Na(-1,t),t.tag=3;var r=n.type.getDerivedStateFromError;if(typeof r=="function"){var s=e.value;t.payload=function(){return r(s)},t.callback=function(){fS(n,e)}}var i=n.stateNode;return i!==null&&typeof i.componentDidCatch=="function"&&(t.callback=function(){fS(n,e),typeof r!="function"&&(Mo===null?Mo=new Set([this]):Mo.add(this));var a=e.stack;this.componentDidCatch(e.value,{componentStack:a!==null?a:""})}),t}function VM(n,e,t){var r=n.pingCache;if(r===null){r=n.pingCache=new YB;var s=new Set;r.set(e,s)}else s=r.get(e),s===void 0&&(s=new Set,r.set(e,s));s.has(t)||(s.add(t),n=uX.bind(null,n,e,t),e.then(n,n))}function BM(n){do{var e;if((e=n.tag===13)&&(e=n.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return n;n=n.return}while(n!==null);return null}function XM(n,e,t,r,s){return n.mode&1?(n.flags|=65536,n.lanes=s,n):(n===e?n.flags|=65536:(n.flags|=128,t.flags|=131072,t.flags&=-52805,t.tag===1&&(t.alternate===null?t.tag=17:(e=Na(-1,1),e.tag=2,_o(t,e,1))),t.lanes|=1),n)}var jB=Ua.ReactCurrentOwner,ss=!1;function Dr(n,e,t,r){e.child=n===null?GL(e,null,t,r):Bc(e,n.child,t,r)}function UM(n,e,t,r,s){t=t.render;var i=e.ref;return Rc(e,s),r=fT(n,e,t,r,i,s),t=mT(),n!==null&&!ss?(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~s,Da(n,e,s)):(qt&&t&&nT(e),e.flags|=1,Dr(n,e,r,s),e.child)}function ZM(n,e,t,r,s){if(n===null){var i=t.type;return typeof i=="function"&&!kT(i)&&i.defaultProps===void 0&&t.compare===null&&t.defaultProps===void 0?(e.tag=15,e.type=i,dA(n,e,i,r,s)):(n=Py(t.type,null,r,e,e.mode,s),n.ref=e.ref,n.return=e,e.child=n)}if(i=n.child,!(n.lanes&s)){var a=i.memoizedProps;if(t=t.compare,t=t!==null?t:Wp,t(a,r)&&n.ref===e.ref)return Da(n,e,s)}return e.flags|=1,n=Eo(i,r),n.ref=e.ref,n.return=e,e.child=n}function dA(n,e,t,r,s){if(n!==null){var i=n.memoizedProps;if(Wp(i,r)&&n.ref===e.ref)if(ss=!1,e.pendingProps=r=i,(n.lanes&s)!==0)n.flags&131072&&(ss=!0);else return e.lanes=n.lanes,Da(n,e,s)}return mS(n,e,t,r,s)}function hA(n,e,t){var r=e.pendingProps,s=r.children,i=n!==null?n.memoizedState:null;if(r.mode==="hidden")if(!(e.mode&1))e.memoizedState={baseLanes:0,cachePool:null,transitions:null},Vt(Sc,vs),vs|=t;else{if(!(t&1073741824))return n=i!==null?i.baseLanes|t:t,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:n,cachePool:null,transitions:null},e.updateQueue=null,Vt(Sc,vs),vs|=n,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=i!==null?i.baseLanes:t,Vt(Sc,vs),vs|=r}else i!==null?(r=i.baseLanes|t,e.memoizedState=null):r=t,Vt(Sc,vs),vs|=r;return Dr(n,e,s,t),e.child}function pA(n,e){var t=e.ref;(n===null&&t!==null||n!==null&&n.ref!==t)&&(e.flags|=512,e.flags|=2097152)}function mS(n,e,t,r,s){var i=os(t)?Kl:Cr.current;return i=Wc(e,i),Rc(e,s),t=fT(n,e,t,r,i,s),r=mT(),n!==null&&!ss?(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~s,Da(n,e,s)):(qt&&r&&nT(e),e.flags|=1,Dr(n,e,t,s),e.child)}function HM(n,e,t,r,s){if(os(t)){var i=!0;s0(e)}else i=!1;if(Rc(e,s),e.stateNode===null)Ay(n,e),lA(e,t,r),pS(e,t,r,s),r=!0;else if(n===null){var a=e.stateNode,o=e.memoizedProps;a.props=o;var l=a.context,u=t.contextType;typeof u=="object"&&u!==null?u=Js(u):(u=os(t)?Kl:Cr.current,u=Wc(e,u));var c=t.getDerivedStateFromProps,d=typeof c=="function"||typeof a.getSnapshotBeforeUpdate=="function";d||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(o!==r||l!==u)&&WM(e,a,r,u),uo=!1;var h=e.memoizedState;a.state=h,u0(e,r,a,s),l=e.memoizedState,o!==r||h!==l||as.current||uo?(typeof c=="function"&&(hS(e,t,c,r),l=e.memoizedState),(o=uo||OM(e,t,o,r,h,l,u))?(d||typeof a.UNSAFE_componentWillMount!="function"&&typeof a.componentWillMount!="function"||(typeof a.componentWillMount=="function"&&a.componentWillMount(),typeof a.UNSAFE_componentWillMount=="function"&&a.UNSAFE_componentWillMount()),typeof a.componentDidMount=="function"&&(e.flags|=4194308)):(typeof a.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=r,e.memoizedState=l),a.props=r,a.state=l,a.context=u,r=o):(typeof a.componentDidMount=="function"&&(e.flags|=4194308),r=!1)}else{a=e.stateNode,WL(n,e),o=e.memoizedProps,u=e.type===e.elementType?o:ui(e.type,o),a.props=u,d=e.pendingProps,h=a.context,l=t.contextType,typeof l=="object"&&l!==null?l=Js(l):(l=os(t)?Kl:Cr.current,l=Wc(e,l));var p=t.getDerivedStateFromProps;(c=typeof p=="function"||typeof a.getSnapshotBeforeUpdate=="function")||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(o!==d||h!==l)&&WM(e,a,r,l),uo=!1,h=e.memoizedState,a.state=h,u0(e,r,a,s);var g=e.memoizedState;o!==d||h!==g||as.current||uo?(typeof p=="function"&&(hS(e,t,p,r),g=e.memoizedState),(u=uo||OM(e,t,u,r,h,g,l)||!1)?(c||typeof a.UNSAFE_componentWillUpdate!="function"&&typeof a.componentWillUpdate!="function"||(typeof a.componentWillUpdate=="function"&&a.componentWillUpdate(r,g,l),typeof a.UNSAFE_componentWillUpdate=="function"&&a.UNSAFE_componentWillUpdate(r,g,l)),typeof a.componentDidUpdate=="function"&&(e.flags|=4),typeof a.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof a.componentDidUpdate!="function"||o===n.memoizedProps&&h===n.memoizedState||(e.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||o===n.memoizedProps&&h===n.memoizedState||(e.flags|=1024),e.memoizedProps=r,e.memoizedState=g),a.props=r,a.state=g,a.context=l,r=u):(typeof a.componentDidUpdate!="function"||o===n.memoizedProps&&h===n.memoizedState||(e.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||o===n.memoizedProps&&h===n.memoizedState||(e.flags|=1024),r=!1)}return gS(n,e,t,r,i,s)}function gS(n,e,t,r,s,i){pA(n,e);var a=(e.flags&128)!==0;if(!r&&!a)return s&&LM(e,t,!1),Da(n,e,i);r=e.stateNode,jB.current=e;var o=a&&typeof t.getDerivedStateFromError!="function"?null:r.render();return e.flags|=1,n!==null&&a?(e.child=Bc(e,n.child,null,i),e.child=Bc(e,null,o,i)):Dr(n,e,o,i),e.memoizedState=r.state,s&&LM(e,t,!0),e.child}function fA(n){var e=n.stateNode;e.pendingContext?RM(n,e.pendingContext,e.pendingContext!==e.context):e.context&&RM(n,e.context,!1),cT(n,e.containerInfo)}function KM(n,e,t,r,s){return Vc(),sT(s),e.flags|=256,Dr(n,e,t,r),e.child}var yS={dehydrated:null,treeContext:null,retryLane:0};function bS(n){return{baseLanes:n,cachePool:null,transitions:null}}function mA(n,e,t){var r=e.pendingProps,s=an.current,i=!1,a=(e.flags&128)!==0,o;if((o=a)||(o=n!==null&&n.memoizedState===null?!1:(s&2)!==0),o?(i=!0,e.flags&=-129):(n===null||n.memoizedState!==null)&&(s|=1),Vt(an,s&1),n===null)return cS(e),n=e.memoizedState,n!==null&&(n=n.dehydrated,n!==null)?(e.mode&1?n.data==="$!"?e.lanes=8:e.lanes=1073741824:e.lanes=1,null):(a=r.children,n=r.fallback,i?(r=e.mode,i=e.child,a={mode:"hidden",children:a},!(r&1)&&i!==null?(i.childLanes=0,i.pendingProps=a):i=cb(a,r,0,null),n=Wl(n,r,t,null),i.return=e,n.return=e,i.sibling=n,e.child=i,e.child.memoizedState=bS(t),e.memoizedState=yS,n):bT(e,a));if(s=n.memoizedState,s!==null&&(o=s.dehydrated,o!==null))return QB(n,e,a,r,o,s,t);if(i){i=r.fallback,a=e.mode,s=n.child,o=s.sibling;var l={mode:"hidden",children:r.children};return!(a&1)&&e.child!==s?(r=e.child,r.childLanes=0,r.pendingProps=l,e.deletions=null):(r=Eo(s,l),r.subtreeFlags=s.subtreeFlags&14680064),o!==null?i=Eo(o,i):(i=Wl(i,a,t,null),i.flags|=2),i.return=e,r.return=e,r.sibling=i,e.child=r,r=i,i=e.child,a=n.child.memoizedState,a=a===null?bS(t):{baseLanes:a.baseLanes|t,cachePool:null,transitions:a.transitions},i.memoizedState=a,i.childLanes=n.childLanes&~t,e.memoizedState=yS,r}return i=n.child,n=i.sibling,r=Eo(i,{mode:"visible",children:r.children}),!(e.mode&1)&&(r.lanes=t),r.return=e,r.sibling=null,n!==null&&(t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)),e.child=r,e.memoizedState=null,r}function bT(n,e){return e=cb({mode:"visible",children:e},n.mode,0,null),e.return=n,n.child=e}function zg(n,e,t,r){return r!==null&&sT(r),Bc(e,n.child,null,t),n=bT(e,e.pendingProps.children),n.flags|=2,e.memoizedState=null,n}function QB(n,e,t,r,s,i,a){if(t)return e.flags&256?(e.flags&=-257,r=m1(Error(xe(422))),zg(n,e,a,r)):e.memoizedState!==null?(e.child=n.child,e.flags|=128,null):(i=r.fallback,s=e.mode,r=cb({mode:"visible",children:r.children},s,0,null),i=Wl(i,s,a,null),i.flags|=2,r.return=e,i.return=e,r.sibling=i,e.child=r,e.mode&1&&Bc(e,n.child,null,a),e.child.memoizedState=bS(a),e.memoizedState=yS,i);if(!(e.mode&1))return zg(n,e,a,null);if(s.data==="$!"){if(r=s.nextSibling&&s.nextSibling.dataset,r)var o=r.dgst;return r=o,i=Error(xe(419)),r=m1(i,r,void 0),zg(n,e,a,r)}if(o=(a&n.childLanes)!==0,ss||o){if(r=rr,r!==null){switch(a&-a){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}s=s&(r.suspendedLanes|a)?0:s,s!==0&&s!==i.retryLane&&(i.retryLane=s,za(n,s),yi(r,n,s,-1))}return IT(),r=m1(Error(xe(421))),zg(n,e,a,r)}return s.data==="$?"?(e.flags|=128,e.child=n.child,e=cX.bind(null,n),s._reactRetry=e,null):(n=i.treeContext,Ss=Co(s.nextSibling),Cs=e,qt=!0,di=null,n!==null&&(Vs[Bs++]=Ca,Vs[Bs++]=_a,Vs[Bs++]=Yl,Ca=n.id,_a=n.overflow,Yl=e),e=bT(e,r.children),e.flags|=4096,e)}function YM(n,e,t){n.lanes|=e;var r=n.alternate;r!==null&&(r.lanes|=e),dS(n.return,e,t)}function g1(n,e,t,r,s){var i=n.memoizedState;i===null?n.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:s}:(i.isBackwards=e,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailMode=s)}function gA(n,e,t){var r=e.pendingProps,s=r.revealOrder,i=r.tail;if(Dr(n,e,r.children,t),r=an.current,r&2)r=r&1|2,e.flags|=128;else{if(n!==null&&n.flags&128)e:for(n=e.child;n!==null;){if(n.tag===13)n.memoizedState!==null&&YM(n,t,e);else if(n.tag===19)YM(n,t,e);else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break e;for(;n.sibling===null;){if(n.return===null||n.return===e)break e;n=n.return}n.sibling.return=n.return,n=n.sibling}r&=1}if(Vt(an,r),!(e.mode&1))e.memoizedState=null;else switch(s){case"forwards":for(t=e.child,s=null;t!==null;)n=t.alternate,n!==null&&c0(n)===null&&(s=t),t=t.sibling;t=s,t===null?(s=e.child,e.child=null):(s=t.sibling,t.sibling=null),g1(e,!1,s,t,i);break;case"backwards":for(t=null,s=e.child,e.child=null;s!==null;){if(n=s.alternate,n!==null&&c0(n)===null){e.child=s;break}n=s.sibling,s.sibling=t,t=s,s=n}g1(e,!0,t,null,i);break;case"together":g1(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Ay(n,e){!(e.mode&1)&&n!==null&&(n.alternate=null,e.alternate=null,e.flags|=2)}function Da(n,e,t){if(n!==null&&(e.dependencies=n.dependencies),Ql|=e.lanes,!(t&e.childLanes))return null;if(n!==null&&e.child!==n.child)throw Error(xe(153));if(e.child!==null){for(n=e.child,t=Eo(n,n.pendingProps),e.child=t,t.return=e;n.sibling!==null;)n=n.sibling,t=t.sibling=Eo(n,n.pendingProps),t.return=e;t.sibling=null}return e.child}function JB(n,e,t){switch(e.tag){case 3:fA(e),Vc();break;case 5:VL(e);break;case 1:os(e.type)&&s0(e);break;case 4:cT(e,e.stateNode.containerInfo);break;case 10:var r=e.type._context,s=e.memoizedProps.value;Vt(o0,r._currentValue),r._currentValue=s;break;case 13:if(r=e.memoizedState,r!==null)return r.dehydrated!==null?(Vt(an,an.current&1),e.flags|=128,null):t&e.child.childLanes?mA(n,e,t):(Vt(an,an.current&1),n=Da(n,e,t),n!==null?n.sibling:null);Vt(an,an.current&1);break;case 19:if(r=(t&e.childLanes)!==0,n.flags&128){if(r)return gA(n,e,t);e.flags|=128}if(s=e.memoizedState,s!==null&&(s.rendering=null,s.tail=null,s.lastEffect=null),Vt(an,an.current),r)break;return null;case 22:case 23:return e.lanes=0,hA(n,e,t)}return Da(n,e,t)}var yA,xS,bA,xA;yA=function(n,e){for(var t=e.child;t!==null;){if(t.tag===5||t.tag===6)n.appendChild(t.stateNode);else if(t.tag!==4&&t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}};xS=function(){};bA=function(n,e,t,r){var s=n.memoizedProps;if(s!==r){n=e.stateNode,zl(Ji.current);var i=null;switch(t){case"input":s=Ww(n,s),r=Ww(n,r),i=[];break;case"select":s=dn({},s,{value:void 0}),r=dn({},r,{value:void 0}),i=[];break;case"textarea":s=Xw(n,s),r=Xw(n,r),i=[];break;default:typeof s.onClick!="function"&&typeof r.onClick=="function"&&(n.onclick=n0)}Zw(t,r);var a;t=null;for(u in s)if(!r.hasOwnProperty(u)&&s.hasOwnProperty(u)&&s[u]!=null)if(u==="style"){var o=s[u];for(a in o)o.hasOwnProperty(a)&&(t||(t={}),t[a]="")}else u!=="dangerouslySetInnerHTML"&&u!=="children"&&u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&u!=="autoFocus"&&(zp.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in r){var l=r[u];if(o=s!=null?s[u]:void 0,r.hasOwnProperty(u)&&l!==o&&(l!=null||o!=null))if(u==="style")if(o){for(a in o)!o.hasOwnProperty(a)||l&&l.hasOwnProperty(a)||(t||(t={}),t[a]="");for(a in l)l.hasOwnProperty(a)&&o[a]!==l[a]&&(t||(t={}),t[a]=l[a])}else t||(i||(i=[]),i.push(u,t)),t=l;else u==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,o=o?o.__html:void 0,l!=null&&o!==l&&(i=i||[]).push(u,l)):u==="children"?typeof l!="string"&&typeof l!="number"||(i=i||[]).push(u,""+l):u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&(zp.hasOwnProperty(u)?(l!=null&&u==="onScroll"&&Ht("scroll",n),i||o===l||(i=[])):(i=i||[]).push(u,l))}t&&(i=i||[]).push("style",t);var u=i;(e.updateQueue=u)&&(e.flags|=4)}};xA=function(n,e,t,r){t!==r&&(e.flags|=4)};function Bh(n,e){if(!qt)switch(n.tailMode){case"hidden":e=n.tail;for(var t=null;e!==null;)e.alternate!==null&&(t=e),e=e.sibling;t===null?n.tail=null:t.sibling=null;break;case"collapsed":t=n.tail;for(var r=null;t!==null;)t.alternate!==null&&(r=t),t=t.sibling;r===null?e||n.tail===null?n.tail=null:n.tail.sibling=null:r.sibling=null}}function yr(n){var e=n.alternate!==null&&n.alternate.child===n.child,t=0,r=0;if(e)for(var s=n.child;s!==null;)t|=s.lanes|s.childLanes,r|=s.subtreeFlags&14680064,r|=s.flags&14680064,s.return=n,s=s.sibling;else for(s=n.child;s!==null;)t|=s.lanes|s.childLanes,r|=s.subtreeFlags,r|=s.flags,s.return=n,s=s.sibling;return n.subtreeFlags|=r,n.childLanes=t,e}function qB(n,e,t){var r=e.pendingProps;switch(rT(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return yr(e),null;case 1:return os(e.type)&&r0(),yr(e),null;case 3:return r=e.stateNode,Xc(),Yt(as),Yt(Cr),hT(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(n===null||n.child===null)&&(Lg(e)?e.flags|=4:n===null||n.memoizedState.isDehydrated&&!(e.flags&256)||(e.flags|=1024,di!==null&&(_S(di),di=null))),xS(n,e),yr(e),null;case 5:dT(e);var s=zl(Zp.current);if(t=e.type,n!==null&&e.stateNode!=null)bA(n,e,t,r,s),n.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!r){if(e.stateNode===null)throw Error(xe(166));return yr(e),null}if(n=zl(Ji.current),Lg(e)){r=e.stateNode,t=e.type;var i=e.memoizedProps;switch(r[Zi]=e,r[Xp]=i,n=(e.mode&1)!==0,t){case"dialog":Ht("cancel",r),Ht("close",r);break;case"iframe":case"object":case"embed":Ht("load",r);break;case"video":case"audio":for(s=0;s<up.length;s++)Ht(up[s],r);break;case"source":Ht("error",r);break;case"img":case"image":case"link":Ht("error",r),Ht("load",r);break;case"details":Ht("toggle",r);break;case"input":sM(r,i),Ht("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Ht("invalid",r);break;case"textarea":aM(r,i),Ht("invalid",r)}Zw(t,i),s=null;for(var a in i)if(i.hasOwnProperty(a)){var o=i[a];a==="children"?typeof o=="string"?r.textContent!==o&&(i.suppressHydrationWarning!==!0&&Rg(r.textContent,o,n),s=["children",o]):typeof o=="number"&&r.textContent!==""+o&&(i.suppressHydrationWarning!==!0&&Rg(r.textContent,o,n),s=["children",""+o]):zp.hasOwnProperty(a)&&o!=null&&a==="onScroll"&&Ht("scroll",r)}switch(t){case"input":Tg(r),iM(r,i,!0);break;case"textarea":Tg(r),oM(r);break;case"select":case"option":break;default:typeof i.onClick=="function"&&(r.onclick=n0)}r=s,e.updateQueue=r,r!==null&&(e.flags|=4)}else{a=s.nodeType===9?s:s.ownerDocument,n==="http://www.w3.org/1999/xhtml"&&(n=HR(t)),n==="http://www.w3.org/1999/xhtml"?t==="script"?(n=a.createElement("div"),n.innerHTML="<script><\/script>",n=n.removeChild(n.firstChild)):typeof r.is=="string"?n=a.createElement(t,{is:r.is}):(n=a.createElement(t),t==="select"&&(a=n,r.multiple?a.multiple=!0:r.size&&(a.size=r.size))):n=a.createElementNS(n,t),n[Zi]=e,n[Xp]=r,yA(n,e,!1,!1),e.stateNode=n;e:{switch(a=Hw(t,r),t){case"dialog":Ht("cancel",n),Ht("close",n),s=r;break;case"iframe":case"object":case"embed":Ht("load",n),s=r;break;case"video":case"audio":for(s=0;s<up.length;s++)Ht(up[s],n);s=r;break;case"source":Ht("error",n),s=r;break;case"img":case"image":case"link":Ht("error",n),Ht("load",n),s=r;break;case"details":Ht("toggle",n),s=r;break;case"input":sM(n,r),s=Ww(n,r),Ht("invalid",n);break;case"option":s=r;break;case"select":n._wrapperState={wasMultiple:!!r.multiple},s=dn({},r,{value:void 0}),Ht("invalid",n);break;case"textarea":aM(n,r),s=Xw(n,r),Ht("invalid",n);break;default:s=r}Zw(t,s),o=s;for(i in o)if(o.hasOwnProperty(i)){var l=o[i];i==="style"?jR(n,l):i==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,l!=null&&KR(n,l)):i==="children"?typeof l=="string"?(t!=="textarea"||l!=="")&&Dp(n,l):typeof l=="number"&&Dp(n,""+l):i!=="suppressContentEditableWarning"&&i!=="suppressHydrationWarning"&&i!=="autoFocus"&&(zp.hasOwnProperty(i)?l!=null&&i==="onScroll"&&Ht("scroll",n):l!=null&&V2(n,i,l,a))}switch(t){case"input":Tg(n),iM(n,r,!1);break;case"textarea":Tg(n),oM(n);break;case"option":r.value!=null&&n.setAttribute("value",""+Po(r.value));break;case"select":n.multiple=!!r.multiple,i=r.value,i!=null?_c(n,!!r.multiple,i,!1):r.defaultValue!=null&&_c(n,!!r.multiple,r.defaultValue,!0);break;default:typeof s.onClick=="function"&&(n.onclick=n0)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return yr(e),null;case 6:if(n&&e.stateNode!=null)xA(n,e,n.memoizedProps,r);else{if(typeof r!="string"&&e.stateNode===null)throw Error(xe(166));if(t=zl(Zp.current),zl(Ji.current),Lg(e)){if(r=e.stateNode,t=e.memoizedProps,r[Zi]=e,(i=r.nodeValue!==t)&&(n=Cs,n!==null))switch(n.tag){case 3:Rg(r.nodeValue,t,(n.mode&1)!==0);break;case 5:n.memoizedProps.suppressHydrationWarning!==!0&&Rg(r.nodeValue,t,(n.mode&1)!==0)}i&&(e.flags|=4)}else r=(t.nodeType===9?t:t.ownerDocument).createTextNode(r),r[Zi]=e,e.stateNode=r}return yr(e),null;case 13:if(Yt(an),r=e.memoizedState,n===null||n.memoizedState!==null&&n.memoizedState.dehydrated!==null){if(qt&&Ss!==null&&e.mode&1&&!(e.flags&128))$L(),Vc(),e.flags|=98560,i=!1;else if(i=Lg(e),r!==null&&r.dehydrated!==null){if(n===null){if(!i)throw Error(xe(318));if(i=e.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(xe(317));i[Zi]=e}else Vc(),!(e.flags&128)&&(e.memoizedState=null),e.flags|=4;yr(e),i=!1}else di!==null&&(_S(di),di=null),i=!0;if(!i)return e.flags&65536?e:null}return e.flags&128?(e.lanes=t,e):(r=r!==null,r!==(n!==null&&n.memoizedState!==null)&&r&&(e.child.flags|=8192,e.mode&1&&(n===null||an.current&1?$n===0&&($n=3):IT())),e.updateQueue!==null&&(e.flags|=4),yr(e),null);case 4:return Xc(),xS(n,e),n===null&&Vp(e.stateNode.containerInfo),yr(e),null;case 10:return oT(e.type._context),yr(e),null;case 17:return os(e.type)&&r0(),yr(e),null;case 19:if(Yt(an),i=e.memoizedState,i===null)return yr(e),null;if(r=(e.flags&128)!==0,a=i.rendering,a===null)if(r)Bh(i,!1);else{if($n!==0||n!==null&&n.flags&128)for(n=e.child;n!==null;){if(a=c0(n),a!==null){for(e.flags|=128,Bh(i,!1),r=a.updateQueue,r!==null&&(e.updateQueue=r,e.flags|=4),e.subtreeFlags=0,r=t,t=e.child;t!==null;)i=t,n=r,i.flags&=14680066,a=i.alternate,a===null?(i.childLanes=0,i.lanes=n,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=a.childLanes,i.lanes=a.lanes,i.child=a.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=a.memoizedProps,i.memoizedState=a.memoizedState,i.updateQueue=a.updateQueue,i.type=a.type,n=a.dependencies,i.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext}),t=t.sibling;return Vt(an,an.current&1|2),e.child}n=n.sibling}i.tail!==null&&wn()>Zc&&(e.flags|=128,r=!0,Bh(i,!1),e.lanes=4194304)}else{if(!r)if(n=c0(a),n!==null){if(e.flags|=128,r=!0,t=n.updateQueue,t!==null&&(e.updateQueue=t,e.flags|=4),Bh(i,!0),i.tail===null&&i.tailMode==="hidden"&&!a.alternate&&!qt)return yr(e),null}else 2*wn()-i.renderingStartTime>Zc&&t!==1073741824&&(e.flags|=128,r=!0,Bh(i,!1),e.lanes=4194304);i.isBackwards?(a.sibling=e.child,e.child=a):(t=i.last,t!==null?t.sibling=a:e.child=a,i.last=a)}return i.tail!==null?(e=i.tail,i.rendering=e,i.tail=e.sibling,i.renderingStartTime=wn(),e.sibling=null,t=an.current,Vt(an,r?t&1|2:t&1),e):(yr(e),null);case 22:case 23:return TT(),r=e.memoizedState!==null,n!==null&&n.memoizedState!==null!==r&&(e.flags|=8192),r&&e.mode&1?vs&1073741824&&(yr(e),e.subtreeFlags&6&&(e.flags|=8192)):yr(e),null;case 24:return null;case 25:return null}throw Error(xe(156,e.tag))}function eX(n,e){switch(rT(e),e.tag){case 1:return os(e.type)&&r0(),n=e.flags,n&65536?(e.flags=n&-65537|128,e):null;case 3:return Xc(),Yt(as),Yt(Cr),hT(),n=e.flags,n&65536&&!(n&128)?(e.flags=n&-65537|128,e):null;case 5:return dT(e),null;case 13:if(Yt(an),n=e.memoizedState,n!==null&&n.dehydrated!==null){if(e.alternate===null)throw Error(xe(340));Vc()}return n=e.flags,n&65536?(e.flags=n&-65537|128,e):null;case 19:return Yt(an),null;case 4:return Xc(),null;case 10:return oT(e.type._context),null;case 22:case 23:return TT(),null;case 24:return null;default:return null}}var Dg=!1,vr=!1,tX=typeof WeakSet=="function"?WeakSet:Set,De=null;function wc(n,e){var t=n.ref;if(t!==null)if(typeof t=="function")try{t(null)}catch(r){hn(n,e,r)}else t.current=null}function vS(n,e,t){try{t()}catch(r){hn(n,e,r)}}var jM=!1;function nX(n,e){if(rS=qy,n=IL(),tT(n)){if("selectionStart"in n)var t={start:n.selectionStart,end:n.selectionEnd};else e:{t=(t=n.ownerDocument)&&t.defaultView||window;var r=t.getSelection&&t.getSelection();if(r&&r.rangeCount!==0){t=r.anchorNode;var s=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{t.nodeType,i.nodeType}catch{t=null;break e}var a=0,o=-1,l=-1,u=0,c=0,d=n,h=null;t:for(;;){for(var p;d!==t||s!==0&&d.nodeType!==3||(o=a+s),d!==i||r!==0&&d.nodeType!==3||(l=a+r),d.nodeType===3&&(a+=d.nodeValue.length),(p=d.firstChild)!==null;)h=d,d=p;for(;;){if(d===n)break t;if(h===t&&++u===s&&(o=a),h===i&&++c===r&&(l=a),(p=d.nextSibling)!==null)break;d=h,h=d.parentNode}d=p}t=o===-1||l===-1?null:{start:o,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;for(sS={focusedElem:n,selectionRange:t},qy=!1,De=e;De!==null;)if(e=De,n=e.child,(e.subtreeFlags&1028)!==0&&n!==null)n.return=e,De=n;else for(;De!==null;){e=De;try{var g=e.alternate;if(e.flags&1024)switch(e.tag){case 0:case 11:case 15:break;case 1:if(g!==null){var f=g.memoizedProps,m=g.memoizedState,y=e.stateNode,b=y.getSnapshotBeforeUpdate(e.elementType===e.type?f:ui(e.type,f),m);y.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var x=e.stateNode.containerInfo;x.nodeType===1?x.textContent="":x.nodeType===9&&x.documentElement&&x.removeChild(x.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(xe(163))}}catch(v){hn(e,e.return,v)}if(n=e.sibling,n!==null){n.return=e.return,De=n;break}De=e.return}return g=jM,jM=!1,g}function _p(n,e,t){var r=e.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var s=r=r.next;do{if((s.tag&n)===n){var i=s.destroy;s.destroy=void 0,i!==void 0&&vS(e,t,i)}s=s.next}while(s!==r)}}function lb(n,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var t=e=e.next;do{if((t.tag&n)===n){var r=t.create;t.destroy=r()}t=t.next}while(t!==e)}}function wS(n){var e=n.ref;if(e!==null){var t=n.stateNode;switch(n.tag){case 5:n=t;break;default:n=t}typeof e=="function"?e(n):e.current=n}}function vA(n){var e=n.alternate;e!==null&&(n.alternate=null,vA(e)),n.child=null,n.deletions=null,n.sibling=null,n.tag===5&&(e=n.stateNode,e!==null&&(delete e[Zi],delete e[Xp],delete e[oS],delete e[FB],delete e[GB])),n.stateNode=null,n.return=null,n.dependencies=null,n.memoizedProps=null,n.memoizedState=null,n.pendingProps=null,n.stateNode=null,n.updateQueue=null}function wA(n){return n.tag===5||n.tag===3||n.tag===4}function QM(n){e:for(;;){for(;n.sibling===null;){if(n.return===null||wA(n.return))return null;n=n.return}for(n.sibling.return=n.return,n=n.sibling;n.tag!==5&&n.tag!==6&&n.tag!==18;){if(n.flags&2||n.child===null||n.tag===4)continue e;n.child.return=n,n=n.child}if(!(n.flags&2))return n.stateNode}}function SS(n,e,t){var r=n.tag;if(r===5||r===6)n=n.stateNode,e?t.nodeType===8?t.parentNode.insertBefore(n,e):t.insertBefore(n,e):(t.nodeType===8?(e=t.parentNode,e.insertBefore(n,t)):(e=t,e.appendChild(n)),t=t._reactRootContainer,t!=null||e.onclick!==null||(e.onclick=n0));else if(r!==4&&(n=n.child,n!==null))for(SS(n,e,t),n=n.sibling;n!==null;)SS(n,e,t),n=n.sibling}function TS(n,e,t){var r=n.tag;if(r===5||r===6)n=n.stateNode,e?t.insertBefore(n,e):t.appendChild(n);else if(r!==4&&(n=n.child,n!==null))for(TS(n,e,t),n=n.sibling;n!==null;)TS(n,e,t),n=n.sibling}var dr=null,ci=!1;function to(n,e,t){for(t=t.child;t!==null;)SA(n,e,t),t=t.sibling}function SA(n,e,t){if(Qi&&typeof Qi.onCommitFiberUnmount=="function")try{Qi.onCommitFiberUnmount(eb,t)}catch{}switch(t.tag){case 5:vr||wc(t,e);case 6:var r=dr,s=ci;dr=null,to(n,e,t),dr=r,ci=s,dr!==null&&(ci?(n=dr,t=t.stateNode,n.nodeType===8?n.parentNode.removeChild(t):n.removeChild(t)):dr.removeChild(t.stateNode));break;case 18:dr!==null&&(ci?(n=dr,t=t.stateNode,n.nodeType===8?u1(n.parentNode,t):n.nodeType===1&&u1(n,t),Gp(n)):u1(dr,t.stateNode));break;case 4:r=dr,s=ci,dr=t.stateNode.containerInfo,ci=!0,to(n,e,t),dr=r,ci=s;break;case 0:case 11:case 14:case 15:if(!vr&&(r=t.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){s=r=r.next;do{var i=s,a=i.destroy;i=i.tag,a!==void 0&&(i&2||i&4)&&vS(t,e,a),s=s.next}while(s!==r)}to(n,e,t);break;case 1:if(!vr&&(wc(t,e),r=t.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(o){hn(t,e,o)}to(n,e,t);break;case 21:to(n,e,t);break;case 22:t.mode&1?(vr=(r=vr)||t.memoizedState!==null,to(n,e,t),vr=r):to(n,e,t);break;default:to(n,e,t)}}function JM(n){var e=n.updateQueue;if(e!==null){n.updateQueue=null;var t=n.stateNode;t===null&&(t=n.stateNode=new tX),e.forEach(function(r){var s=dX.bind(null,n,r);t.has(r)||(t.add(r),r.then(s,s))})}}function si(n,e){var t=e.deletions;if(t!==null)for(var r=0;r<t.length;r++){var s=t[r];try{var i=n,a=e,o=a;e:for(;o!==null;){switch(o.tag){case 5:dr=o.stateNode,ci=!1;break e;case 3:dr=o.stateNode.containerInfo,ci=!0;break e;case 4:dr=o.stateNode.containerInfo,ci=!0;break e}o=o.return}if(dr===null)throw Error(xe(160));SA(i,a,s),dr=null,ci=!1;var l=s.alternate;l!==null&&(l.return=null),s.return=null}catch(u){hn(s,e,u)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)TA(e,n),e=e.sibling}function TA(n,e){var t=n.alternate,r=n.flags;switch(n.tag){case 0:case 11:case 14:case 15:if(si(e,n),zi(n),r&4){try{_p(3,n,n.return),lb(3,n)}catch(f){hn(n,n.return,f)}try{_p(5,n,n.return)}catch(f){hn(n,n.return,f)}}break;case 1:si(e,n),zi(n),r&512&&t!==null&&wc(t,t.return);break;case 5:if(si(e,n),zi(n),r&512&&t!==null&&wc(t,t.return),n.flags&32){var s=n.stateNode;try{Dp(s,"")}catch(f){hn(n,n.return,f)}}if(r&4&&(s=n.stateNode,s!=null)){var i=n.memoizedProps,a=t!==null?t.memoizedProps:i,o=n.type,l=n.updateQueue;if(n.updateQueue=null,l!==null)try{o==="input"&&i.type==="radio"&&i.name!=null&&UR(s,i),Hw(o,a);var u=Hw(o,i);for(a=0;a<l.length;a+=2){var c=l[a],d=l[a+1];c==="style"?jR(s,d):c==="dangerouslySetInnerHTML"?KR(s,d):c==="children"?Dp(s,d):V2(s,c,d,u)}switch(o){case"input":Vw(s,i);break;case"textarea":ZR(s,i);break;case"select":var h=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!i.multiple;var p=i.value;p!=null?_c(s,!!i.multiple,p,!1):h!==!!i.multiple&&(i.defaultValue!=null?_c(s,!!i.multiple,i.defaultValue,!0):_c(s,!!i.multiple,i.multiple?[]:"",!1))}s[Xp]=i}catch(f){hn(n,n.return,f)}}break;case 6:if(si(e,n),zi(n),r&4){if(n.stateNode===null)throw Error(xe(162));s=n.stateNode,i=n.memoizedProps;try{s.nodeValue=i}catch(f){hn(n,n.return,f)}}break;case 3:if(si(e,n),zi(n),r&4&&t!==null&&t.memoizedState.isDehydrated)try{Gp(e.containerInfo)}catch(f){hn(n,n.return,f)}break;case 4:si(e,n),zi(n);break;case 13:si(e,n),zi(n),s=n.child,s.flags&8192&&(i=s.memoizedState!==null,s.stateNode.isHidden=i,!i||s.alternate!==null&&s.alternate.memoizedState!==null||(wT=wn())),r&4&&JM(n);break;case 22:if(c=t!==null&&t.memoizedState!==null,n.mode&1?(vr=(u=vr)||c,si(e,n),vr=u):si(e,n),zi(n),r&8192){if(u=n.memoizedState!==null,(n.stateNode.isHidden=u)&&!c&&n.mode&1)for(De=n,c=n.child;c!==null;){for(d=De=c;De!==null;){switch(h=De,p=h.child,h.tag){case 0:case 11:case 14:case 15:_p(4,h,h.return);break;case 1:wc(h,h.return);var g=h.stateNode;if(typeof g.componentWillUnmount=="function"){r=h,t=h.return;try{e=r,g.props=e.memoizedProps,g.state=e.memoizedState,g.componentWillUnmount()}catch(f){hn(r,t,f)}}break;case 5:wc(h,h.return);break;case 22:if(h.memoizedState!==null){eN(d);continue}}p!==null?(p.return=h,De=p):eN(d)}c=c.sibling}e:for(c=null,d=n;;){if(d.tag===5){if(c===null){c=d;try{s=d.stateNode,u?(i=s.style,typeof i.setProperty=="function"?i.setProperty("display","none","important"):i.display="none"):(o=d.stateNode,l=d.memoizedProps.style,a=l!=null&&l.hasOwnProperty("display")?l.display:null,o.style.display=YR("display",a))}catch(f){hn(n,n.return,f)}}}else if(d.tag===6){if(c===null)try{d.stateNode.nodeValue=u?"":d.memoizedProps}catch(f){hn(n,n.return,f)}}else if((d.tag!==22&&d.tag!==23||d.memoizedState===null||d===n)&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===n)break e;for(;d.sibling===null;){if(d.return===null||d.return===n)break e;c===d&&(c=null),d=d.return}c===d&&(c=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:si(e,n),zi(n),r&4&&JM(n);break;case 21:break;default:si(e,n),zi(n)}}function zi(n){var e=n.flags;if(e&2){try{e:{for(var t=n.return;t!==null;){if(wA(t)){var r=t;break e}t=t.return}throw Error(xe(160))}switch(r.tag){case 5:var s=r.stateNode;r.flags&32&&(Dp(s,""),r.flags&=-33);var i=QM(n);TS(n,i,s);break;case 3:case 4:var a=r.stateNode.containerInfo,o=QM(n);SS(n,o,a);break;default:throw Error(xe(161))}}catch(l){hn(n,n.return,l)}n.flags&=-3}e&4096&&(n.flags&=-4097)}function rX(n,e,t){De=n,IA(n)}function IA(n,e,t){for(var r=(n.mode&1)!==0;De!==null;){var s=De,i=s.child;if(s.tag===22&&r){var a=s.memoizedState!==null||Dg;if(!a){var o=s.alternate,l=o!==null&&o.memoizedState!==null||vr;o=Dg;var u=vr;if(Dg=a,(vr=l)&&!u)for(De=s;De!==null;)a=De,l=a.child,a.tag===22&&a.memoizedState!==null?tN(s):l!==null?(l.return=a,De=l):tN(s);for(;i!==null;)De=i,IA(i),i=i.sibling;De=s,Dg=o,vr=u}qM(n)}else s.subtreeFlags&8772&&i!==null?(i.return=s,De=i):qM(n)}}function qM(n){for(;De!==null;){var e=De;if(e.flags&8772){var t=e.alternate;try{if(e.flags&8772)switch(e.tag){case 0:case 11:case 15:vr||lb(5,e);break;case 1:var r=e.stateNode;if(e.flags&4&&!vr)if(t===null)r.componentDidMount();else{var s=e.elementType===e.type?t.memoizedProps:ui(e.type,t.memoizedProps);r.componentDidUpdate(s,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=e.updateQueue;i!==null&&$M(e,i,r);break;case 3:var a=e.updateQueue;if(a!==null){if(t=null,e.child!==null)switch(e.child.tag){case 5:t=e.child.stateNode;break;case 1:t=e.child.stateNode}$M(e,a,t)}break;case 5:var o=e.stateNode;if(t===null&&e.flags&4){t=o;var l=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&t.focus();break;case"img":l.src&&(t.src=l.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var u=e.alternate;if(u!==null){var c=u.memoizedState;if(c!==null){var d=c.dehydrated;d!==null&&Gp(d)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(xe(163))}vr||e.flags&512&&wS(e)}catch(h){hn(e,e.return,h)}}if(e===n){De=null;break}if(t=e.sibling,t!==null){t.return=e.return,De=t;break}De=e.return}}function eN(n){for(;De!==null;){var e=De;if(e===n){De=null;break}var t=e.sibling;if(t!==null){t.return=e.return,De=t;break}De=e.return}}function tN(n){for(;De!==null;){var e=De;try{switch(e.tag){case 0:case 11:case 15:var t=e.return;try{lb(4,e)}catch(l){hn(e,t,l)}break;case 1:var r=e.stateNode;if(typeof r.componentDidMount=="function"){var s=e.return;try{r.componentDidMount()}catch(l){hn(e,s,l)}}var i=e.return;try{wS(e)}catch(l){hn(e,i,l)}break;case 5:var a=e.return;try{wS(e)}catch(l){hn(e,a,l)}}}catch(l){hn(e,e.return,l)}if(e===n){De=null;break}var o=e.sibling;if(o!==null){o.return=e.return,De=o;break}De=e.return}}var sX=Math.ceil,p0=Ua.ReactCurrentDispatcher,xT=Ua.ReactCurrentOwner,Qs=Ua.ReactCurrentBatchConfig,Ct=0,rr=null,En=null,hr=0,vs=0,Sc=Qo(0),$n=0,jp=null,Ql=0,ub=0,vT=0,Mp=null,ns=null,wT=0,Zc=1/0,ba=null,f0=!1,IS=null,Mo=null,Pg=!1,go=null,m0=0,Np=0,kS=null,zy=-1,Dy=0;function Or(){return Ct&6?wn():zy!==-1?zy:zy=wn()}function No(n){return n.mode&1?Ct&2&&hr!==0?hr&-hr:WB.transition!==null?(Dy===0&&(Dy=lL()),Dy):(n=At,n!==0||(n=window.event,n=n===void 0?16:mL(n.type)),n):1}function yi(n,e,t,r){if(50<Np)throw Np=0,kS=null,Error(xe(185));kf(n,t,r),(!(Ct&2)||n!==rr)&&(n===rr&&(!(Ct&2)&&(ub|=t),$n===4&&fo(n,hr)),ls(n,r),t===1&&Ct===0&&!(e.mode&1)&&(Zc=wn()+500,ib&&Jo()))}function ls(n,e){var t=n.callbackNode;WV(n,e);var r=Jy(n,n===rr?hr:0);if(r===0)t!==null&&cM(t),n.callbackNode=null,n.callbackPriority=0;else if(e=r&-r,n.callbackPriority!==e){if(t!=null&&cM(t),e===1)n.tag===0?OB(nN.bind(null,n)):zL(nN.bind(null,n)),PB(function(){!(Ct&6)&&Jo()}),t=null;else{switch(uL(r)){case 1:t=H2;break;case 4:t=aL;break;case 16:t=Qy;break;case 536870912:t=oL;break;default:t=Qy}t=LA(t,kA.bind(null,n))}n.callbackPriority=e,n.callbackNode=t}}function kA(n,e){if(zy=-1,Dy=0,Ct&6)throw Error(xe(327));var t=n.callbackNode;if(Lc()&&n.callbackNode!==t)return null;var r=Jy(n,n===rr?hr:0);if(r===0)return null;if(r&30||r&n.expiredLanes||e)e=g0(n,r);else{e=r;var s=Ct;Ct|=2;var i=_A();(rr!==n||hr!==e)&&(ba=null,Zc=wn()+500,Ol(n,e));do try{oX();break}catch(o){CA(n,o)}while(!0);aT(),p0.current=i,Ct=s,En!==null?e=0:(rr=null,hr=0,e=$n)}if(e!==0){if(e===2&&(s=Jw(n),s!==0&&(r=s,e=CS(n,s))),e===1)throw t=jp,Ol(n,0),fo(n,r),ls(n,wn()),t;if(e===6)fo(n,r);else{if(s=n.current.alternate,!(r&30)&&!iX(s)&&(e=g0(n,r),e===2&&(i=Jw(n),i!==0&&(r=i,e=CS(n,i))),e===1))throw t=jp,Ol(n,0),fo(n,r),ls(n,wn()),t;switch(n.finishedWork=s,n.finishedLanes=r,e){case 0:case 1:throw Error(xe(345));case 2:vl(n,ns,ba);break;case 3:if(fo(n,r),(r&130023424)===r&&(e=wT+500-wn(),10<e)){if(Jy(n,0)!==0)break;if(s=n.suspendedLanes,(s&r)!==r){Or(),n.pingedLanes|=n.suspendedLanes&s;break}n.timeoutHandle=aS(vl.bind(null,n,ns,ba),e);break}vl(n,ns,ba);break;case 4:if(fo(n,r),(r&4194240)===r)break;for(e=n.eventTimes,s=-1;0<r;){var a=31-gi(r);i=1<<a,a=e[a],a>s&&(s=a),r&=~i}if(r=s,r=wn()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*sX(r/1960))-r,10<r){n.timeoutHandle=aS(vl.bind(null,n,ns,ba),r);break}vl(n,ns,ba);break;case 5:vl(n,ns,ba);break;default:throw Error(xe(329))}}}return ls(n,wn()),n.callbackNode===t?kA.bind(null,n):null}function CS(n,e){var t=Mp;return n.current.memoizedState.isDehydrated&&(Ol(n,e).flags|=256),n=g0(n,e),n!==2&&(e=ns,ns=t,e!==null&&_S(e)),n}function _S(n){ns===null?ns=n:ns.push.apply(ns,n)}function iX(n){for(var e=n;;){if(e.flags&16384){var t=e.updateQueue;if(t!==null&&(t=t.stores,t!==null))for(var r=0;r<t.length;r++){var s=t[r],i=s.getSnapshot;s=s.value;try{if(!Si(i(),s))return!1}catch{return!1}}}if(t=e.child,e.subtreeFlags&16384&&t!==null)t.return=e,e=t;else{if(e===n)break;for(;e.sibling===null;){if(e.return===null||e.return===n)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function fo(n,e){for(e&=~vT,e&=~ub,n.suspendedLanes|=e,n.pingedLanes&=~e,n=n.expirationTimes;0<e;){var t=31-gi(e),r=1<<t;n[t]=-1,e&=~r}}function nN(n){if(Ct&6)throw Error(xe(327));Lc();var e=Jy(n,0);if(!(e&1))return ls(n,wn()),null;var t=g0(n,e);if(n.tag!==0&&t===2){var r=Jw(n);r!==0&&(e=r,t=CS(n,r))}if(t===1)throw t=jp,Ol(n,0),fo(n,e),ls(n,wn()),t;if(t===6)throw Error(xe(345));return n.finishedWork=n.current.alternate,n.finishedLanes=e,vl(n,ns,ba),ls(n,wn()),null}function ST(n,e){var t=Ct;Ct|=1;try{return n(e)}finally{Ct=t,Ct===0&&(Zc=wn()+500,ib&&Jo())}}function Jl(n){go!==null&&go.tag===0&&!(Ct&6)&&Lc();var e=Ct;Ct|=1;var t=Qs.transition,r=At;try{if(Qs.transition=null,At=1,n)return n()}finally{At=r,Qs.transition=t,Ct=e,!(Ct&6)&&Jo()}}function TT(){vs=Sc.current,Yt(Sc)}function Ol(n,e){n.finishedWork=null,n.finishedLanes=0;var t=n.timeoutHandle;if(t!==-1&&(n.timeoutHandle=-1,DB(t)),En!==null)for(t=En.return;t!==null;){var r=t;switch(rT(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&r0();break;case 3:Xc(),Yt(as),Yt(Cr),hT();break;case 5:dT(r);break;case 4:Xc();break;case 13:Yt(an);break;case 19:Yt(an);break;case 10:oT(r.type._context);break;case 22:case 23:TT()}t=t.return}if(rr=n,En=n=Eo(n.current,null),hr=vs=e,$n=0,jp=null,vT=ub=Ql=0,ns=Mp=null,Al!==null){for(e=0;e<Al.length;e++)if(t=Al[e],r=t.interleaved,r!==null){t.interleaved=null;var s=r.next,i=t.pending;if(i!==null){var a=i.next;i.next=s,r.next=a}t.pending=r}Al=null}return n}function CA(n,e){do{var t=En;try{if(aT(),Ry.current=h0,d0){for(var r=cn.memoizedState;r!==null;){var s=r.queue;s!==null&&(s.pending=null),r=r.next}d0=!1}if(jl=0,jn=Dn=cn=null,Cp=!1,Hp=0,xT.current=null,t===null||t.return===null){$n=1,jp=e,En=null;break}e:{var i=n,a=t.return,o=t,l=e;if(e=hr,o.flags|=32768,l!==null&&typeof l=="object"&&typeof l.then=="function"){var u=l,c=o,d=c.tag;if(!(c.mode&1)&&(d===0||d===11||d===15)){var h=c.alternate;h?(c.updateQueue=h.updateQueue,c.memoizedState=h.memoizedState,c.lanes=h.lanes):(c.updateQueue=null,c.memoizedState=null)}var p=BM(a);if(p!==null){p.flags&=-257,XM(p,a,o,i,e),p.mode&1&&VM(i,u,e),e=p,l=u;var g=e.updateQueue;if(g===null){var f=new Set;f.add(l),e.updateQueue=f}else g.add(l);break e}else{if(!(e&1)){VM(i,u,e),IT();break e}l=Error(xe(426))}}else if(qt&&o.mode&1){var m=BM(a);if(m!==null){!(m.flags&65536)&&(m.flags|=256),XM(m,a,o,i,e),sT(Uc(l,o));break e}}i=l=Uc(l,o),$n!==4&&($n=2),Mp===null?Mp=[i]:Mp.push(i),i=a;do{switch(i.tag){case 3:i.flags|=65536,e&=-e,i.lanes|=e;var y=uA(i,l,e);PM(i,y);break e;case 1:o=l;var b=i.type,x=i.stateNode;if(!(i.flags&128)&&(typeof b.getDerivedStateFromError=="function"||x!==null&&typeof x.componentDidCatch=="function"&&(Mo===null||!Mo.has(x)))){i.flags|=65536,e&=-e,i.lanes|=e;var v=cA(i,o,e);PM(i,v);break e}}i=i.return}while(i!==null)}NA(t)}catch(w){e=w,En===t&&t!==null&&(En=t=t.return);continue}break}while(!0)}function _A(){var n=p0.current;return p0.current=h0,n===null?h0:n}function IT(){($n===0||$n===3||$n===2)&&($n=4),rr===null||!(Ql&268435455)&&!(ub&268435455)||fo(rr,hr)}function g0(n,e){var t=Ct;Ct|=2;var r=_A();(rr!==n||hr!==e)&&(ba=null,Ol(n,e));do try{aX();break}catch(s){CA(n,s)}while(!0);if(aT(),Ct=t,p0.current=r,En!==null)throw Error(xe(261));return rr=null,hr=0,$n}function aX(){for(;En!==null;)MA(En)}function oX(){for(;En!==null&&!LV();)MA(En)}function MA(n){var e=RA(n.alternate,n,vs);n.memoizedProps=n.pendingProps,e===null?NA(n):En=e,xT.current=null}function NA(n){var e=n;do{var t=e.alternate;if(n=e.return,e.flags&32768){if(t=eX(t,e),t!==null){t.flags&=32767,En=t;return}if(n!==null)n.flags|=32768,n.subtreeFlags=0,n.deletions=null;else{$n=6,En=null;return}}else if(t=qB(t,e,vs),t!==null){En=t;return}if(e=e.sibling,e!==null){En=e;return}En=e=n}while(e!==null);$n===0&&($n=5)}function vl(n,e,t){var r=At,s=Qs.transition;try{Qs.transition=null,At=1,lX(n,e,t,r)}finally{Qs.transition=s,At=r}return null}function lX(n,e,t,r){do Lc();while(go!==null);if(Ct&6)throw Error(xe(327));t=n.finishedWork;var s=n.finishedLanes;if(t===null)return null;if(n.finishedWork=null,n.finishedLanes=0,t===n.current)throw Error(xe(177));n.callbackNode=null,n.callbackPriority=0;var i=t.lanes|t.childLanes;if(VV(n,i),n===rr&&(En=rr=null,hr=0),!(t.subtreeFlags&2064)&&!(t.flags&2064)||Pg||(Pg=!0,LA(Qy,function(){return Lc(),null})),i=(t.flags&15990)!==0,t.subtreeFlags&15990||i){i=Qs.transition,Qs.transition=null;var a=At;At=1;var o=Ct;Ct|=4,xT.current=null,nX(n,t),TA(t,n),MB(sS),qy=!!rS,sS=rS=null,n.current=t,rX(t),AV(),Ct=o,At=a,Qs.transition=i}else n.current=t;if(Pg&&(Pg=!1,go=n,m0=s),i=n.pendingLanes,i===0&&(Mo=null),PV(t.stateNode),ls(n,wn()),e!==null)for(r=n.onRecoverableError,t=0;t<e.length;t++)s=e[t],r(s.value,{componentStack:s.stack,digest:s.digest});if(f0)throw f0=!1,n=IS,IS=null,n;return m0&1&&n.tag!==0&&Lc(),i=n.pendingLanes,i&1?n===kS?Np++:(Np=0,kS=n):Np=0,Jo(),null}function Lc(){if(go!==null){var n=uL(m0),e=Qs.transition,t=At;try{if(Qs.transition=null,At=16>n?16:n,go===null)var r=!1;else{if(n=go,go=null,m0=0,Ct&6)throw Error(xe(331));var s=Ct;for(Ct|=4,De=n.current;De!==null;){var i=De,a=i.child;if(De.flags&16){var o=i.deletions;if(o!==null){for(var l=0;l<o.length;l++){var u=o[l];for(De=u;De!==null;){var c=De;switch(c.tag){case 0:case 11:case 15:_p(8,c,i)}var d=c.child;if(d!==null)d.return=c,De=d;else for(;De!==null;){c=De;var h=c.sibling,p=c.return;if(vA(c),c===u){De=null;break}if(h!==null){h.return=p,De=h;break}De=p}}}var g=i.alternate;if(g!==null){var f=g.child;if(f!==null){g.child=null;do{var m=f.sibling;f.sibling=null,f=m}while(f!==null)}}De=i}}if(i.subtreeFlags&2064&&a!==null)a.return=i,De=a;else e:for(;De!==null;){if(i=De,i.flags&2048)switch(i.tag){case 0:case 11:case 15:_p(9,i,i.return)}var y=i.sibling;if(y!==null){y.return=i.return,De=y;break e}De=i.return}}var b=n.current;for(De=b;De!==null;){a=De;var x=a.child;if(a.subtreeFlags&2064&&x!==null)x.return=a,De=x;else e:for(a=b;De!==null;){if(o=De,o.flags&2048)try{switch(o.tag){case 0:case 11:case 15:lb(9,o)}}catch(w){hn(o,o.return,w)}if(o===a){De=null;break e}var v=o.sibling;if(v!==null){v.return=o.return,De=v;break e}De=o.return}}if(Ct=s,Jo(),Qi&&typeof Qi.onPostCommitFiberRoot=="function")try{Qi.onPostCommitFiberRoot(eb,n)}catch{}r=!0}return r}finally{At=t,Qs.transition=e}}return!1}function rN(n,e,t){e=Uc(t,e),e=uA(n,e,1),n=_o(n,e,1),e=Or(),n!==null&&(kf(n,1,e),ls(n,e))}function hn(n,e,t){if(n.tag===3)rN(n,n,t);else for(;e!==null;){if(e.tag===3){rN(e,n,t);break}else if(e.tag===1){var r=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(Mo===null||!Mo.has(r))){n=Uc(t,n),n=cA(e,n,1),e=_o(e,n,1),n=Or(),e!==null&&(kf(e,1,n),ls(e,n));break}}e=e.return}}function uX(n,e,t){var r=n.pingCache;r!==null&&r.delete(e),e=Or(),n.pingedLanes|=n.suspendedLanes&t,rr===n&&(hr&t)===t&&($n===4||$n===3&&(hr&130023424)===hr&&500>wn()-wT?Ol(n,0):vT|=t),ls(n,e)}function EA(n,e){e===0&&(n.mode&1?(e=Cg,Cg<<=1,!(Cg&130023424)&&(Cg=4194304)):e=1);var t=Or();n=za(n,e),n!==null&&(kf(n,e,t),ls(n,t))}function cX(n){var e=n.memoizedState,t=0;e!==null&&(t=e.retryLane),EA(n,t)}function dX(n,e){var t=0;switch(n.tag){case 13:var r=n.stateNode,s=n.memoizedState;s!==null&&(t=s.retryLane);break;case 19:r=n.stateNode;break;default:throw Error(xe(314))}r!==null&&r.delete(e),EA(n,t)}var RA;RA=function(n,e,t){if(n!==null)if(n.memoizedProps!==e.pendingProps||as.current)ss=!0;else{if(!(n.lanes&t)&&!(e.flags&128))return ss=!1,JB(n,e,t);ss=!!(n.flags&131072)}else ss=!1,qt&&e.flags&1048576&&DL(e,a0,e.index);switch(e.lanes=0,e.tag){case 2:var r=e.type;Ay(n,e),n=e.pendingProps;var s=Wc(e,Cr.current);Rc(e,t),s=fT(null,e,r,n,s,t);var i=mT();return e.flags|=1,typeof s=="object"&&s!==null&&typeof s.render=="function"&&s.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,os(r)?(i=!0,s0(e)):i=!1,e.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,uT(e),s.updater=ob,e.stateNode=s,s._reactInternals=e,pS(e,r,n,t),e=gS(null,e,r,!0,i,t)):(e.tag=0,qt&&i&&nT(e),Dr(null,e,s,t),e=e.child),e;case 16:r=e.elementType;e:{switch(Ay(n,e),n=e.pendingProps,s=r._init,r=s(r._payload),e.type=r,s=e.tag=pX(r),n=ui(r,n),s){case 0:e=mS(null,e,r,n,t);break e;case 1:e=HM(null,e,r,n,t);break e;case 11:e=UM(null,e,r,n,t);break e;case 14:e=ZM(null,e,r,ui(r.type,n),t);break e}throw Error(xe(306,r,""))}return e;case 0:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:ui(r,s),mS(n,e,r,s,t);case 1:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:ui(r,s),HM(n,e,r,s,t);case 3:e:{if(fA(e),n===null)throw Error(xe(387));r=e.pendingProps,i=e.memoizedState,s=i.element,WL(n,e),u0(e,r,null,t);var a=e.memoizedState;if(r=a.element,i.isDehydrated)if(i={element:r,isDehydrated:!1,cache:a.cache,pendingSuspenseBoundaries:a.pendingSuspenseBoundaries,transitions:a.transitions},e.updateQueue.baseState=i,e.memoizedState=i,e.flags&256){s=Uc(Error(xe(423)),e),e=KM(n,e,r,t,s);break e}else if(r!==s){s=Uc(Error(xe(424)),e),e=KM(n,e,r,t,s);break e}else for(Ss=Co(e.stateNode.containerInfo.firstChild),Cs=e,qt=!0,di=null,t=GL(e,null,r,t),e.child=t;t;)t.flags=t.flags&-3|4096,t=t.sibling;else{if(Vc(),r===s){e=Da(n,e,t);break e}Dr(n,e,r,t)}e=e.child}return e;case 5:return VL(e),n===null&&cS(e),r=e.type,s=e.pendingProps,i=n!==null?n.memoizedProps:null,a=s.children,iS(r,s)?a=null:i!==null&&iS(r,i)&&(e.flags|=32),pA(n,e),Dr(n,e,a,t),e.child;case 6:return n===null&&cS(e),null;case 13:return mA(n,e,t);case 4:return cT(e,e.stateNode.containerInfo),r=e.pendingProps,n===null?e.child=Bc(e,null,r,t):Dr(n,e,r,t),e.child;case 11:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:ui(r,s),UM(n,e,r,s,t);case 7:return Dr(n,e,e.pendingProps,t),e.child;case 8:return Dr(n,e,e.pendingProps.children,t),e.child;case 12:return Dr(n,e,e.pendingProps.children,t),e.child;case 10:e:{if(r=e.type._context,s=e.pendingProps,i=e.memoizedProps,a=s.value,Vt(o0,r._currentValue),r._currentValue=a,i!==null)if(Si(i.value,a)){if(i.children===s.children&&!as.current){e=Da(n,e,t);break e}}else for(i=e.child,i!==null&&(i.return=e);i!==null;){var o=i.dependencies;if(o!==null){a=i.child;for(var l=o.firstContext;l!==null;){if(l.context===r){if(i.tag===1){l=Na(-1,t&-t),l.tag=2;var u=i.updateQueue;if(u!==null){u=u.shared;var c=u.pending;c===null?l.next=l:(l.next=c.next,c.next=l),u.pending=l}}i.lanes|=t,l=i.alternate,l!==null&&(l.lanes|=t),dS(i.return,t,e),o.lanes|=t;break}l=l.next}}else if(i.tag===10)a=i.type===e.type?null:i.child;else if(i.tag===18){if(a=i.return,a===null)throw Error(xe(341));a.lanes|=t,o=a.alternate,o!==null&&(o.lanes|=t),dS(a,t,e),a=i.sibling}else a=i.child;if(a!==null)a.return=i;else for(a=i;a!==null;){if(a===e){a=null;break}if(i=a.sibling,i!==null){i.return=a.return,a=i;break}a=a.return}i=a}Dr(n,e,s.children,t),e=e.child}return e;case 9:return s=e.type,r=e.pendingProps.children,Rc(e,t),s=Js(s),r=r(s),e.flags|=1,Dr(n,e,r,t),e.child;case 14:return r=e.type,s=ui(r,e.pendingProps),s=ui(r.type,s),ZM(n,e,r,s,t);case 15:return dA(n,e,e.type,e.pendingProps,t);case 17:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:ui(r,s),Ay(n,e),e.tag=1,os(r)?(n=!0,s0(e)):n=!1,Rc(e,t),lA(e,r,s),pS(e,r,s,t),gS(null,e,r,!0,n,t);case 19:return gA(n,e,t);case 22:return hA(n,e,t)}throw Error(xe(156,e.tag))};function LA(n,e){return iL(n,e)}function hX(n,e,t,r){this.tag=n,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Zs(n,e,t,r){return new hX(n,e,t,r)}function kT(n){return n=n.prototype,!(!n||!n.isReactComponent)}function pX(n){if(typeof n=="function")return kT(n)?1:0;if(n!=null){if(n=n.$$typeof,n===X2)return 11;if(n===U2)return 14}return 2}function Eo(n,e){var t=n.alternate;return t===null?(t=Zs(n.tag,e,n.key,n.mode),t.elementType=n.elementType,t.type=n.type,t.stateNode=n.stateNode,t.alternate=n,n.alternate=t):(t.pendingProps=e,t.type=n.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=n.flags&14680064,t.childLanes=n.childLanes,t.lanes=n.lanes,t.child=n.child,t.memoizedProps=n.memoizedProps,t.memoizedState=n.memoizedState,t.updateQueue=n.updateQueue,e=n.dependencies,t.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},t.sibling=n.sibling,t.index=n.index,t.ref=n.ref,t}function Py(n,e,t,r,s,i){var a=2;if(r=n,typeof n=="function")kT(n)&&(a=1);else if(typeof n=="string")a=5;else e:switch(n){case hc:return Wl(t.children,s,i,e);case B2:a=8,s|=8;break;case $w:return n=Zs(12,t,e,s|2),n.elementType=$w,n.lanes=i,n;case Fw:return n=Zs(13,t,e,s),n.elementType=Fw,n.lanes=i,n;case Gw:return n=Zs(19,t,e,s),n.elementType=Gw,n.lanes=i,n;case VR:return cb(t,s,i,e);default:if(typeof n=="object"&&n!==null)switch(n.$$typeof){case OR:a=10;break e;case WR:a=9;break e;case X2:a=11;break e;case U2:a=14;break e;case lo:a=16,r=null;break e}throw Error(xe(130,n==null?n:typeof n,""))}return e=Zs(a,t,e,s),e.elementType=n,e.type=r,e.lanes=i,e}function Wl(n,e,t,r){return n=Zs(7,n,r,e),n.lanes=t,n}function cb(n,e,t,r){return n=Zs(22,n,r,e),n.elementType=VR,n.lanes=t,n.stateNode={isHidden:!1},n}function y1(n,e,t){return n=Zs(6,n,null,e),n.lanes=t,n}function b1(n,e,t){return e=Zs(4,n.children!==null?n.children:[],n.key,e),e.lanes=t,e.stateNode={containerInfo:n.containerInfo,pendingChildren:null,implementation:n.implementation},e}function fX(n,e,t,r,s){this.tag=e,this.containerInfo=n,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Jv(0),this.expirationTimes=Jv(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Jv(0),this.identifierPrefix=r,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function CT(n,e,t,r,s,i,a,o,l){return n=new fX(n,e,t,o,l),e===1?(e=1,i===!0&&(e|=8)):e=0,i=Zs(3,null,null,e),n.current=i,i.stateNode=n,i.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},uT(i),n}function mX(n,e,t){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:dc,key:r==null?null:""+r,children:n,containerInfo:e,implementation:t}}function AA(n){if(!n)return $o;n=n._reactInternals;e:{if(Iu(n)!==n||n.tag!==1)throw Error(xe(170));var e=n;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(os(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(xe(171))}if(n.tag===1){var t=n.type;if(os(t))return AL(n,t,e)}return e}function zA(n,e,t,r,s,i,a,o,l){return n=CT(t,r,!0,n,s,i,a,o,l),n.context=AA(null),t=n.current,r=Or(),s=No(t),i=Na(r,s),i.callback=e??null,_o(t,i,s),n.current.lanes=s,kf(n,s,r),ls(n,r),n}function db(n,e,t,r){var s=e.current,i=Or(),a=No(s);return t=AA(t),e.context===null?e.context=t:e.pendingContext=t,e=Na(i,a),e.payload={element:n},r=r===void 0?null:r,r!==null&&(e.callback=r),n=_o(s,e,a),n!==null&&(yi(n,s,a,i),Ey(n,s,a)),a}function y0(n){if(n=n.current,!n.child)return null;switch(n.child.tag){case 5:return n.child.stateNode;default:return n.child.stateNode}}function sN(n,e){if(n=n.memoizedState,n!==null&&n.dehydrated!==null){var t=n.retryLane;n.retryLane=t!==0&&t<e?t:e}}function _T(n,e){sN(n,e),(n=n.alternate)&&sN(n,e)}function gX(){return null}var DA=typeof reportError=="function"?reportError:function(n){console.error(n)};function MT(n){this._internalRoot=n}hb.prototype.render=MT.prototype.render=function(n){var e=this._internalRoot;if(e===null)throw Error(xe(409));db(n,e,null,null)};hb.prototype.unmount=MT.prototype.unmount=function(){var n=this._internalRoot;if(n!==null){this._internalRoot=null;var e=n.containerInfo;Jl(function(){db(null,n,null,null)}),e[Aa]=null}};function hb(n){this._internalRoot=n}hb.prototype.unstable_scheduleHydration=function(n){if(n){var e=hL();n={blockedOn:null,target:n,priority:e};for(var t=0;t<po.length&&e!==0&&e<po[t].priority;t++);po.splice(t,0,n),t===0&&fL(n)}};function NT(n){return!(!n||n.nodeType!==1&&n.nodeType!==9&&n.nodeType!==11)}function pb(n){return!(!n||n.nodeType!==1&&n.nodeType!==9&&n.nodeType!==11&&(n.nodeType!==8||n.nodeValue!==" react-mount-point-unstable "))}function iN(){}function yX(n,e,t,r,s){if(s){if(typeof r=="function"){var i=r;r=function(){var u=y0(a);i.call(u)}}var a=zA(e,r,n,0,null,!1,!1,"",iN);return n._reactRootContainer=a,n[Aa]=a.current,Vp(n.nodeType===8?n.parentNode:n),Jl(),a}for(;s=n.lastChild;)n.removeChild(s);if(typeof r=="function"){var o=r;r=function(){var u=y0(l);o.call(u)}}var l=CT(n,0,!1,null,null,!1,!1,"",iN);return n._reactRootContainer=l,n[Aa]=l.current,Vp(n.nodeType===8?n.parentNode:n),Jl(function(){db(e,l,t,r)}),l}function fb(n,e,t,r,s){var i=t._reactRootContainer;if(i){var a=i;if(typeof s=="function"){var o=s;s=function(){var l=y0(a);o.call(l)}}db(e,a,n,s)}else a=yX(t,e,n,s,r);return y0(a)}cL=function(n){switch(n.tag){case 3:var e=n.stateNode;if(e.current.memoizedState.isDehydrated){var t=lp(e.pendingLanes);t!==0&&(K2(e,t|1),ls(e,wn()),!(Ct&6)&&(Zc=wn()+500,Jo()))}break;case 13:Jl(function(){var r=za(n,1);if(r!==null){var s=Or();yi(r,n,1,s)}}),_T(n,1)}};Y2=function(n){if(n.tag===13){var e=za(n,134217728);if(e!==null){var t=Or();yi(e,n,134217728,t)}_T(n,134217728)}};dL=function(n){if(n.tag===13){var e=No(n),t=za(n,e);if(t!==null){var r=Or();yi(t,n,e,r)}_T(n,e)}};hL=function(){return At};pL=function(n,e){var t=At;try{return At=n,e()}finally{At=t}};Yw=function(n,e,t){switch(e){case"input":if(Vw(n,t),e=t.name,t.type==="radio"&&e!=null){for(t=n;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<t.length;e++){var r=t[e];if(r!==n&&r.form===n.form){var s=sb(r);if(!s)throw Error(xe(90));XR(r),Vw(r,s)}}}break;case"textarea":ZR(n,t);break;case"select":e=t.value,e!=null&&_c(n,!!t.multiple,e,!1)}};qR=ST;eL=Jl;var bX={usingClientEntryPoint:!1,Events:[_f,gc,sb,QR,JR,ST]},Xh={findFiberByHostInstance:Ll,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},xX={bundleType:Xh.bundleType,version:Xh.version,rendererPackageName:Xh.rendererPackageName,rendererConfig:Xh.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(n){return n=rL(n),n===null?null:n.stateNode},findFiberByHostInstance:Xh.findFiberByHostInstance||gX,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var $g=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!$g.isDisabled&&$g.supportsFiber)try{eb=$g.inject(xX),Qi=$g}catch{}}zs.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=bX;zs.createPortal=function(n,e){var t=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!NT(e))throw Error(xe(200));return mX(n,e,null,t)};zs.createRoot=function(n,e){if(!NT(n))throw Error(xe(299));var t=!1,r="",s=DA;return e!=null&&(e.unstable_strictMode===!0&&(t=!0),e.identifierPrefix!==void 0&&(r=e.identifierPrefix),e.onRecoverableError!==void 0&&(s=e.onRecoverableError)),e=CT(n,1,!1,null,null,t,!1,r,s),n[Aa]=e.current,Vp(n.nodeType===8?n.parentNode:n),new MT(e)};zs.findDOMNode=function(n){if(n==null)return null;if(n.nodeType===1)return n;var e=n._reactInternals;if(e===void 0)throw typeof n.render=="function"?Error(xe(188)):(n=Object.keys(n).join(","),Error(xe(268,n)));return n=rL(e),n=n===null?null:n.stateNode,n};zs.flushSync=function(n){return Jl(n)};zs.hydrate=function(n,e,t){if(!pb(e))throw Error(xe(200));return fb(null,n,e,!0,t)};zs.hydrateRoot=function(n,e,t){if(!NT(n))throw Error(xe(405));var r=t!=null&&t.hydratedSources||null,s=!1,i="",a=DA;if(t!=null&&(t.unstable_strictMode===!0&&(s=!0),t.identifierPrefix!==void 0&&(i=t.identifierPrefix),t.onRecoverableError!==void 0&&(a=t.onRecoverableError)),e=zA(e,null,n,1,t??null,s,!1,i,a),n[Aa]=e.current,Vp(n),r)for(n=0;n<r.length;n++)t=r[n],s=t._getVersion,s=s(t._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[t,s]:e.mutableSourceEagerHydrationData.push(t,s);return new hb(e)};zs.render=function(n,e,t){if(!pb(e))throw Error(xe(200));return fb(null,n,e,!1,t)};zs.unmountComponentAtNode=function(n){if(!pb(n))throw Error(xe(40));return n._reactRootContainer?(Jl(function(){fb(null,null,n,!1,function(){n._reactRootContainer=null,n[Aa]=null})}),!0):!1};zs.unstable_batchedUpdates=ST;zs.unstable_renderSubtreeIntoContainer=function(n,e,t,r){if(!pb(t))throw Error(xe(200));if(n==null||n._reactInternals===void 0)throw Error(xe(38));return fb(n,e,t,!1,r)};zs.version="18.3.1-next-f1338f8080-20240426";function PA(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(PA)}catch(n){console.error(n)}}PA(),PR.exports=zs;var vX=PR.exports,aN=vX;Dw.createRoot=aN.createRoot,Dw.hydrateRoot=aN.hydrateRoot;/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ET="150",wX=0,oN=1,SX=2,$A=1,TX=2,cp=3,Fo=0,_s=1,yo=2,Ro=0,Ac=1,lN=2,uN=3,cN=4,IX=5,oc=100,kX=101,CX=102,dN=103,hN=104,_X=200,MX=201,NX=202,EX=203,FA=204,GA=205,RX=206,LX=207,AX=208,zX=209,DX=210,PX=0,$X=1,FX=2,MS=3,GX=4,OX=5,WX=6,VX=7,OA=0,BX=1,XX=2,Ea=0,UX=1,ZX=2,HX=3,KX=4,YX=5,WA=300,Hc=301,Kc=302,NS=303,ES=304,mb=306,RS=1e3,fi=1001,LS=1002,Pr=1003,pN=1004,x1=1005,Xs=1006,jX=1007,Qp=1008,ql=1009,QX=1010,JX=1011,VA=1012,qX=1013,Dl=1014,Pl=1015,Jp=1016,e4=1017,t4=1018,zc=1020,n4=1021,mi=1023,r4=1024,s4=1025,Vl=1026,Yc=1027,i4=1028,a4=1029,o4=1030,l4=1031,u4=1033,v1=33776,w1=33777,S1=33778,T1=33779,fN=35840,mN=35841,gN=35842,yN=35843,c4=36196,bN=37492,xN=37496,vN=37808,wN=37809,SN=37810,TN=37811,IN=37812,kN=37813,CN=37814,_N=37815,MN=37816,NN=37817,EN=37818,RN=37819,LN=37820,AN=37821,I1=36492,d4=36283,zN=36284,DN=36285,PN=36286,eu=3e3,Wt=3001,h4=3200,p4=3201,BA=0,f4=1,Vi="srgb",qp="srgb-linear",XA="display-p3",k1=7680,m4=519,$N=35044,FN="300 es",AS=1035;class md{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const r=this._listeners;r[e]===void 0&&(r[e]=[]),r[e].indexOf(t)===-1&&r[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const r=this._listeners;return r[e]!==void 0&&r[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const i=s.indexOf(t);i!==-1&&s.splice(i,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const r=this._listeners[e.type];if(r!==void 0){e.target=this;const s=r.slice(0);for(let i=0,a=s.length;i<a;i++)s[i].call(this,e);e.target=null}}}const br=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],C1=Math.PI/180,GN=180/Math.PI;function gd(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,r=Math.random()*4294967295|0;return(br[n&255]+br[n>>8&255]+br[n>>16&255]+br[n>>24&255]+"-"+br[e&255]+br[e>>8&255]+"-"+br[e>>16&15|64]+br[e>>24&255]+"-"+br[t&63|128]+br[t>>8&255]+"-"+br[t>>16&255]+br[t>>24&255]+br[r&255]+br[r>>8&255]+br[r>>16&255]+br[r>>24&255]).toLowerCase()}function wr(n,e,t){return Math.max(e,Math.min(t,n))}function g4(n,e){return(n%e+e)%e}function _1(n,e,t){return(1-t)*n+t*e}function ON(n){return(n&n-1)===0&&n!==0}function y4(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function Fg(n,e){switch(e.constructor){case Float32Array:return n;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function ys(n,e){switch(e.constructor){case Float32Array:return n;case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}class Ue{constructor(e=0,t=0){Ue.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,r=this.y,s=e.elements;return this.x=s[0]*t+s[3]*r+s[6],this.y=s[1]*t+s[4]*r+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y;return t*t+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const r=Math.cos(t),s=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*r-a*s+e.x,this.y=i*s+a*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Fr{constructor(){Fr.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,r,s,i,a,o,l,u){const c=this.elements;return c[0]=e,c[1]=s,c[2]=o,c[3]=t,c[4]=i,c[5]=l,c[6]=r,c[7]=a,c[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,s=t.elements,i=this.elements,a=r[0],o=r[3],l=r[6],u=r[1],c=r[4],d=r[7],h=r[2],p=r[5],g=r[8],f=s[0],m=s[3],y=s[6],b=s[1],x=s[4],v=s[7],w=s[2],T=s[5],k=s[8];return i[0]=a*f+o*b+l*w,i[3]=a*m+o*x+l*T,i[6]=a*y+o*v+l*k,i[1]=u*f+c*b+d*w,i[4]=u*m+c*x+d*T,i[7]=u*y+c*v+d*k,i[2]=h*f+p*b+g*w,i[5]=h*m+p*x+g*T,i[8]=h*y+p*v+g*k,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8];return t*a*c-t*o*u-r*i*c+r*o*l+s*i*u-s*a*l}invert(){const e=this.elements,t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8],d=c*a-o*u,h=o*l-c*i,p=u*i-a*l,g=t*d+r*h+s*p;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/g;return e[0]=d*f,e[1]=(s*u-c*r)*f,e[2]=(o*r-s*a)*f,e[3]=h*f,e[4]=(c*t-s*l)*f,e[5]=(s*i-o*t)*f,e[6]=p*f,e[7]=(r*l-u*t)*f,e[8]=(a*t-r*i)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,s,i,a,o){const l=Math.cos(i),u=Math.sin(i);return this.set(r*l,r*u,-r*(l*a+u*o)+a+e,-s*u,s*l,-s*(-u*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(M1.makeScale(e,t)),this}rotate(e){return this.premultiply(M1.makeRotation(-e)),this}translate(e,t){return this.premultiply(M1.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,r,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,r=e.elements;for(let s=0;s<9;s++)if(t[s]!==r[s])return!1;return!0}fromArray(e,t=0){for(let r=0;r<9;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const M1=new Fr;function UA(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function b0(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}class qo{constructor(e=0,t=0,r=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=r,this._w=s}static slerpFlat(e,t,r,s,i,a,o){let l=r[s+0],u=r[s+1],c=r[s+2],d=r[s+3];const h=i[a+0],p=i[a+1],g=i[a+2],f=i[a+3];if(o===0){e[t+0]=l,e[t+1]=u,e[t+2]=c,e[t+3]=d;return}if(o===1){e[t+0]=h,e[t+1]=p,e[t+2]=g,e[t+3]=f;return}if(d!==f||l!==h||u!==p||c!==g){let m=1-o;const y=l*h+u*p+c*g+d*f,b=y>=0?1:-1,x=1-y*y;if(x>Number.EPSILON){const w=Math.sqrt(x),T=Math.atan2(w,y*b);m=Math.sin(m*T)/w,o=Math.sin(o*T)/w}const v=o*b;if(l=l*m+h*v,u=u*m+p*v,c=c*m+g*v,d=d*m+f*v,m===1-o){const w=1/Math.sqrt(l*l+u*u+c*c+d*d);l*=w,u*=w,c*=w,d*=w}}e[t]=l,e[t+1]=u,e[t+2]=c,e[t+3]=d}static multiplyQuaternionsFlat(e,t,r,s,i,a){const o=r[s],l=r[s+1],u=r[s+2],c=r[s+3],d=i[a],h=i[a+1],p=i[a+2],g=i[a+3];return e[t]=o*g+c*d+l*p-u*h,e[t+1]=l*g+c*h+u*d-o*p,e[t+2]=u*g+c*p+o*h-l*d,e[t+3]=c*g-o*d-l*h-u*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,s){return this._x=e,this._y=t,this._z=r,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const r=e._x,s=e._y,i=e._z,a=e._order,o=Math.cos,l=Math.sin,u=o(r/2),c=o(s/2),d=o(i/2),h=l(r/2),p=l(s/2),g=l(i/2);switch(a){case"XYZ":this._x=h*c*d+u*p*g,this._y=u*p*d-h*c*g,this._z=u*c*g+h*p*d,this._w=u*c*d-h*p*g;break;case"YXZ":this._x=h*c*d+u*p*g,this._y=u*p*d-h*c*g,this._z=u*c*g-h*p*d,this._w=u*c*d+h*p*g;break;case"ZXY":this._x=h*c*d-u*p*g,this._y=u*p*d+h*c*g,this._z=u*c*g+h*p*d,this._w=u*c*d-h*p*g;break;case"ZYX":this._x=h*c*d-u*p*g,this._y=u*p*d+h*c*g,this._z=u*c*g-h*p*d,this._w=u*c*d+h*p*g;break;case"YZX":this._x=h*c*d+u*p*g,this._y=u*p*d+h*c*g,this._z=u*c*g-h*p*d,this._w=u*c*d-h*p*g;break;case"XZY":this._x=h*c*d-u*p*g,this._y=u*p*d-h*c*g,this._z=u*c*g+h*p*d,this._w=u*c*d+h*p*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const r=t/2,s=Math.sin(r);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,r=t[0],s=t[4],i=t[8],a=t[1],o=t[5],l=t[9],u=t[2],c=t[6],d=t[10],h=r+o+d;if(h>0){const p=.5/Math.sqrt(h+1);this._w=.25/p,this._x=(c-l)*p,this._y=(i-u)*p,this._z=(a-s)*p}else if(r>o&&r>d){const p=2*Math.sqrt(1+r-o-d);this._w=(c-l)/p,this._x=.25*p,this._y=(s+a)/p,this._z=(i+u)/p}else if(o>d){const p=2*Math.sqrt(1+o-r-d);this._w=(i-u)/p,this._x=(s+a)/p,this._y=.25*p,this._z=(l+c)/p}else{const p=2*Math.sqrt(1+d-r-o);this._w=(a-s)/p,this._x=(i+u)/p,this._y=(l+c)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(wr(this.dot(e),-1,1)))}rotateTowards(e,t){const r=this.angleTo(e);if(r===0)return this;const s=Math.min(1,t/r);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const r=e._x,s=e._y,i=e._z,a=e._w,o=t._x,l=t._y,u=t._z,c=t._w;return this._x=r*c+a*o+s*u-i*l,this._y=s*c+a*l+i*o-r*u,this._z=i*c+a*u+r*l-s*o,this._w=a*c-r*o-s*l-i*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const r=this._x,s=this._y,i=this._z,a=this._w;let o=a*e._w+r*e._x+s*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=r,this._y=s,this._z=i,this;const l=1-o*o;if(l<=Number.EPSILON){const p=1-t;return this._w=p*a+t*this._w,this._x=p*r+t*this._x,this._y=p*s+t*this._y,this._z=p*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(l),c=Math.atan2(u,o),d=Math.sin((1-t)*c)/u,h=Math.sin(t*c)/u;return this._w=a*d+this._w*h,this._x=r*d+this._x*h,this._y=s*d+this._y*h,this._z=i*d+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,r){return this.copy(e).slerp(t,r)}random(){const e=Math.random(),t=Math.sqrt(1-e),r=Math.sqrt(e),s=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(s),r*Math.sin(i),r*Math.cos(i),t*Math.sin(s))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class te{constructor(e=0,t=0,r=0){te.prototype.isVector3=!0,this.x=e,this.y=t,this.z=r}set(e,t,r){return r===void 0&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(WN.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(WN.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,r=this.y,s=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*s,this.y=i[1]*t+i[4]*r+i[7]*s,this.z=i[2]*t+i[5]*r+i[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,r=this.y,s=this.z,i=e.elements,a=1/(i[3]*t+i[7]*r+i[11]*s+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*s+i[12])*a,this.y=(i[1]*t+i[5]*r+i[9]*s+i[13])*a,this.z=(i[2]*t+i[6]*r+i[10]*s+i[14])*a,this}applyQuaternion(e){const t=this.x,r=this.y,s=this.z,i=e.x,a=e.y,o=e.z,l=e.w,u=l*t+a*s-o*r,c=l*r+o*t-i*s,d=l*s+i*r-a*t,h=-i*t-a*r-o*s;return this.x=u*l+h*-i+c*-o-d*-a,this.y=c*l+h*-a+d*-i-u*-o,this.z=d*l+h*-o+u*-a-c*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,r=this.y,s=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*s,this.y=i[1]*t+i[5]*r+i[9]*s,this.z=i[2]*t+i[6]*r+i[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const r=e.x,s=e.y,i=e.z,a=t.x,o=t.y,l=t.z;return this.x=s*l-i*o,this.y=i*a-r*l,this.z=r*o-s*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)}projectOnPlane(e){return N1.copy(this).projectOnVector(e),this.sub(N1)}reflect(e){return this.sub(N1.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const r=this.dot(e)/t;return Math.acos(wr(r,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y,s=this.z-e.z;return t*t+r*r+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){const s=Math.sin(t)*e;return this.x=s*Math.sin(r),this.y=Math.cos(t)*e,this.z=s*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,r=Math.sqrt(1-e**2);return this.x=r*Math.cos(t),this.y=r*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const N1=new te,WN=new qo;function Dc(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function E1(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}const b4=new Fr().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),x4=new Fr().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]),bo=new te;function v4(n){return n.convertSRGBToLinear(),bo.set(n.r,n.g,n.b).applyMatrix3(x4),n.setRGB(bo.x,bo.y,bo.z)}function w4(n){return bo.set(n.r,n.g,n.b).applyMatrix3(b4),n.setRGB(bo.x,bo.y,bo.z).convertLinearToSRGB()}const S4={[qp]:n=>n,[Vi]:n=>n.convertSRGBToLinear(),[XA]:v4},T4={[qp]:n=>n,[Vi]:n=>n.convertLinearToSRGB(),[XA]:w4},Ar={enabled:!1,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(n){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!n},get workingColorSpace(){return qp},set workingColorSpace(n){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const r=S4[e],s=T4[t];if(r===void 0||s===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return s(r(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this.workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this.workingColorSpace)}};let Uu;class ZA{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Uu===void 0&&(Uu=b0("canvas")),Uu.width=e.width,Uu.height=e.height;const r=Uu.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=Uu}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=b0("canvas");t.width=e.width,t.height=e.height;const r=t.getContext("2d");r.drawImage(e,0,0,e.width,e.height);const s=r.getImageData(0,0,e.width,e.height),i=s.data;for(let a=0;a<i.length;a++)i[a]=Dc(i[a]/255)*255;return r.putImageData(s,0,0),t}else if(e.data){const t=e.data.slice(0);for(let r=0;r<t.length;r++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[r]=Math.floor(Dc(t[r]/255)*255):t[r]=Dc(t[r]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class HA{constructor(e=null){this.isSource=!0,this.uuid=gd(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const r={uuid:this.uuid,url:""},s=this.data;if(s!==null){let i;if(Array.isArray(s)){i=[];for(let a=0,o=s.length;a<o;a++)s[a].isDataTexture?i.push(R1(s[a].image)):i.push(R1(s[a]))}else i=R1(s);r.url=i}return t||(e.images[this.uuid]=r),r}}function R1(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?ZA.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let I4=0;class Ms extends md{constructor(e=Ms.DEFAULT_IMAGE,t=Ms.DEFAULT_MAPPING,r=fi,s=fi,i=Xs,a=Qp,o=mi,l=ql,u=Ms.DEFAULT_ANISOTROPY,c=eu){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:I4++}),this.uuid=gd(),this.name="",this.source=new HA(e),this.mipmaps=[],this.mapping=t,this.wrapS=r,this.wrapT=s,this.magFilter=i,this.minFilter=a,this.anisotropy=u,this.format=o,this.internalFormat=null,this.type=l,this.offset=new Ue(0,0),this.repeat=new Ue(1,1),this.center=new Ue(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Fr,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(r.userData=this.userData),t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==WA)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case RS:e.x=e.x-Math.floor(e.x);break;case fi:e.x=e.x<0?0:1;break;case LS:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case RS:e.y=e.y-Math.floor(e.y);break;case fi:e.y=e.y<0?0:1;break;case LS:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Ms.DEFAULT_IMAGE=null;Ms.DEFAULT_MAPPING=WA;Ms.DEFAULT_ANISOTROPY=1;class tr{constructor(e=0,t=0,r=0,s=1){tr.prototype.isVector4=!0,this.x=e,this.y=t,this.z=r,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,s){return this.x=e,this.y=t,this.z=r,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,r=this.y,s=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*s+a[12]*i,this.y=a[1]*t+a[5]*r+a[9]*s+a[13]*i,this.z=a[2]*t+a[6]*r+a[10]*s+a[14]*i,this.w=a[3]*t+a[7]*r+a[11]*s+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,s,i;const l=e.elements,u=l[0],c=l[4],d=l[8],h=l[1],p=l[5],g=l[9],f=l[2],m=l[6],y=l[10];if(Math.abs(c-h)<.01&&Math.abs(d-f)<.01&&Math.abs(g-m)<.01){if(Math.abs(c+h)<.1&&Math.abs(d+f)<.1&&Math.abs(g+m)<.1&&Math.abs(u+p+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(u+1)/2,v=(p+1)/2,w=(y+1)/2,T=(c+h)/4,k=(d+f)/4,S=(g+m)/4;return x>v&&x>w?x<.01?(r=0,s=.707106781,i=.707106781):(r=Math.sqrt(x),s=T/r,i=k/r):v>w?v<.01?(r=.707106781,s=0,i=.707106781):(s=Math.sqrt(v),r=T/s,i=S/s):w<.01?(r=.707106781,s=.707106781,i=0):(i=Math.sqrt(w),r=k/i,s=S/i),this.set(r,s,i,t),this}let b=Math.sqrt((m-g)*(m-g)+(d-f)*(d-f)+(h-c)*(h-c));return Math.abs(b)<.001&&(b=1),this.x=(m-g)/b,this.y=(d-f)/b,this.z=(h-c)/b,this.w=Math.acos((u+p+y-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class tu extends md{constructor(e=1,t=1,r={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new tr(0,0,e,t),this.scissorTest=!1,this.viewport=new tr(0,0,e,t);const s={width:e,height:t,depth:1};this.texture=new Ms(s,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=r.generateMipmaps!==void 0?r.generateMipmaps:!1,this.texture.internalFormat=r.internalFormat!==void 0?r.internalFormat:null,this.texture.minFilter=r.minFilter!==void 0?r.minFilter:Xs,this.depthBuffer=r.depthBuffer!==void 0?r.depthBuffer:!0,this.stencilBuffer=r.stencilBuffer!==void 0?r.stencilBuffer:!1,this.depthTexture=r.depthTexture!==void 0?r.depthTexture:null,this.samples=r.samples!==void 0?r.samples:0}setSize(e,t,r=1){(this.width!==e||this.height!==t||this.depth!==r)&&(this.width=e,this.height=t,this.depth=r,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=r,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new HA(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class KA extends Ms{constructor(e=null,t=1,r=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:r,depth:s},this.magFilter=Pr,this.minFilter=Pr,this.wrapR=fi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class k4 extends Ms{constructor(e=null,t=1,r=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:r,depth:s},this.magFilter=Pr,this.minFilter=Pr,this.wrapR=fi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Nf{constructor(e=new te(1/0,1/0,1/0),t=new te(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,r=1/0,s=1/0,i=-1/0,a=-1/0,o=-1/0;for(let l=0,u=e.length;l<u;l+=3){const c=e[l],d=e[l+1],h=e[l+2];c<t&&(t=c),d<r&&(r=d),h<s&&(s=h),c>i&&(i=c),d>a&&(a=d),h>o&&(o=h)}return this.min.set(t,r,s),this.max.set(i,a,o),this}setFromBufferAttribute(e){let t=1/0,r=1/0,s=1/0,i=-1/0,a=-1/0,o=-1/0;for(let l=0,u=e.count;l<u;l++){const c=e.getX(l),d=e.getY(l),h=e.getZ(l);c<t&&(t=c),d<r&&(r=d),h<s&&(s=h),c>i&&(i=c),d>a&&(a=d),h>o&&(o=h)}return this.min.set(t,r,s),this.max.set(i,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=fl.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const r=e.geometry;if(r!==void 0)if(t&&r.attributes!=null&&r.attributes.position!==void 0){const i=r.attributes.position;for(let a=0,o=i.count;a<o;a++)fl.fromBufferAttribute(i,a).applyMatrix4(e.matrixWorld),this.expandByPoint(fl)}else r.boundingBox===null&&r.computeBoundingBox(),L1.copy(r.boundingBox),L1.applyMatrix4(e.matrixWorld),this.union(L1);const s=e.children;for(let i=0,a=s.length;i<a;i++)this.expandByObject(s[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,fl),fl.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Uh),Gg.subVectors(this.max,Uh),Zu.subVectors(e.a,Uh),Hu.subVectors(e.b,Uh),Ku.subVectors(e.c,Uh),no.subVectors(Hu,Zu),ro.subVectors(Ku,Hu),ml.subVectors(Zu,Ku);let t=[0,-no.z,no.y,0,-ro.z,ro.y,0,-ml.z,ml.y,no.z,0,-no.x,ro.z,0,-ro.x,ml.z,0,-ml.x,-no.y,no.x,0,-ro.y,ro.x,0,-ml.y,ml.x,0];return!A1(t,Zu,Hu,Ku,Gg)||(t=[1,0,0,0,1,0,0,0,1],!A1(t,Zu,Hu,Ku,Gg))?!1:(Og.crossVectors(no,ro),t=[Og.x,Og.y,Og.z],A1(t,Zu,Hu,Ku,Gg))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,fl).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(fl).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(pa[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),pa[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),pa[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),pa[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),pa[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),pa[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),pa[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),pa[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(pa),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const pa=[new te,new te,new te,new te,new te,new te,new te,new te],fl=new te,L1=new Nf,Zu=new te,Hu=new te,Ku=new te,no=new te,ro=new te,ml=new te,Uh=new te,Gg=new te,Og=new te,gl=new te;function A1(n,e,t,r,s){for(let i=0,a=n.length-3;i<=a;i+=3){gl.fromArray(n,i);const o=s.x*Math.abs(gl.x)+s.y*Math.abs(gl.y)+s.z*Math.abs(gl.z),l=e.dot(gl),u=t.dot(gl),c=r.dot(gl);if(Math.max(-Math.max(l,u,c),Math.min(l,u,c))>o)return!1}return!0}const C4=new Nf,Zh=new te,z1=new te;class RT{constructor(e=new te,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const r=this.center;t!==void 0?r.copy(t):C4.setFromPoints(e).getCenter(r);let s=0;for(let i=0,a=e.length;i<a;i++)s=Math.max(s,r.distanceToSquared(e[i]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Zh.subVectors(e,this.center);const t=Zh.lengthSq();if(t>this.radius*this.radius){const r=Math.sqrt(t),s=(r-this.radius)*.5;this.center.addScaledVector(Zh,s/r),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(z1.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Zh.copy(e.center).add(z1)),this.expandByPoint(Zh.copy(e.center).sub(z1))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const fa=new te,D1=new te,Wg=new te,so=new te,P1=new te,Vg=new te,$1=new te;class _4{constructor(e=new te,t=new te(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,fa)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,r)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=fa.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(fa.copy(this.origin).addScaledVector(this.direction,t),fa.distanceToSquared(e))}distanceSqToSegment(e,t,r,s){D1.copy(e).add(t).multiplyScalar(.5),Wg.copy(t).sub(e).normalize(),so.copy(this.origin).sub(D1);const i=e.distanceTo(t)*.5,a=-this.direction.dot(Wg),o=so.dot(this.direction),l=-so.dot(Wg),u=so.lengthSq(),c=Math.abs(1-a*a);let d,h,p,g;if(c>0)if(d=a*l-o,h=a*o-l,g=i*c,d>=0)if(h>=-g)if(h<=g){const f=1/c;d*=f,h*=f,p=d*(d+a*h+2*o)+h*(a*d+h+2*l)+u}else h=i,d=Math.max(0,-(a*h+o)),p=-d*d+h*(h+2*l)+u;else h=-i,d=Math.max(0,-(a*h+o)),p=-d*d+h*(h+2*l)+u;else h<=-g?(d=Math.max(0,-(-a*i+o)),h=d>0?-i:Math.min(Math.max(-i,-l),i),p=-d*d+h*(h+2*l)+u):h<=g?(d=0,h=Math.min(Math.max(-i,-l),i),p=h*(h+2*l)+u):(d=Math.max(0,-(a*i+o)),h=d>0?i:Math.min(Math.max(-i,-l),i),p=-d*d+h*(h+2*l)+u);else h=a>0?-i:i,d=Math.max(0,-(a*h+o)),p=-d*d+h*(h+2*l)+u;return r&&r.copy(this.origin).addScaledVector(this.direction,d),s&&s.copy(D1).addScaledVector(Wg,h),p}intersectSphere(e,t){fa.subVectors(e.center,this.origin);const r=fa.dot(this.direction),s=fa.dot(fa)-r*r,i=e.radius*e.radius;if(s>i)return null;const a=Math.sqrt(i-s),o=r-a,l=r+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null}intersectPlane(e,t){const r=this.distanceToPlane(e);return r===null?null:this.at(r,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let r,s,i,a,o,l;const u=1/this.direction.x,c=1/this.direction.y,d=1/this.direction.z,h=this.origin;return u>=0?(r=(e.min.x-h.x)*u,s=(e.max.x-h.x)*u):(r=(e.max.x-h.x)*u,s=(e.min.x-h.x)*u),c>=0?(i=(e.min.y-h.y)*c,a=(e.max.y-h.y)*c):(i=(e.max.y-h.y)*c,a=(e.min.y-h.y)*c),r>a||i>s||((i>r||isNaN(r))&&(r=i),(a<s||isNaN(s))&&(s=a),d>=0?(o=(e.min.z-h.z)*d,l=(e.max.z-h.z)*d):(o=(e.max.z-h.z)*d,l=(e.min.z-h.z)*d),r>l||o>s)||((o>r||r!==r)&&(r=o),(l<s||s!==s)&&(s=l),s<0)?null:this.at(r>=0?r:s,t)}intersectsBox(e){return this.intersectBox(e,fa)!==null}intersectTriangle(e,t,r,s,i){P1.subVectors(t,e),Vg.subVectors(r,e),$1.crossVectors(P1,Vg);let a=this.direction.dot($1),o;if(a>0){if(s)return null;o=1}else if(a<0)o=-1,a=-a;else return null;so.subVectors(this.origin,e);const l=o*this.direction.dot(Vg.crossVectors(so,Vg));if(l<0)return null;const u=o*this.direction.dot(P1.cross(so));if(u<0||l+u>a)return null;const c=-o*so.dot($1);return c<0?null:this.at(c/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Bt{constructor(){Bt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,r,s,i,a,o,l,u,c,d,h,p,g,f,m){const y=this.elements;return y[0]=e,y[4]=t,y[8]=r,y[12]=s,y[1]=i,y[5]=a,y[9]=o,y[13]=l,y[2]=u,y[6]=c,y[10]=d,y[14]=h,y[3]=p,y[7]=g,y[11]=f,y[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Bt().fromArray(this.elements)}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this}copyPosition(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,r=e.elements,s=1/Yu.setFromMatrixColumn(e,0).length(),i=1/Yu.setFromMatrixColumn(e,1).length(),a=1/Yu.setFromMatrixColumn(e,2).length();return t[0]=r[0]*s,t[1]=r[1]*s,t[2]=r[2]*s,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*a,t[9]=r[9]*a,t[10]=r[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,r=e.x,s=e.y,i=e.z,a=Math.cos(r),o=Math.sin(r),l=Math.cos(s),u=Math.sin(s),c=Math.cos(i),d=Math.sin(i);if(e.order==="XYZ"){const h=a*c,p=a*d,g=o*c,f=o*d;t[0]=l*c,t[4]=-l*d,t[8]=u,t[1]=p+g*u,t[5]=h-f*u,t[9]=-o*l,t[2]=f-h*u,t[6]=g+p*u,t[10]=a*l}else if(e.order==="YXZ"){const h=l*c,p=l*d,g=u*c,f=u*d;t[0]=h+f*o,t[4]=g*o-p,t[8]=a*u,t[1]=a*d,t[5]=a*c,t[9]=-o,t[2]=p*o-g,t[6]=f+h*o,t[10]=a*l}else if(e.order==="ZXY"){const h=l*c,p=l*d,g=u*c,f=u*d;t[0]=h-f*o,t[4]=-a*d,t[8]=g+p*o,t[1]=p+g*o,t[5]=a*c,t[9]=f-h*o,t[2]=-a*u,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const h=a*c,p=a*d,g=o*c,f=o*d;t[0]=l*c,t[4]=g*u-p,t[8]=h*u+f,t[1]=l*d,t[5]=f*u+h,t[9]=p*u-g,t[2]=-u,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const h=a*l,p=a*u,g=o*l,f=o*u;t[0]=l*c,t[4]=f-h*d,t[8]=g*d+p,t[1]=d,t[5]=a*c,t[9]=-o*c,t[2]=-u*c,t[6]=p*d+g,t[10]=h-f*d}else if(e.order==="XZY"){const h=a*l,p=a*u,g=o*l,f=o*u;t[0]=l*c,t[4]=-d,t[8]=u*c,t[1]=h*d+f,t[5]=a*c,t[9]=p*d-g,t[2]=g*d-p,t[6]=o*c,t[10]=f*d+h}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(M4,e,N4)}lookAt(e,t,r){const s=this.elements;return bs.subVectors(e,t),bs.lengthSq()===0&&(bs.z=1),bs.normalize(),io.crossVectors(r,bs),io.lengthSq()===0&&(Math.abs(r.z)===1?bs.x+=1e-4:bs.z+=1e-4,bs.normalize(),io.crossVectors(r,bs)),io.normalize(),Bg.crossVectors(bs,io),s[0]=io.x,s[4]=Bg.x,s[8]=bs.x,s[1]=io.y,s[5]=Bg.y,s[9]=bs.y,s[2]=io.z,s[6]=Bg.z,s[10]=bs.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,s=t.elements,i=this.elements,a=r[0],o=r[4],l=r[8],u=r[12],c=r[1],d=r[5],h=r[9],p=r[13],g=r[2],f=r[6],m=r[10],y=r[14],b=r[3],x=r[7],v=r[11],w=r[15],T=s[0],k=s[4],S=s[8],C=s[12],_=s[1],z=s[5],P=s[9],R=s[13],A=s[2],F=s[6],B=s[10],K=s[14],L=s[3],O=s[7],U=s[11],ee=s[15];return i[0]=a*T+o*_+l*A+u*L,i[4]=a*k+o*z+l*F+u*O,i[8]=a*S+o*P+l*B+u*U,i[12]=a*C+o*R+l*K+u*ee,i[1]=c*T+d*_+h*A+p*L,i[5]=c*k+d*z+h*F+p*O,i[9]=c*S+d*P+h*B+p*U,i[13]=c*C+d*R+h*K+p*ee,i[2]=g*T+f*_+m*A+y*L,i[6]=g*k+f*z+m*F+y*O,i[10]=g*S+f*P+m*B+y*U,i[14]=g*C+f*R+m*K+y*ee,i[3]=b*T+x*_+v*A+w*L,i[7]=b*k+x*z+v*F+w*O,i[11]=b*S+x*P+v*B+w*U,i[15]=b*C+x*R+v*K+w*ee,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[4],s=e[8],i=e[12],a=e[1],o=e[5],l=e[9],u=e[13],c=e[2],d=e[6],h=e[10],p=e[14],g=e[3],f=e[7],m=e[11],y=e[15];return g*(+i*l*d-s*u*d-i*o*h+r*u*h+s*o*p-r*l*p)+f*(+t*l*p-t*u*h+i*a*h-s*a*p+s*u*c-i*l*c)+m*(+t*u*d-t*o*p-i*a*d+r*a*p+i*o*c-r*u*c)+y*(-s*o*c-t*l*d+t*o*h+s*a*d-r*a*h+r*l*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=r),this}invert(){const e=this.elements,t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8],d=e[9],h=e[10],p=e[11],g=e[12],f=e[13],m=e[14],y=e[15],b=d*m*u-f*h*u+f*l*p-o*m*p-d*l*y+o*h*y,x=g*h*u-c*m*u-g*l*p+a*m*p+c*l*y-a*h*y,v=c*f*u-g*d*u+g*o*p-a*f*p-c*o*y+a*d*y,w=g*d*l-c*f*l-g*o*h+a*f*h+c*o*m-a*d*m,T=t*b+r*x+s*v+i*w;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const k=1/T;return e[0]=b*k,e[1]=(f*h*i-d*m*i-f*s*p+r*m*p+d*s*y-r*h*y)*k,e[2]=(o*m*i-f*l*i+f*s*u-r*m*u-o*s*y+r*l*y)*k,e[3]=(d*l*i-o*h*i-d*s*u+r*h*u+o*s*p-r*l*p)*k,e[4]=x*k,e[5]=(c*m*i-g*h*i+g*s*p-t*m*p-c*s*y+t*h*y)*k,e[6]=(g*l*i-a*m*i-g*s*u+t*m*u+a*s*y-t*l*y)*k,e[7]=(a*h*i-c*l*i+c*s*u-t*h*u-a*s*p+t*l*p)*k,e[8]=v*k,e[9]=(g*d*i-c*f*i-g*r*p+t*f*p+c*r*y-t*d*y)*k,e[10]=(a*f*i-g*o*i+g*r*u-t*f*u-a*r*y+t*o*y)*k,e[11]=(c*o*i-a*d*i-c*r*u+t*d*u+a*r*p-t*o*p)*k,e[12]=w*k,e[13]=(c*f*s-g*d*s+g*r*h-t*f*h-c*r*m+t*d*m)*k,e[14]=(g*o*s-a*f*s-g*r*l+t*f*l+a*r*m-t*o*m)*k,e[15]=(a*d*s-c*o*s+c*r*l-t*d*l-a*r*h+t*o*h)*k,this}scale(e){const t=this.elements,r=e.x,s=e.y,i=e.z;return t[0]*=r,t[4]*=s,t[8]*=i,t[1]*=r,t[5]*=s,t[9]*=i,t[2]*=r,t[6]*=s,t[10]*=i,t[3]*=r,t[7]*=s,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,s))}makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const r=Math.cos(t),s=Math.sin(t),i=1-r,a=e.x,o=e.y,l=e.z,u=i*a,c=i*o;return this.set(u*a+r,u*o-s*l,u*l+s*o,0,u*o+s*l,c*o+r,c*l-s*a,0,u*l-s*o,c*l+s*a,i*l*l+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,s,i,a){return this.set(1,r,i,0,e,1,a,0,t,s,1,0,0,0,0,1),this}compose(e,t,r){const s=this.elements,i=t._x,a=t._y,o=t._z,l=t._w,u=i+i,c=a+a,d=o+o,h=i*u,p=i*c,g=i*d,f=a*c,m=a*d,y=o*d,b=l*u,x=l*c,v=l*d,w=r.x,T=r.y,k=r.z;return s[0]=(1-(f+y))*w,s[1]=(p+v)*w,s[2]=(g-x)*w,s[3]=0,s[4]=(p-v)*T,s[5]=(1-(h+y))*T,s[6]=(m+b)*T,s[7]=0,s[8]=(g+x)*k,s[9]=(m-b)*k,s[10]=(1-(h+f))*k,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,r){const s=this.elements;let i=Yu.set(s[0],s[1],s[2]).length();const a=Yu.set(s[4],s[5],s[6]).length(),o=Yu.set(s[8],s[9],s[10]).length();this.determinant()<0&&(i=-i),e.x=s[12],e.y=s[13],e.z=s[14],ii.copy(this);const u=1/i,c=1/a,d=1/o;return ii.elements[0]*=u,ii.elements[1]*=u,ii.elements[2]*=u,ii.elements[4]*=c,ii.elements[5]*=c,ii.elements[6]*=c,ii.elements[8]*=d,ii.elements[9]*=d,ii.elements[10]*=d,t.setFromRotationMatrix(ii),r.x=i,r.y=a,r.z=o,this}makePerspective(e,t,r,s,i,a){const o=this.elements,l=2*i/(t-e),u=2*i/(r-s),c=(t+e)/(t-e),d=(r+s)/(r-s),h=-(a+i)/(a-i),p=-2*a*i/(a-i);return o[0]=l,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=u,o[9]=d,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,r,s,i,a){const o=this.elements,l=1/(t-e),u=1/(r-s),c=1/(a-i),d=(t+e)*l,h=(r+s)*u,p=(a+i)*c;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-d,o[1]=0,o[5]=2*u,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,r=e.elements;for(let s=0;s<16;s++)if(t[s]!==r[s])return!1;return!0}fromArray(e,t=0){for(let r=0;r<16;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}const Yu=new te,ii=new Bt,M4=new te(0,0,0),N4=new te(1,1,1),io=new te,Bg=new te,bs=new te,VN=new Bt,BN=new qo;class gb{constructor(e=0,t=0,r=0,s=gb.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=r,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,s=this._order){return this._x=e,this._y=t,this._z=r,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,r=!0){const s=e.elements,i=s[0],a=s[4],o=s[8],l=s[1],u=s[5],c=s[9],d=s[2],h=s[6],p=s[10];switch(t){case"XYZ":this._y=Math.asin(wr(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,p),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(h,u),this._z=0);break;case"YXZ":this._x=Math.asin(-wr(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-d,i),this._z=0);break;case"ZXY":this._x=Math.asin(wr(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(l,i));break;case"ZYX":this._y=Math.asin(-wr(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(h,p),this._z=Math.atan2(l,i)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(wr(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-d,i)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-wr(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,u),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-c,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,r===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return VN.makeRotationFromQuaternion(e),this.setFromRotationMatrix(VN,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return BN.setFromEuler(this),this.setFromQuaternion(BN,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}gb.DEFAULT_ORDER="XYZ";class YA{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let E4=0;const XN=new te,ju=new qo,ma=new Bt,Xg=new te,Hh=new te,R4=new te,L4=new qo,UN=new te(1,0,0),ZN=new te(0,1,0),HN=new te(0,0,1),A4={type:"added"},KN={type:"removed"};class kr extends md{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:E4++}),this.uuid=gd(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=kr.DEFAULT_UP.clone();const e=new te,t=new gb,r=new qo,s=new te(1,1,1);function i(){r.setFromEuler(t,!1)}function a(){t.setFromQuaternion(r,void 0,!1)}t._onChange(i),r._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Bt},normalMatrix:{value:new Fr}}),this.matrix=new Bt,this.matrixWorld=new Bt,this.matrixAutoUpdate=kr.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=kr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new YA,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ju.setFromAxisAngle(e,t),this.quaternion.multiply(ju),this}rotateOnWorldAxis(e,t){return ju.setFromAxisAngle(e,t),this.quaternion.premultiply(ju),this}rotateX(e){return this.rotateOnAxis(UN,e)}rotateY(e){return this.rotateOnAxis(ZN,e)}rotateZ(e){return this.rotateOnAxis(HN,e)}translateOnAxis(e,t){return XN.copy(e).applyQuaternion(this.quaternion),this.position.add(XN.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(UN,e)}translateY(e){return this.translateOnAxis(ZN,e)}translateZ(e){return this.translateOnAxis(HN,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ma.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?Xg.copy(e):Xg.set(e,t,r);const s=this.parent;this.updateWorldMatrix(!0,!1),Hh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ma.lookAt(Hh,Xg,this.up):ma.lookAt(Xg,Hh,this.up),this.quaternion.setFromRotationMatrix(ma),s&&(ma.extractRotation(s.matrixWorld),ju.setFromRotationMatrix(ma),this.quaternion.premultiply(ju.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(A4)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let r=0;r<arguments.length;r++)this.remove(arguments[r]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(KN)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(KN)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),ma.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ma.multiply(e.parent.matrixWorld)),e.applyMatrix4(ma),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let r=0,s=this.children.length;r<s;r++){const a=this.children[r].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let r=[];this[e]===t&&r.push(this);for(let s=0,i=this.children.length;s<i;s++){const a=this.children[s].getObjectsByProperty(e,t);a.length>0&&(r=r.concat(a))}return r}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hh,e,R4),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hh,L4,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let r=0,s=t.length;r<s;r++)t[r].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let r=0,s=t.length;r<s;r++)t[r].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let r=0,s=t.length;r<s;r++){const i=t[r];(i.matrixWorldAutoUpdate===!0||e===!0)&&i.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const r=this.parent;if(e===!0&&r!==null&&r.matrixWorldAutoUpdate===!0&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const s=this.children;for(let i=0,a=s.length;i<a;i++){const o=s[i];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",r={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function i(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=i(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let u=0,c=l.length;u<c;u++){const d=l[u];i(e.shapes,d)}else i(e.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(i(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,u=this.material.length;l<u;l++)o.push(i(e.materials,this.material[l]));s.material=o}else s.material=i(e.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];s.animations.push(i(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),u=a(e.textures),c=a(e.images),d=a(e.shapes),h=a(e.skeletons),p=a(e.animations),g=a(e.nodes);o.length>0&&(r.geometries=o),l.length>0&&(r.materials=l),u.length>0&&(r.textures=u),c.length>0&&(r.images=c),d.length>0&&(r.shapes=d),h.length>0&&(r.skeletons=h),p.length>0&&(r.animations=p),g.length>0&&(r.nodes=g)}return r.object=s,r;function a(o){const l=[];for(const u in o){const c=o[u];delete c.metadata,l.push(c)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let r=0;r<e.children.length;r++){const s=e.children[r];this.add(s.clone())}return this}}kr.DEFAULT_UP=new te(0,1,0);kr.DEFAULT_MATRIX_AUTO_UPDATE=!0;kr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ai=new te,ga=new te,F1=new te,ya=new te,Qu=new te,Ju=new te,YN=new te,G1=new te,O1=new te,W1=new te;class Ta{constructor(e=new te,t=new te,r=new te){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,s){s.subVectors(r,t),ai.subVectors(e,t),s.cross(ai);const i=s.lengthSq();return i>0?s.multiplyScalar(1/Math.sqrt(i)):s.set(0,0,0)}static getBarycoord(e,t,r,s,i){ai.subVectors(s,t),ga.subVectors(r,t),F1.subVectors(e,t);const a=ai.dot(ai),o=ai.dot(ga),l=ai.dot(F1),u=ga.dot(ga),c=ga.dot(F1),d=a*u-o*o;if(d===0)return i.set(-2,-1,-1);const h=1/d,p=(u*l-o*c)*h,g=(a*c-o*l)*h;return i.set(1-p-g,g,p)}static containsPoint(e,t,r,s){return this.getBarycoord(e,t,r,s,ya),ya.x>=0&&ya.y>=0&&ya.x+ya.y<=1}static getUV(e,t,r,s,i,a,o,l){return this.getBarycoord(e,t,r,s,ya),l.set(0,0),l.addScaledVector(i,ya.x),l.addScaledVector(a,ya.y),l.addScaledVector(o,ya.z),l}static isFrontFacing(e,t,r,s){return ai.subVectors(r,t),ga.subVectors(e,t),ai.cross(ga).dot(s)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,s){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,r,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,r),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ai.subVectors(this.c,this.b),ga.subVectors(this.a,this.b),ai.cross(ga).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ta.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Ta.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,s,i){return Ta.getUV(e,this.a,this.b,this.c,t,r,s,i)}containsPoint(e){return Ta.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ta.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const r=this.a,s=this.b,i=this.c;let a,o;Qu.subVectors(s,r),Ju.subVectors(i,r),G1.subVectors(e,r);const l=Qu.dot(G1),u=Ju.dot(G1);if(l<=0&&u<=0)return t.copy(r);O1.subVectors(e,s);const c=Qu.dot(O1),d=Ju.dot(O1);if(c>=0&&d<=c)return t.copy(s);const h=l*d-c*u;if(h<=0&&l>=0&&c<=0)return a=l/(l-c),t.copy(r).addScaledVector(Qu,a);W1.subVectors(e,i);const p=Qu.dot(W1),g=Ju.dot(W1);if(g>=0&&p<=g)return t.copy(i);const f=p*u-l*g;if(f<=0&&u>=0&&g<=0)return o=u/(u-g),t.copy(r).addScaledVector(Ju,o);const m=c*g-p*d;if(m<=0&&d-c>=0&&p-g>=0)return YN.subVectors(i,s),o=(d-c)/(d-c+(p-g)),t.copy(s).addScaledVector(YN,o);const y=1/(m+f+h);return a=f*y,o=h*y,t.copy(r).addScaledVector(Qu,a).addScaledVector(Ju,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let z4=0;class Ef extends md{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:z4++}),this.uuid=gd(),this.name="",this.type="Material",this.blending=Ac,this.side=Fo,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=FA,this.blendDst=GA,this.blendEquation=oc,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=MS,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=m4,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=k1,this.stencilZFail=k1,this.stencilZPass=k1,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const r=e[t];if(r===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const s=this[t];if(s===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}s&&s.isColor?s.set(r):s&&s.isVector3&&r&&r.isVector3?s.copy(r):this[t]=r}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),this.roughness!==void 0&&(r.roughness=this.roughness),this.metalness!==void 0&&(r.metalness=this.metalness),this.sheen!==void 0&&(r.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(r.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(r.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(r.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(r.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(r.shininess=this.shininess),this.clearcoat!==void 0&&(r.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(r.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(r.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(r.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(r.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(r.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(r.combine=this.combine)),this.envMapIntensity!==void 0&&(r.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(r.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(r.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(r.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(r.size=this.size),this.shadowSide!==null&&(r.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==Ac&&(r.blending=this.blending),this.side!==Fo&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),this.transparent===!0&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.colorWrite=this.colorWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(r.rotation=this.rotation),this.polygonOffset===!0&&(r.polygonOffset=!0),this.polygonOffsetFactor!==0&&(r.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(r.linewidth=this.linewidth),this.dashSize!==void 0&&(r.dashSize=this.dashSize),this.gapSize!==void 0&&(r.gapSize=this.gapSize),this.scale!==void 0&&(r.scale=this.scale),this.dithering===!0&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(r.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(r.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(r.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(r.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(r.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(r.flatShading=this.flatShading),this.visible===!1&&(r.visible=!1),this.toneMapped===!1&&(r.toneMapped=!1),this.fog===!1&&(r.fog=!1),Object.keys(this.userData).length>0&&(r.userData=this.userData);function s(i){const a=[];for(const o in i){const l=i[o];delete l.metadata,a.push(l)}return a}if(t){const i=s(e.textures),a=s(e.images);i.length>0&&(r.textures=i),a.length>0&&(r.images=a)}return r}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(t!==null){const s=t.length;r=new Array(s);for(let i=0;i!==s;++i)r[i]=t[i].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const jA={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},oi={h:0,s:0,l:0},Ug={h:0,s:0,l:0};function V1(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class Et{constructor(e,t,r){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&r===void 0?this.set(e):this.setRGB(e,t,r)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Vi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ar.toWorkingColorSpace(this,t),this}setRGB(e,t,r,s=Ar.workingColorSpace){return this.r=e,this.g=t,this.b=r,Ar.toWorkingColorSpace(this,s),this}setHSL(e,t,r,s=Ar.workingColorSpace){if(e=g4(e,1),t=wr(t,0,1),r=wr(r,0,1),t===0)this.r=this.g=this.b=r;else{const i=r<=.5?r*(1+t):r+t-r*t,a=2*r-i;this.r=V1(a,i,e+1/3),this.g=V1(a,i,e),this.b=V1(a,i,e-1/3)}return Ar.toWorkingColorSpace(this,s),this}setStyle(e,t=Vi){function r(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;const a=s[1],o=s[2];switch(a){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,Ar.toWorkingColorSpace(this,t),r(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,Ar.toWorkingColorSpace(this,t),r(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const l=parseFloat(i[1])/360,u=parseFloat(i[2])/100,c=parseFloat(i[3])/100;return r(i[4]),this.setHSL(l,u,c,t)}break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=s[1],a=i.length;if(a===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,Ar.toWorkingColorSpace(this,t),this;if(a===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,Ar.toWorkingColorSpace(this,t),this;console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Vi){const r=jA[e.toLowerCase()];return r!==void 0?this.setHex(r,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Dc(e.r),this.g=Dc(e.g),this.b=Dc(e.b),this}copyLinearToSRGB(e){return this.r=E1(e.r),this.g=E1(e.g),this.b=E1(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Vi){return Ar.fromWorkingColorSpace(xr.copy(this),e),wr(xr.r*255,0,255)<<16^wr(xr.g*255,0,255)<<8^wr(xr.b*255,0,255)<<0}getHexString(e=Vi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ar.workingColorSpace){Ar.fromWorkingColorSpace(xr.copy(this),t);const r=xr.r,s=xr.g,i=xr.b,a=Math.max(r,s,i),o=Math.min(r,s,i);let l,u;const c=(o+a)/2;if(o===a)l=0,u=0;else{const d=a-o;switch(u=c<=.5?d/(a+o):d/(2-a-o),a){case r:l=(s-i)/d+(s<i?6:0);break;case s:l=(i-r)/d+2;break;case i:l=(r-s)/d+4;break}l/=6}return e.h=l,e.s=u,e.l=c,e}getRGB(e,t=Ar.workingColorSpace){return Ar.fromWorkingColorSpace(xr.copy(this),t),e.r=xr.r,e.g=xr.g,e.b=xr.b,e}getStyle(e=Vi){Ar.fromWorkingColorSpace(xr.copy(this),e);const t=xr.r,r=xr.g,s=xr.b;return e!==Vi?`color(${e} ${t.toFixed(3)} ${r.toFixed(3)} ${s.toFixed(3)})`:`rgb(${t*255|0},${r*255|0},${s*255|0})`}offsetHSL(e,t,r){return this.getHSL(oi),oi.h+=e,oi.s+=t,oi.l+=r,this.setHSL(oi.h,oi.s,oi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(oi),e.getHSL(Ug);const r=_1(oi.h,Ug.h,t),s=_1(oi.s,Ug.s,t),i=_1(oi.l,Ug.l,t);return this.setHSL(r,s,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const xr=new Et;Et.NAMES=jA;class QA extends Ef{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Et(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=OA,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Mn=new te,Zg=new Ue;class qi{constructor(e,t,r=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=r,this.usage=$N,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let s=0,i=this.itemSize;s<i;s++)this.array[e+s]=t.array[r+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,r=this.count;t<r;t++)Zg.fromBufferAttribute(this,t),Zg.applyMatrix3(e),this.setXY(t,Zg.x,Zg.y);else if(this.itemSize===3)for(let t=0,r=this.count;t<r;t++)Mn.fromBufferAttribute(this,t),Mn.applyMatrix3(e),this.setXYZ(t,Mn.x,Mn.y,Mn.z);return this}applyMatrix4(e){for(let t=0,r=this.count;t<r;t++)Mn.fromBufferAttribute(this,t),Mn.applyMatrix4(e),this.setXYZ(t,Mn.x,Mn.y,Mn.z);return this}applyNormalMatrix(e){for(let t=0,r=this.count;t<r;t++)Mn.fromBufferAttribute(this,t),Mn.applyNormalMatrix(e),this.setXYZ(t,Mn.x,Mn.y,Mn.z);return this}transformDirection(e){for(let t=0,r=this.count;t<r;t++)Mn.fromBufferAttribute(this,t),Mn.transformDirection(e),this.setXYZ(t,Mn.x,Mn.y,Mn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Fg(t,this.array)),t}setX(e,t){return this.normalized&&(t=ys(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Fg(t,this.array)),t}setY(e,t){return this.normalized&&(t=ys(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Fg(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ys(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Fg(t,this.array)),t}setW(e,t){return this.normalized&&(t=ys(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.normalized&&(t=ys(t,this.array),r=ys(r,this.array)),this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,s){return e*=this.itemSize,this.normalized&&(t=ys(t,this.array),r=ys(r,this.array),s=ys(s,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=s,this}setXYZW(e,t,r,s,i){return e*=this.itemSize,this.normalized&&(t=ys(t,this.array),r=ys(r,this.array),s=ys(s,this.array),i=ys(i,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=s,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==$N&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class JA extends qi{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class qA extends qi{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class ea extends qi{constructor(e,t,r){super(new Float32Array(e),t,r)}}let D4=0;const Fs=new Bt,B1=new kr,qu=new te,xs=new Nf,Kh=new Nf,Yn=new te;class el extends md{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:D4++}),this.uuid=gd(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(UA(e)?qA:JA)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;if(r!==void 0){const i=new Fr().getNormalMatrix(e);r.applyNormalMatrix(i),r.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Fs.makeRotationFromQuaternion(e),this.applyMatrix4(Fs),this}rotateX(e){return Fs.makeRotationX(e),this.applyMatrix4(Fs),this}rotateY(e){return Fs.makeRotationY(e),this.applyMatrix4(Fs),this}rotateZ(e){return Fs.makeRotationZ(e),this.applyMatrix4(Fs),this}translate(e,t,r){return Fs.makeTranslation(e,t,r),this.applyMatrix4(Fs),this}scale(e,t,r){return Fs.makeScale(e,t,r),this.applyMatrix4(Fs),this}lookAt(e){return B1.lookAt(e),B1.updateMatrix(),this.applyMatrix4(B1.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(qu).negate(),this.translate(qu.x,qu.y,qu.z),this}setFromPoints(e){const t=[];for(let r=0,s=e.length;r<s;r++){const i=e[r];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new ea(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Nf);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new te(-1/0,-1/0,-1/0),new te(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let r=0,s=t.length;r<s;r++){const i=t[r];xs.setFromBufferAttribute(i),this.morphTargetsRelative?(Yn.addVectors(this.boundingBox.min,xs.min),this.boundingBox.expandByPoint(Yn),Yn.addVectors(this.boundingBox.max,xs.max),this.boundingBox.expandByPoint(Yn)):(this.boundingBox.expandByPoint(xs.min),this.boundingBox.expandByPoint(xs.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new RT);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new te,1/0);return}if(e){const r=this.boundingSphere.center;if(xs.setFromBufferAttribute(e),t)for(let i=0,a=t.length;i<a;i++){const o=t[i];Kh.setFromBufferAttribute(o),this.morphTargetsRelative?(Yn.addVectors(xs.min,Kh.min),xs.expandByPoint(Yn),Yn.addVectors(xs.max,Kh.max),xs.expandByPoint(Yn)):(xs.expandByPoint(Kh.min),xs.expandByPoint(Kh.max))}xs.getCenter(r);let s=0;for(let i=0,a=e.count;i<a;i++)Yn.fromBufferAttribute(e,i),s=Math.max(s,r.distanceToSquared(Yn));if(t)for(let i=0,a=t.length;i<a;i++){const o=t[i],l=this.morphTargetsRelative;for(let u=0,c=o.count;u<c;u++)Yn.fromBufferAttribute(o,u),l&&(qu.fromBufferAttribute(e,u),Yn.add(qu)),s=Math.max(s,r.distanceToSquared(Yn))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const r=e.array,s=t.position.array,i=t.normal.array,a=t.uv.array,o=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new qi(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,u=[],c=[];for(let _=0;_<o;_++)u[_]=new te,c[_]=new te;const d=new te,h=new te,p=new te,g=new Ue,f=new Ue,m=new Ue,y=new te,b=new te;function x(_,z,P){d.fromArray(s,_*3),h.fromArray(s,z*3),p.fromArray(s,P*3),g.fromArray(a,_*2),f.fromArray(a,z*2),m.fromArray(a,P*2),h.sub(d),p.sub(d),f.sub(g),m.sub(g);const R=1/(f.x*m.y-m.x*f.y);isFinite(R)&&(y.copy(h).multiplyScalar(m.y).addScaledVector(p,-f.y).multiplyScalar(R),b.copy(p).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(R),u[_].add(y),u[z].add(y),u[P].add(y),c[_].add(b),c[z].add(b),c[P].add(b))}let v=this.groups;v.length===0&&(v=[{start:0,count:r.length}]);for(let _=0,z=v.length;_<z;++_){const P=v[_],R=P.start,A=P.count;for(let F=R,B=R+A;F<B;F+=3)x(r[F+0],r[F+1],r[F+2])}const w=new te,T=new te,k=new te,S=new te;function C(_){k.fromArray(i,_*3),S.copy(k);const z=u[_];w.copy(z),w.sub(k.multiplyScalar(k.dot(z))).normalize(),T.crossVectors(S,z);const R=T.dot(c[_])<0?-1:1;l[_*4]=w.x,l[_*4+1]=w.y,l[_*4+2]=w.z,l[_*4+3]=R}for(let _=0,z=v.length;_<z;++_){const P=v[_],R=P.start,A=P.count;for(let F=R,B=R+A;F<B;F+=3)C(r[F+0]),C(r[F+1]),C(r[F+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let r=this.getAttribute("normal");if(r===void 0)r=new qi(new Float32Array(t.count*3),3),this.setAttribute("normal",r);else for(let h=0,p=r.count;h<p;h++)r.setXYZ(h,0,0,0);const s=new te,i=new te,a=new te,o=new te,l=new te,u=new te,c=new te,d=new te;if(e)for(let h=0,p=e.count;h<p;h+=3){const g=e.getX(h+0),f=e.getX(h+1),m=e.getX(h+2);s.fromBufferAttribute(t,g),i.fromBufferAttribute(t,f),a.fromBufferAttribute(t,m),c.subVectors(a,i),d.subVectors(s,i),c.cross(d),o.fromBufferAttribute(r,g),l.fromBufferAttribute(r,f),u.fromBufferAttribute(r,m),o.add(c),l.add(c),u.add(c),r.setXYZ(g,o.x,o.y,o.z),r.setXYZ(f,l.x,l.y,l.z),r.setXYZ(m,u.x,u.y,u.z)}else for(let h=0,p=t.count;h<p;h+=3)s.fromBufferAttribute(t,h+0),i.fromBufferAttribute(t,h+1),a.fromBufferAttribute(t,h+2),c.subVectors(a,i),d.subVectors(s,i),c.cross(d),r.setXYZ(h+0,c.x,c.y,c.z),r.setXYZ(h+1,c.x,c.y,c.z),r.setXYZ(h+2,c.x,c.y,c.z);this.normalizeNormals(),r.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)Yn.fromBufferAttribute(e,t),Yn.normalize(),e.setXYZ(t,Yn.x,Yn.y,Yn.z)}toNonIndexed(){function e(o,l){const u=o.array,c=o.itemSize,d=o.normalized,h=new u.constructor(l.length*c);let p=0,g=0;for(let f=0,m=l.length;f<m;f++){o.isInterleavedBufferAttribute?p=l[f]*o.data.stride+o.offset:p=l[f]*c;for(let y=0;y<c;y++)h[g++]=u[p++]}return new qi(h,c,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new el,r=this.index.array,s=this.attributes;for(const o in s){const l=s[o],u=e(l,r);t.setAttribute(o,u)}const i=this.morphAttributes;for(const o in i){const l=[],u=i[o];for(let c=0,d=u.length;c<d;c++){const h=u[c],p=e(h,r);l.push(p)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const u=a[o];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const u in l)l[u]!==void 0&&(e[u]=l[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const l in r){const u=r[l];e.data.attributes[l]=u.toJSON(e.data)}const s={};let i=!1;for(const l in this.morphAttributes){const u=this.morphAttributes[l],c=[];for(let d=0,h=u.length;d<h;d++){const p=u[d];c.push(p.toJSON(e.data))}c.length>0&&(s[l]=c,i=!0)}i&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const r=e.index;r!==null&&this.setIndex(r.clone(t));const s=e.attributes;for(const u in s){const c=s[u];this.setAttribute(u,c.clone(t))}const i=e.morphAttributes;for(const u in i){const c=[],d=i[u];for(let h=0,p=d.length;h<p;h++)c.push(d[h].clone(t));this.morphAttributes[u]=c}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let u=0,c=a.length;u<c;u++){const d=a[u];this.addGroup(d.start,d.count,d.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const jN=new Bt,Di=new _4,Hg=new RT,QN=new te,Yh=new te,jh=new te,Qh=new te,X1=new te,Kg=new te,Yg=new Ue,jg=new Ue,Qg=new Ue,U1=new te,Jg=new te;class Ma extends kr{constructor(e=new el,t=new QA){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,r=Object.keys(t);if(r.length>0){const s=t[r[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,a=s.length;i<a;i++){const o=s[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=i}}}}getVertexPosition(e,t){const r=this.geometry,s=r.attributes.position,i=r.morphAttributes.position,a=r.morphTargetsRelative;t.fromBufferAttribute(s,e);const o=this.morphTargetInfluences;if(i&&o){Kg.set(0,0,0);for(let l=0,u=i.length;l<u;l++){const c=o[l],d=i[l];c!==0&&(X1.fromBufferAttribute(d,e),a?Kg.addScaledVector(X1,c):Kg.addScaledVector(X1.sub(t),c))}t.add(Kg)}return this.isSkinnedMesh&&this.boneTransform(e,t),t}raycast(e,t){const r=this.geometry,s=this.material,i=this.matrixWorld;if(s===void 0||(r.boundingSphere===null&&r.computeBoundingSphere(),Hg.copy(r.boundingSphere),Hg.applyMatrix4(i),Di.copy(e.ray).recast(e.near),Hg.containsPoint(Di.origin)===!1&&(Di.intersectSphere(Hg,QN)===null||Di.origin.distanceToSquared(QN)>(e.far-e.near)**2))||(jN.copy(i).invert(),Di.copy(e.ray).applyMatrix4(jN),r.boundingBox!==null&&Di.intersectsBox(r.boundingBox)===!1))return;let a;const o=r.index,l=r.attributes.position,u=r.attributes.uv,c=r.attributes.uv2,d=r.groups,h=r.drawRange;if(o!==null)if(Array.isArray(s))for(let p=0,g=d.length;p<g;p++){const f=d[p],m=s[f.materialIndex],y=Math.max(f.start,h.start),b=Math.min(o.count,Math.min(f.start+f.count,h.start+h.count));for(let x=y,v=b;x<v;x+=3){const w=o.getX(x),T=o.getX(x+1),k=o.getX(x+2);a=qg(this,m,e,Di,u,c,w,T,k),a&&(a.faceIndex=Math.floor(x/3),a.face.materialIndex=f.materialIndex,t.push(a))}}else{const p=Math.max(0,h.start),g=Math.min(o.count,h.start+h.count);for(let f=p,m=g;f<m;f+=3){const y=o.getX(f),b=o.getX(f+1),x=o.getX(f+2);a=qg(this,s,e,Di,u,c,y,b,x),a&&(a.faceIndex=Math.floor(f/3),t.push(a))}}else if(l!==void 0)if(Array.isArray(s))for(let p=0,g=d.length;p<g;p++){const f=d[p],m=s[f.materialIndex],y=Math.max(f.start,h.start),b=Math.min(l.count,Math.min(f.start+f.count,h.start+h.count));for(let x=y,v=b;x<v;x+=3){const w=x,T=x+1,k=x+2;a=qg(this,m,e,Di,u,c,w,T,k),a&&(a.faceIndex=Math.floor(x/3),a.face.materialIndex=f.materialIndex,t.push(a))}}else{const p=Math.max(0,h.start),g=Math.min(l.count,h.start+h.count);for(let f=p,m=g;f<m;f+=3){const y=f,b=f+1,x=f+2;a=qg(this,s,e,Di,u,c,y,b,x),a&&(a.faceIndex=Math.floor(f/3),t.push(a))}}}}function P4(n,e,t,r,s,i,a,o){let l;if(e.side===_s?l=r.intersectTriangle(a,i,s,!0,o):l=r.intersectTriangle(s,i,a,e.side===Fo,o),l===null)return null;Jg.copy(o),Jg.applyMatrix4(n.matrixWorld);const u=t.ray.origin.distanceTo(Jg);return u<t.near||u>t.far?null:{distance:u,point:Jg.clone(),object:n}}function qg(n,e,t,r,s,i,a,o,l){n.getVertexPosition(a,Yh),n.getVertexPosition(o,jh),n.getVertexPosition(l,Qh);const u=P4(n,e,t,r,Yh,jh,Qh,U1);if(u){s&&(Yg.fromBufferAttribute(s,a),jg.fromBufferAttribute(s,o),Qg.fromBufferAttribute(s,l),u.uv=Ta.getUV(U1,Yh,jh,Qh,Yg,jg,Qg,new Ue)),i&&(Yg.fromBufferAttribute(i,a),jg.fromBufferAttribute(i,o),Qg.fromBufferAttribute(i,l),u.uv2=Ta.getUV(U1,Yh,jh,Qh,Yg,jg,Qg,new Ue));const c={a,b:o,c:l,normal:new te,materialIndex:0};Ta.getNormal(Yh,jh,Qh,c.normal),u.face=c}return u}class Rf extends el{constructor(e=1,t=1,r=1,s=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:s,heightSegments:i,depthSegments:a};const o=this;s=Math.floor(s),i=Math.floor(i),a=Math.floor(a);const l=[],u=[],c=[],d=[];let h=0,p=0;g("z","y","x",-1,-1,r,t,e,a,i,0),g("z","y","x",1,-1,r,t,-e,a,i,1),g("x","z","y",1,1,e,r,t,s,a,2),g("x","z","y",1,-1,e,r,-t,s,a,3),g("x","y","z",1,-1,e,t,r,s,i,4),g("x","y","z",-1,-1,e,t,-r,s,i,5),this.setIndex(l),this.setAttribute("position",new ea(u,3)),this.setAttribute("normal",new ea(c,3)),this.setAttribute("uv",new ea(d,2));function g(f,m,y,b,x,v,w,T,k,S,C){const _=v/k,z=w/S,P=v/2,R=w/2,A=T/2,F=k+1,B=S+1;let K=0,L=0;const O=new te;for(let U=0;U<B;U++){const ee=U*z-R;for(let G=0;G<F;G++){const Q=G*_-P;O[f]=Q*b,O[m]=ee*x,O[y]=A,u.push(O.x,O.y,O.z),O[f]=0,O[m]=0,O[y]=T>0?1:-1,c.push(O.x,O.y,O.z),d.push(G/k),d.push(1-U/S),K+=1}}for(let U=0;U<S;U++)for(let ee=0;ee<k;ee++){const G=h+ee+F*U,Q=h+ee+F*(U+1),ne=h+(ee+1)+F*(U+1),X=h+(ee+1)+F*U;l.push(G,Q,X),l.push(Q,ne,X),L+=6}o.addGroup(p,L,C),p+=L,h+=K}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Rf(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function jc(n){const e={};for(const t in n){e[t]={};for(const r in n[t]){const s=n[t][r];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?e[t][r]=s.clone():Array.isArray(s)?e[t][r]=s.slice():e[t][r]=s}}return e}function zr(n){const e={};for(let t=0;t<n.length;t++){const r=jc(n[t]);for(const s in r)e[s]=r[s]}return e}function $4(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function ez(n){return n.getRenderTarget()===null&&n.outputEncoding===Wt?Vi:qp}const F4={clone:jc,merge:zr};var G4=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,O4=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class nu extends Ef{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=G4,this.fragmentShader=O4,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=jc(e.uniforms),this.uniformsGroups=$4(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?t.uniforms[s]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[s]={type:"m4",value:a.toArray()}:t.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const s in this.extensions)this.extensions[s]===!0&&(r[s]=!0);return Object.keys(r).length>0&&(t.extensions=r),t}}class tz extends kr{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Bt,this.projectionMatrix=new Bt,this.projectionMatrixInverse=new Bt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Us extends tz{constructor(e=50,t=1,r=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=GN*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(C1*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return GN*2*Math.atan(Math.tan(C1*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,r,s,i,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=s,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(C1*.5*this.fov)/this.zoom,r=2*t,s=this.aspect*r,i=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,u=a.fullHeight;i+=a.offsetX*s/l,t-=a.offsetY*r/u,s*=a.width/l,r*=a.height/u}const o=this.filmOffset;o!==0&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+s,t,t-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ec=-90,tc=1;class W4 extends kr{constructor(e,t,r){super(),this.type="CubeCamera",this.renderTarget=r;const s=new Us(ec,tc,e,t);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(1,0,0),this.add(s);const i=new Us(ec,tc,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(-1,0,0),this.add(i);const a=new Us(ec,tc,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(0,1,0),this.add(a);const o=new Us(ec,tc,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(0,-1,0),this.add(o);const l=new Us(ec,tc,e,t);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const u=new Us(ec,tc,e,t);u.layers=this.layers,u.up.set(0,1,0),u.lookAt(0,0,-1),this.add(u)}update(e,t){this.parent===null&&this.updateMatrixWorld();const r=this.renderTarget,[s,i,a,o,l,u]=this.children,c=e.getRenderTarget(),d=e.toneMapping,h=e.xr.enabled;e.toneMapping=Ea,e.xr.enabled=!1;const p=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,s),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,a),e.setRenderTarget(r,3),e.render(t,o),e.setRenderTarget(r,4),e.render(t,l),r.texture.generateMipmaps=p,e.setRenderTarget(r,5),e.render(t,u),e.setRenderTarget(c),e.toneMapping=d,e.xr.enabled=h,r.texture.needsPMREMUpdate=!0}}class nz extends Ms{constructor(e,t,r,s,i,a,o,l,u,c){e=e!==void 0?e:[],t=t!==void 0?t:Hc,super(e,t,r,s,i,a,o,l,u,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class V4 extends tu{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const r={width:e,height:e,depth:1},s=[r,r,r,r,r,r];this.texture=new nz(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Xs}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new Rf(5,5,5),i=new nu({name:"CubemapFromEquirect",uniforms:jc(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:_s,blending:Ro});i.uniforms.tEquirect.value=t;const a=new Ma(s,i),o=t.minFilter;return t.minFilter===Qp&&(t.minFilter=Xs),new W4(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,r,s){const i=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,r,s);e.setRenderTarget(i)}}const Z1=new te,B4=new te,X4=new Fr;class wl{constructor(e=new te(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,s){return this.normal.set(e,t,r),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){const s=Z1.subVectors(r,t).cross(B4.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const r=e.delta(Z1),s=this.normal.dot(r);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/s;return i<0||i>1?null:t.copy(e.start).addScaledVector(r,i)}intersectsLine(e){const t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const r=t||X4.getNormalMatrix(e),s=this.coplanarPoint(Z1).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-s.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const nc=new RT,ey=new te;class LT{constructor(e=new wl,t=new wl,r=new wl,s=new wl,i=new wl,a=new wl){this.planes=[e,t,r,s,i,a]}set(e,t,r,s,i,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(s),o[4].copy(i),o[5].copy(a),this}copy(e){const t=this.planes;for(let r=0;r<6;r++)t[r].copy(e.planes[r]);return this}setFromProjectionMatrix(e){const t=this.planes,r=e.elements,s=r[0],i=r[1],a=r[2],o=r[3],l=r[4],u=r[5],c=r[6],d=r[7],h=r[8],p=r[9],g=r[10],f=r[11],m=r[12],y=r[13],b=r[14],x=r[15];return t[0].setComponents(o-s,d-l,f-h,x-m).normalize(),t[1].setComponents(o+s,d+l,f+h,x+m).normalize(),t[2].setComponents(o+i,d+u,f+p,x+y).normalize(),t[3].setComponents(o-i,d-u,f-p,x-y).normalize(),t[4].setComponents(o-a,d-c,f-g,x-b).normalize(),t[5].setComponents(o+a,d+c,f+g,x+b).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),nc.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(nc)}intersectsSprite(e){return nc.center.set(0,0,0),nc.radius=.7071067811865476,nc.applyMatrix4(e.matrixWorld),this.intersectsSphere(nc)}intersectsSphere(e){const t=this.planes,r=e.center,s=-e.radius;for(let i=0;i<6;i++)if(t[i].distanceToPoint(r)<s)return!1;return!0}intersectsBox(e){const t=this.planes;for(let r=0;r<6;r++){const s=t[r];if(ey.x=s.normal.x>0?e.max.x:e.min.x,ey.y=s.normal.y>0?e.max.y:e.min.y,ey.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(ey)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function rz(){let n=null,e=!1,t=null,r=null;function s(i,a){t(i,a),r=n.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(r=n.requestAnimationFrame(s),e=!0)},stop:function(){n.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(i){t=i},setContext:function(i){n=i}}}function U4(n,e){const t=e.isWebGL2,r=new WeakMap;function s(u,c){const d=u.array,h=u.usage,p=n.createBuffer();n.bindBuffer(c,p),n.bufferData(c,d,h),u.onUploadCallback();let g;if(d instanceof Float32Array)g=5126;else if(d instanceof Uint16Array)if(u.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(d instanceof Int16Array)g=5122;else if(d instanceof Uint32Array)g=5125;else if(d instanceof Int32Array)g=5124;else if(d instanceof Int8Array)g=5120;else if(d instanceof Uint8Array)g=5121;else if(d instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:p,type:g,bytesPerElement:d.BYTES_PER_ELEMENT,version:u.version}}function i(u,c,d){const h=c.array,p=c.updateRange;n.bindBuffer(d,u),p.count===-1?n.bufferSubData(d,0,h):(t?n.bufferSubData(d,p.offset*h.BYTES_PER_ELEMENT,h,p.offset,p.count):n.bufferSubData(d,p.offset*h.BYTES_PER_ELEMENT,h.subarray(p.offset,p.offset+p.count)),p.count=-1),c.onUploadCallback()}function a(u){return u.isInterleavedBufferAttribute&&(u=u.data),r.get(u)}function o(u){u.isInterleavedBufferAttribute&&(u=u.data);const c=r.get(u);c&&(n.deleteBuffer(c.buffer),r.delete(u))}function l(u,c){if(u.isGLBufferAttribute){const h=r.get(u);(!h||h.version<u.version)&&r.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}u.isInterleavedBufferAttribute&&(u=u.data);const d=r.get(u);d===void 0?r.set(u,s(u,c)):d.version<u.version&&(i(d.buffer,u,c),d.version=u.version)}return{get:a,remove:o,update:l}}class AT extends el{constructor(e=1,t=1,r=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:s};const i=e/2,a=t/2,o=Math.floor(r),l=Math.floor(s),u=o+1,c=l+1,d=e/o,h=t/l,p=[],g=[],f=[],m=[];for(let y=0;y<c;y++){const b=y*h-a;for(let x=0;x<u;x++){const v=x*d-i;g.push(v,-b,0),f.push(0,0,1),m.push(x/o),m.push(1-y/l)}}for(let y=0;y<l;y++)for(let b=0;b<o;b++){const x=b+u*y,v=b+u*(y+1),w=b+1+u*(y+1),T=b+1+u*y;p.push(x,v,T),p.push(v,w,T)}this.setIndex(p),this.setAttribute("position",new ea(g,3)),this.setAttribute("normal",new ea(f,3)),this.setAttribute("uv",new ea(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new AT(e.width,e.height,e.widthSegments,e.heightSegments)}}var Z4=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,H4=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,K4=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Y4=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,j4=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Q4=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,J4="vec3 transformed = vec3( position );",q4=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,eU=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,tU=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,nU=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,rU=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,sU=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,iU=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,aU=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,oU=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,lU=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,uU=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,cU=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,dU=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,hU=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,pU=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,fU=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,mU=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,gU=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,yU=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,bU="gl_FragColor = linearToOutputTexel( gl_FragColor );",xU=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,vU=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,wU=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,SU=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,TU=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,IU=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,kU=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,CU=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,_U=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,MU=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,NU=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,EU=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,RU=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,LU=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,AU=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,zU=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,DU=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,PU=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,$U=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,FU=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,GU=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,OU=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,WU=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,VU=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,BU=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,XU=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,UU=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ZU=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,HU=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,KU=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,YU=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,jU=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,QU=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,JU=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,qU=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,e5=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,t5=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,n5=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,r5=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,s5=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,i5=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,a5=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,o5=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,l5=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,u5=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,c5=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,d5=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,h5=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,p5=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,f5=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,m5=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,g5=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,y5=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,b5=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,x5=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,v5=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,w5=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,S5=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,T5=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,I5=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,k5=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,C5=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,_5=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,M5=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,N5=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,E5=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,R5=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,L5=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,A5=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,z5=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,D5=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,P5=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		
		vec2 lodFudge = pow( 1.95, lod ) / fullSize;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec2 fullSize = vec2( textureSize( sampler, 0 ) );
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,$5=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,F5=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,G5=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,O5=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,W5=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,V5=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,B5=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const X5=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,U5=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Z5=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,H5=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,K5=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Y5=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,j5=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Q5=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,J5=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,q5=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,eZ=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,tZ=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,nZ=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,rZ=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,sZ=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,iZ=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aZ=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,oZ=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lZ=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,uZ=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cZ=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,dZ=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,hZ=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pZ=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fZ=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,mZ=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gZ=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,yZ=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bZ=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,xZ=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,vZ=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,wZ=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,SZ=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,TZ=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,dt={alphamap_fragment:Z4,alphamap_pars_fragment:H4,alphatest_fragment:K4,alphatest_pars_fragment:Y4,aomap_fragment:j4,aomap_pars_fragment:Q4,begin_vertex:J4,beginnormal_vertex:q4,bsdfs:eU,iridescence_fragment:tU,bumpmap_pars_fragment:nU,clipping_planes_fragment:rU,clipping_planes_pars_fragment:sU,clipping_planes_pars_vertex:iU,clipping_planes_vertex:aU,color_fragment:oU,color_pars_fragment:lU,color_pars_vertex:uU,color_vertex:cU,common:dU,cube_uv_reflection_fragment:hU,defaultnormal_vertex:pU,displacementmap_pars_vertex:fU,displacementmap_vertex:mU,emissivemap_fragment:gU,emissivemap_pars_fragment:yU,encodings_fragment:bU,encodings_pars_fragment:xU,envmap_fragment:vU,envmap_common_pars_fragment:wU,envmap_pars_fragment:SU,envmap_pars_vertex:TU,envmap_physical_pars_fragment:DU,envmap_vertex:IU,fog_vertex:kU,fog_pars_vertex:CU,fog_fragment:_U,fog_pars_fragment:MU,gradientmap_pars_fragment:NU,lightmap_fragment:EU,lightmap_pars_fragment:RU,lights_lambert_fragment:LU,lights_lambert_pars_fragment:AU,lights_pars_begin:zU,lights_toon_fragment:PU,lights_toon_pars_fragment:$U,lights_phong_fragment:FU,lights_phong_pars_fragment:GU,lights_physical_fragment:OU,lights_physical_pars_fragment:WU,lights_fragment_begin:VU,lights_fragment_maps:BU,lights_fragment_end:XU,logdepthbuf_fragment:UU,logdepthbuf_pars_fragment:ZU,logdepthbuf_pars_vertex:HU,logdepthbuf_vertex:KU,map_fragment:YU,map_pars_fragment:jU,map_particle_fragment:QU,map_particle_pars_fragment:JU,metalnessmap_fragment:qU,metalnessmap_pars_fragment:e5,morphcolor_vertex:t5,morphnormal_vertex:n5,morphtarget_pars_vertex:r5,morphtarget_vertex:s5,normal_fragment_begin:i5,normal_fragment_maps:a5,normal_pars_fragment:o5,normal_pars_vertex:l5,normal_vertex:u5,normalmap_pars_fragment:c5,clearcoat_normal_fragment_begin:d5,clearcoat_normal_fragment_maps:h5,clearcoat_pars_fragment:p5,iridescence_pars_fragment:f5,output_fragment:m5,packing:g5,premultiplied_alpha_fragment:y5,project_vertex:b5,dithering_fragment:x5,dithering_pars_fragment:v5,roughnessmap_fragment:w5,roughnessmap_pars_fragment:S5,shadowmap_pars_fragment:T5,shadowmap_pars_vertex:I5,shadowmap_vertex:k5,shadowmask_pars_fragment:C5,skinbase_vertex:_5,skinning_pars_vertex:M5,skinning_vertex:N5,skinnormal_vertex:E5,specularmap_fragment:R5,specularmap_pars_fragment:L5,tonemapping_fragment:A5,tonemapping_pars_fragment:z5,transmission_fragment:D5,transmission_pars_fragment:P5,uv_pars_fragment:$5,uv_pars_vertex:F5,uv_vertex:G5,uv2_pars_fragment:O5,uv2_pars_vertex:W5,uv2_vertex:V5,worldpos_vertex:B5,background_vert:X5,background_frag:U5,backgroundCube_vert:Z5,backgroundCube_frag:H5,cube_vert:K5,cube_frag:Y5,depth_vert:j5,depth_frag:Q5,distanceRGBA_vert:J5,distanceRGBA_frag:q5,equirect_vert:eZ,equirect_frag:tZ,linedashed_vert:nZ,linedashed_frag:rZ,meshbasic_vert:sZ,meshbasic_frag:iZ,meshlambert_vert:aZ,meshlambert_frag:oZ,meshmatcap_vert:lZ,meshmatcap_frag:uZ,meshnormal_vert:cZ,meshnormal_frag:dZ,meshphong_vert:hZ,meshphong_frag:pZ,meshphysical_vert:fZ,meshphysical_frag:mZ,meshtoon_vert:gZ,meshtoon_frag:yZ,points_vert:bZ,points_frag:xZ,shadow_vert:vZ,shadow_frag:wZ,sprite_vert:SZ,sprite_frag:TZ},_e={common:{diffuse:{value:new Et(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Fr},uv2Transform:{value:new Fr},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ue(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Et(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Et(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Fr}},sprite:{diffuse:{value:new Et(16777215)},opacity:{value:1},center:{value:new Ue(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Fr}}},Bi={basic:{uniforms:zr([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.fog]),vertexShader:dt.meshbasic_vert,fragmentShader:dt.meshbasic_frag},lambert:{uniforms:zr([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,_e.lights,{emissive:{value:new Et(0)}}]),vertexShader:dt.meshlambert_vert,fragmentShader:dt.meshlambert_frag},phong:{uniforms:zr([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,_e.lights,{emissive:{value:new Et(0)},specular:{value:new Et(1118481)},shininess:{value:30}}]),vertexShader:dt.meshphong_vert,fragmentShader:dt.meshphong_frag},standard:{uniforms:zr([_e.common,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.roughnessmap,_e.metalnessmap,_e.fog,_e.lights,{emissive:{value:new Et(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:dt.meshphysical_vert,fragmentShader:dt.meshphysical_frag},toon:{uniforms:zr([_e.common,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.gradientmap,_e.fog,_e.lights,{emissive:{value:new Et(0)}}]),vertexShader:dt.meshtoon_vert,fragmentShader:dt.meshtoon_frag},matcap:{uniforms:zr([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,{matcap:{value:null}}]),vertexShader:dt.meshmatcap_vert,fragmentShader:dt.meshmatcap_frag},points:{uniforms:zr([_e.points,_e.fog]),vertexShader:dt.points_vert,fragmentShader:dt.points_frag},dashed:{uniforms:zr([_e.common,_e.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:dt.linedashed_vert,fragmentShader:dt.linedashed_frag},depth:{uniforms:zr([_e.common,_e.displacementmap]),vertexShader:dt.depth_vert,fragmentShader:dt.depth_frag},normal:{uniforms:zr([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,{opacity:{value:1}}]),vertexShader:dt.meshnormal_vert,fragmentShader:dt.meshnormal_frag},sprite:{uniforms:zr([_e.sprite,_e.fog]),vertexShader:dt.sprite_vert,fragmentShader:dt.sprite_frag},background:{uniforms:{uvTransform:{value:new Fr},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:dt.background_vert,fragmentShader:dt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:dt.backgroundCube_vert,fragmentShader:dt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:dt.cube_vert,fragmentShader:dt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:dt.equirect_vert,fragmentShader:dt.equirect_frag},distanceRGBA:{uniforms:zr([_e.common,_e.displacementmap,{referencePosition:{value:new te},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:dt.distanceRGBA_vert,fragmentShader:dt.distanceRGBA_frag},shadow:{uniforms:zr([_e.lights,_e.fog,{color:{value:new Et(0)},opacity:{value:1}}]),vertexShader:dt.shadow_vert,fragmentShader:dt.shadow_frag}};Bi.physical={uniforms:zr([Bi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ue(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Et(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Ue},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Et(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Et(1,1,1)},specularColorMap:{value:null}}]),vertexShader:dt.meshphysical_vert,fragmentShader:dt.meshphysical_frag};const ty={r:0,b:0,g:0};function IZ(n,e,t,r,s,i,a){const o=new Et(0);let l=i===!0?0:1,u,c,d=null,h=0,p=null;function g(m,y){let b=!1,x=y.isScene===!0?y.background:null;x&&x.isTexture&&(x=(y.backgroundBlurriness>0?t:e).get(x));const v=n.xr,w=v.getSession&&v.getSession();w&&w.environmentBlendMode==="additive"&&(x=null),x===null?f(o,l):x&&x.isColor&&(f(x,1),b=!0),(n.autoClear||b)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),x&&(x.isCubeTexture||x.mapping===mb)?(c===void 0&&(c=new Ma(new Rf(1,1,1),new nu({name:"BackgroundCubeMaterial",uniforms:jc(Bi.backgroundCube.uniforms),vertexShader:Bi.backgroundCube.vertexShader,fragmentShader:Bi.backgroundCube.fragmentShader,side:_s,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(T,k,S){this.matrixWorld.copyPosition(S.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(c)),c.material.uniforms.envMap.value=x,c.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,c.material.toneMapped=x.encoding!==Wt,(d!==x||h!==x.version||p!==n.toneMapping)&&(c.material.needsUpdate=!0,d=x,h=x.version,p=n.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null)):x&&x.isTexture&&(u===void 0&&(u=new Ma(new AT(2,2),new nu({name:"BackgroundMaterial",uniforms:jc(Bi.background.uniforms),vertexShader:Bi.background.vertexShader,fragmentShader:Bi.background.fragmentShader,side:Fo,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(u)),u.material.uniforms.t2D.value=x,u.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,u.material.toneMapped=x.encoding!==Wt,x.matrixAutoUpdate===!0&&x.updateMatrix(),u.material.uniforms.uvTransform.value.copy(x.matrix),(d!==x||h!==x.version||p!==n.toneMapping)&&(u.material.needsUpdate=!0,d=x,h=x.version,p=n.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null))}function f(m,y){m.getRGB(ty,ez(n)),r.buffers.color.setClear(ty.r,ty.g,ty.b,y,a)}return{getClearColor:function(){return o},setClearColor:function(m,y=1){o.set(m),l=y,f(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,f(o,l)},render:g}}function kZ(n,e,t,r){const s=n.getParameter(34921),i=r.isWebGL2?null:e.get("OES_vertex_array_object"),a=r.isWebGL2||i!==null,o={},l=m(null);let u=l,c=!1;function d(A,F,B,K,L){let O=!1;if(a){const U=f(K,B,F);u!==U&&(u=U,p(u.object)),O=y(A,K,B,L),O&&b(A,K,B,L)}else{const U=F.wireframe===!0;(u.geometry!==K.id||u.program!==B.id||u.wireframe!==U)&&(u.geometry=K.id,u.program=B.id,u.wireframe=U,O=!0)}L!==null&&t.update(L,34963),(O||c)&&(c=!1,S(A,F,B,K),L!==null&&n.bindBuffer(34963,t.get(L).buffer))}function h(){return r.isWebGL2?n.createVertexArray():i.createVertexArrayOES()}function p(A){return r.isWebGL2?n.bindVertexArray(A):i.bindVertexArrayOES(A)}function g(A){return r.isWebGL2?n.deleteVertexArray(A):i.deleteVertexArrayOES(A)}function f(A,F,B){const K=B.wireframe===!0;let L=o[A.id];L===void 0&&(L={},o[A.id]=L);let O=L[F.id];O===void 0&&(O={},L[F.id]=O);let U=O[K];return U===void 0&&(U=m(h()),O[K]=U),U}function m(A){const F=[],B=[],K=[];for(let L=0;L<s;L++)F[L]=0,B[L]=0,K[L]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:B,attributeDivisors:K,object:A,attributes:{},index:null}}function y(A,F,B,K){const L=u.attributes,O=F.attributes;let U=0;const ee=B.getAttributes();for(const G in ee)if(ee[G].location>=0){const ne=L[G];let X=O[G];if(X===void 0&&(G==="instanceMatrix"&&A.instanceMatrix&&(X=A.instanceMatrix),G==="instanceColor"&&A.instanceColor&&(X=A.instanceColor)),ne===void 0||ne.attribute!==X||X&&ne.data!==X.data)return!0;U++}return u.attributesNum!==U||u.index!==K}function b(A,F,B,K){const L={},O=F.attributes;let U=0;const ee=B.getAttributes();for(const G in ee)if(ee[G].location>=0){let ne=O[G];ne===void 0&&(G==="instanceMatrix"&&A.instanceMatrix&&(ne=A.instanceMatrix),G==="instanceColor"&&A.instanceColor&&(ne=A.instanceColor));const X={};X.attribute=ne,ne&&ne.data&&(X.data=ne.data),L[G]=X,U++}u.attributes=L,u.attributesNum=U,u.index=K}function x(){const A=u.newAttributes;for(let F=0,B=A.length;F<B;F++)A[F]=0}function v(A){w(A,0)}function w(A,F){const B=u.newAttributes,K=u.enabledAttributes,L=u.attributeDivisors;B[A]=1,K[A]===0&&(n.enableVertexAttribArray(A),K[A]=1),L[A]!==F&&((r.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](A,F),L[A]=F)}function T(){const A=u.newAttributes,F=u.enabledAttributes;for(let B=0,K=F.length;B<K;B++)F[B]!==A[B]&&(n.disableVertexAttribArray(B),F[B]=0)}function k(A,F,B,K,L,O){r.isWebGL2===!0&&(B===5124||B===5125)?n.vertexAttribIPointer(A,F,B,L,O):n.vertexAttribPointer(A,F,B,K,L,O)}function S(A,F,B,K){if(r.isWebGL2===!1&&(A.isInstancedMesh||K.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const L=K.attributes,O=B.getAttributes(),U=F.defaultAttributeValues;for(const ee in O){const G=O[ee];if(G.location>=0){let Q=L[ee];if(Q===void 0&&(ee==="instanceMatrix"&&A.instanceMatrix&&(Q=A.instanceMatrix),ee==="instanceColor"&&A.instanceColor&&(Q=A.instanceColor)),Q!==void 0){const ne=Q.normalized,X=Q.itemSize,ue=t.get(Q);if(ue===void 0)continue;const le=ue.buffer,pe=ue.type,ge=ue.bytesPerElement;if(Q.isInterleavedBufferAttribute){const be=Q.data,Me=be.stride,Re=Q.offset;if(be.isInstancedInterleavedBuffer){for(let Xe=0;Xe<G.locationSize;Xe++)w(G.location+Xe,be.meshPerAttribute);A.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=be.meshPerAttribute*be.count)}else for(let Xe=0;Xe<G.locationSize;Xe++)v(G.location+Xe);n.bindBuffer(34962,le);for(let Xe=0;Xe<G.locationSize;Xe++)k(G.location+Xe,X/G.locationSize,pe,ne,Me*ge,(Re+X/G.locationSize*Xe)*ge)}else{if(Q.isInstancedBufferAttribute){for(let be=0;be<G.locationSize;be++)w(G.location+be,Q.meshPerAttribute);A.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=Q.meshPerAttribute*Q.count)}else for(let be=0;be<G.locationSize;be++)v(G.location+be);n.bindBuffer(34962,le);for(let be=0;be<G.locationSize;be++)k(G.location+be,X/G.locationSize,pe,ne,X*ge,X/G.locationSize*be*ge)}}else if(U!==void 0){const ne=U[ee];if(ne!==void 0)switch(ne.length){case 2:n.vertexAttrib2fv(G.location,ne);break;case 3:n.vertexAttrib3fv(G.location,ne);break;case 4:n.vertexAttrib4fv(G.location,ne);break;default:n.vertexAttrib1fv(G.location,ne)}}}}T()}function C(){P();for(const A in o){const F=o[A];for(const B in F){const K=F[B];for(const L in K)g(K[L].object),delete K[L];delete F[B]}delete o[A]}}function _(A){if(o[A.id]===void 0)return;const F=o[A.id];for(const B in F){const K=F[B];for(const L in K)g(K[L].object),delete K[L];delete F[B]}delete o[A.id]}function z(A){for(const F in o){const B=o[F];if(B[A.id]===void 0)continue;const K=B[A.id];for(const L in K)g(K[L].object),delete K[L];delete B[A.id]}}function P(){R(),c=!0,u!==l&&(u=l,p(u.object))}function R(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:P,resetDefaultState:R,dispose:C,releaseStatesOfGeometry:_,releaseStatesOfProgram:z,initAttributes:x,enableAttribute:v,disableUnusedAttributes:T}}function CZ(n,e,t,r){const s=r.isWebGL2;let i;function a(u){i=u}function o(u,c){n.drawArrays(i,u,c),t.update(c,i,1)}function l(u,c,d){if(d===0)return;let h,p;if(s)h=n,p="drawArraysInstanced";else if(h=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[p](i,u,c,d),t.update(c,i,d)}this.setMode=a,this.render=o,this.renderInstances=l}function _Z(n,e,t){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const k=e.get("EXT_texture_filter_anisotropic");r=n.getParameter(k.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function i(k){if(k==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";k="mediump"}return k==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext;let o=t.precision!==void 0?t.precision:"highp";const l=i(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const u=a||e.has("WEBGL_draw_buffers"),c=t.logarithmicDepthBuffer===!0,d=n.getParameter(34930),h=n.getParameter(35660),p=n.getParameter(3379),g=n.getParameter(34076),f=n.getParameter(34921),m=n.getParameter(36347),y=n.getParameter(36348),b=n.getParameter(36349),x=h>0,v=a||e.has("OES_texture_float"),w=x&&v,T=a?n.getParameter(36183):0;return{isWebGL2:a,drawBuffers:u,getMaxAnisotropy:s,getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:d,maxVertexTextures:h,maxTextureSize:p,maxCubemapSize:g,maxAttributes:f,maxVertexUniforms:m,maxVaryings:y,maxFragmentUniforms:b,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:w,maxSamples:T}}function MZ(n){const e=this;let t=null,r=0,s=!1,i=!1;const a=new wl,o=new Fr,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,h){const p=d.length!==0||h||r!==0||s;return s=h,r=d.length,p},this.beginShadows=function(){i=!0,c(null)},this.endShadows=function(){i=!1},this.setGlobalState=function(d,h){t=c(d,h,0)},this.setState=function(d,h,p){const g=d.clippingPlanes,f=d.clipIntersection,m=d.clipShadows,y=n.get(d);if(!s||g===null||g.length===0||i&&!m)i?c(null):u();else{const b=i?0:r,x=b*4;let v=y.clippingState||null;l.value=v,v=c(g,h,x,p);for(let w=0;w!==x;++w)v[w]=t[w];y.clippingState=v,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=b}};function u(){l.value!==t&&(l.value=t,l.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function c(d,h,p,g){const f=d!==null?d.length:0;let m=null;if(f!==0){if(m=l.value,g!==!0||m===null){const y=p+f*4,b=h.matrixWorldInverse;o.getNormalMatrix(b),(m===null||m.length<y)&&(m=new Float32Array(y));for(let x=0,v=p;x!==f;++x,v+=4)a.copy(d[x]).applyMatrix4(b,o),a.normal.toArray(m,v),m[v+3]=a.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=f,e.numIntersection=0,m}}function NZ(n){let e=new WeakMap;function t(a,o){return o===NS?a.mapping=Hc:o===ES&&(a.mapping=Kc),a}function r(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===NS||o===ES)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const u=new V4(l.height/2);return u.fromEquirectangularTexture(n,a),e.set(a,u),a.addEventListener("dispose",s),t(u.texture,a.mapping)}else return null}}return a}function s(a){const o=a.target;o.removeEventListener("dispose",s);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function i(){e=new WeakMap}return{get:r,dispose:i}}class sz extends tz{constructor(e=-1,t=1,r=1,s=-1,i=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=s,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,r,s,i,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=s,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let i=r-e,a=r+e,o=s+t,l=s-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=u*this.view.offsetX,a=i+u*this.view.width,o-=c*this.view.offsetY,l=o-c*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Tc=4,JN=[.125,.215,.35,.446,.526,.582],kl=20,H1=new sz,qN=new Et;let K1=null;const Sl=(1+Math.sqrt(5))/2,rc=1/Sl,eE=[new te(1,1,1),new te(-1,1,1),new te(1,1,-1),new te(-1,1,-1),new te(0,Sl,rc),new te(0,Sl,-rc),new te(rc,0,Sl),new te(-rc,0,Sl),new te(Sl,rc,0),new te(-Sl,rc,0)];class tE{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,s=100){K1=this._renderer.getRenderTarget(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,r,s,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=sE(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=rE(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(K1),e.scissorTest=!1,ny(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Hc||e.mapping===Kc?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),K1=this._renderer.getRenderTarget();const r=t||this._allocateTargets();return this._textureToCubeUV(e,r),this._applyPMREM(r),this._cleanup(r),r}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:Xs,minFilter:Xs,generateMipmaps:!1,type:Jp,format:mi,encoding:eu,depthBuffer:!1},s=nE(e,t,r);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=nE(e,t,r);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=EZ(i)),this._blurMaterial=RZ(i,e,t)}return s}_compileMaterial(e){const t=new Ma(this._lodPlanes[0],e);this._renderer.compile(t,H1)}_sceneToCubeUV(e,t,r,s){const o=new Us(90,1,t,r),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],c=this._renderer,d=c.autoClear,h=c.toneMapping;c.getClearColor(qN),c.toneMapping=Ea,c.autoClear=!1;const p=new QA({name:"PMREM.Background",side:_s,depthWrite:!1,depthTest:!1}),g=new Ma(new Rf,p);let f=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,f=!0):(p.color.copy(qN),f=!0);for(let y=0;y<6;y++){const b=y%3;b===0?(o.up.set(0,l[y],0),o.lookAt(u[y],0,0)):b===1?(o.up.set(0,0,l[y]),o.lookAt(0,u[y],0)):(o.up.set(0,l[y],0),o.lookAt(0,0,u[y]));const x=this._cubeSize;ny(s,b*x,y>2?x:0,x,x),c.setRenderTarget(s),f&&c.render(g,o),c.render(e,o)}g.geometry.dispose(),g.material.dispose(),c.toneMapping=h,c.autoClear=d,e.background=m}_textureToCubeUV(e,t){const r=this._renderer,s=e.mapping===Hc||e.mapping===Kc;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=sE()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=rE());const i=s?this._cubemapMaterial:this._equirectMaterial,a=new Ma(this._lodPlanes[0],i),o=i.uniforms;o.envMap.value=e;const l=this._cubeSize;ny(t,0,0,3*l,2*l),r.setRenderTarget(t),r.render(a,H1)}_applyPMREM(e){const t=this._renderer,r=t.autoClear;t.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const i=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=eE[(s-1)%eE.length];this._blur(e,s-1,s,i,a)}t.autoClear=r}_blur(e,t,r,s,i){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,s,"latitudinal",i),this._halfBlur(a,e,r,r,s,"longitudinal",i)}_halfBlur(e,t,r,s,i,a,o){const l=this._renderer,u=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,d=new Ma(this._lodPlanes[s],u),h=u.uniforms,p=this._sizeLods[r]-1,g=isFinite(i)?Math.PI/(2*p):2*Math.PI/(2*kl-1),f=i/g,m=isFinite(i)?1+Math.floor(c*f):kl;m>kl&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${kl}`);const y=[];let b=0;for(let k=0;k<kl;++k){const S=k/f,C=Math.exp(-S*S/2);y.push(C),k===0?b+=C:k<m&&(b+=2*C)}for(let k=0;k<y.length;k++)y[k]=y[k]/b;h.envMap.value=e.texture,h.samples.value=m,h.weights.value=y,h.latitudinal.value=a==="latitudinal",o&&(h.poleAxis.value=o);const{_lodMax:x}=this;h.dTheta.value=g,h.mipInt.value=x-r;const v=this._sizeLods[s],w=3*v*(s>x-Tc?s-x+Tc:0),T=4*(this._cubeSize-v);ny(t,w,T,3*v,2*v),l.setRenderTarget(t),l.render(d,H1)}}function EZ(n){const e=[],t=[],r=[];let s=n;const i=n-Tc+1+JN.length;for(let a=0;a<i;a++){const o=Math.pow(2,s);t.push(o);let l=1/o;a>n-Tc?l=JN[a-n+Tc-1]:a===0&&(l=0),r.push(l);const u=1/(o-2),c=-u,d=1+u,h=[c,c,d,c,d,d,c,c,d,d,c,d],p=6,g=6,f=3,m=2,y=1,b=new Float32Array(f*g*p),x=new Float32Array(m*g*p),v=new Float32Array(y*g*p);for(let T=0;T<p;T++){const k=T%3*2/3-1,S=T>2?0:-1,C=[k,S,0,k+2/3,S,0,k+2/3,S+1,0,k,S,0,k+2/3,S+1,0,k,S+1,0];b.set(C,f*g*T),x.set(h,m*g*T);const _=[T,T,T,T,T,T];v.set(_,y*g*T)}const w=new el;w.setAttribute("position",new qi(b,f)),w.setAttribute("uv",new qi(x,m)),w.setAttribute("faceIndex",new qi(v,y)),e.push(w),s>Tc&&s--}return{lodPlanes:e,sizeLods:t,sigmas:r}}function nE(n,e,t){const r=new tu(n,e,t);return r.texture.mapping=mb,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function ny(n,e,t,r,s){n.viewport.set(e,t,r,s),n.scissor.set(e,t,r,s)}function RZ(n,e,t){const r=new Float32Array(kl),s=new te(0,1,0);return new nu({name:"SphericalGaussianBlur",defines:{n:kl,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:zT(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ro,depthTest:!1,depthWrite:!1})}function rE(){return new nu({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:zT(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ro,depthTest:!1,depthWrite:!1})}function sE(){return new nu({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:zT(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ro,depthTest:!1,depthWrite:!1})}function zT(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function LZ(n){let e=new WeakMap,t=null;function r(o){if(o&&o.isTexture){const l=o.mapping,u=l===NS||l===ES,c=l===Hc||l===Kc;if(u||c)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let d=e.get(o);return t===null&&(t=new tE(n)),d=u?t.fromEquirectangular(o,d):t.fromCubemap(o,d),e.set(o,d),d.texture}else{if(e.has(o))return e.get(o).texture;{const d=o.image;if(u&&d&&d.height>0||c&&d&&s(d)){t===null&&(t=new tE(n));const h=u?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,h),o.addEventListener("dispose",i),h.texture}else return null}}}return o}function s(o){let l=0;const u=6;for(let c=0;c<u;c++)o[c]!==void 0&&l++;return l===u}function i(o){const l=o.target;l.removeEventListener("dispose",i);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:r,dispose:a}}function AZ(n){const e={};function t(r){if(e[r]!==void 0)return e[r];let s;switch(r){case"WEBGL_depth_texture":s=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=n.getExtension(r)}return e[r]=s,s}return{has:function(r){return t(r)!==null},init:function(r){r.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(r){const s=t(r);return s===null&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),s}}}function zZ(n,e,t,r){const s={},i=new WeakMap;function a(d){const h=d.target;h.index!==null&&e.remove(h.index);for(const g in h.attributes)e.remove(h.attributes[g]);h.removeEventListener("dispose",a),delete s[h.id];const p=i.get(h);p&&(e.remove(p),i.delete(h)),r.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,t.memory.geometries--}function o(d,h){return s[h.id]===!0||(h.addEventListener("dispose",a),s[h.id]=!0,t.memory.geometries++),h}function l(d){const h=d.attributes;for(const g in h)e.update(h[g],34962);const p=d.morphAttributes;for(const g in p){const f=p[g];for(let m=0,y=f.length;m<y;m++)e.update(f[m],34962)}}function u(d){const h=[],p=d.index,g=d.attributes.position;let f=0;if(p!==null){const b=p.array;f=p.version;for(let x=0,v=b.length;x<v;x+=3){const w=b[x+0],T=b[x+1],k=b[x+2];h.push(w,T,T,k,k,w)}}else{const b=g.array;f=g.version;for(let x=0,v=b.length/3-1;x<v;x+=3){const w=x+0,T=x+1,k=x+2;h.push(w,T,T,k,k,w)}}const m=new(UA(h)?qA:JA)(h,1);m.version=f;const y=i.get(d);y&&e.remove(y),i.set(d,m)}function c(d){const h=i.get(d);if(h){const p=d.index;p!==null&&h.version<p.version&&u(d)}else u(d);return i.get(d)}return{get:o,update:l,getWireframeAttribute:c}}function DZ(n,e,t,r){const s=r.isWebGL2;let i;function a(h){i=h}let o,l;function u(h){o=h.type,l=h.bytesPerElement}function c(h,p){n.drawElements(i,p,o,h*l),t.update(p,i,1)}function d(h,p,g){if(g===0)return;let f,m;if(s)f=n,m="drawElementsInstanced";else if(f=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",f===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[m](i,p,o,h*l,g),t.update(p,i,g)}this.setMode=a,this.setIndex=u,this.render=c,this.renderInstances=d}function PZ(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function r(i,a,o){switch(t.calls++,a){case 4:t.triangles+=o*(i/3);break;case 1:t.lines+=o*(i/2);break;case 3:t.lines+=o*(i-1);break;case 2:t.lines+=o*i;break;case 0:t.points+=o*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:s,update:r}}function $Z(n,e){return n[0]-e[0]}function FZ(n,e){return Math.abs(e[1])-Math.abs(n[1])}function GZ(n,e,t){const r={},s=new Float32Array(8),i=new WeakMap,a=new tr,o=[];for(let u=0;u<8;u++)o[u]=[u,0];function l(u,c,d){const h=u.morphTargetInfluences;if(e.isWebGL2===!0){const g=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,f=g!==void 0?g.length:0;let m=i.get(c);if(m===void 0||m.count!==f){let F=function(){R.dispose(),i.delete(c),c.removeEventListener("dispose",F)};var p=F;m!==void 0&&m.texture.dispose();const x=c.morphAttributes.position!==void 0,v=c.morphAttributes.normal!==void 0,w=c.morphAttributes.color!==void 0,T=c.morphAttributes.position||[],k=c.morphAttributes.normal||[],S=c.morphAttributes.color||[];let C=0;x===!0&&(C=1),v===!0&&(C=2),w===!0&&(C=3);let _=c.attributes.position.count*C,z=1;_>e.maxTextureSize&&(z=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const P=new Float32Array(_*z*4*f),R=new KA(P,_,z,f);R.type=Pl,R.needsUpdate=!0;const A=C*4;for(let B=0;B<f;B++){const K=T[B],L=k[B],O=S[B],U=_*z*4*B;for(let ee=0;ee<K.count;ee++){const G=ee*A;x===!0&&(a.fromBufferAttribute(K,ee),P[U+G+0]=a.x,P[U+G+1]=a.y,P[U+G+2]=a.z,P[U+G+3]=0),v===!0&&(a.fromBufferAttribute(L,ee),P[U+G+4]=a.x,P[U+G+5]=a.y,P[U+G+6]=a.z,P[U+G+7]=0),w===!0&&(a.fromBufferAttribute(O,ee),P[U+G+8]=a.x,P[U+G+9]=a.y,P[U+G+10]=a.z,P[U+G+11]=O.itemSize===4?a.w:1)}}m={count:f,texture:R,size:new Ue(_,z)},i.set(c,m),c.addEventListener("dispose",F)}let y=0;for(let x=0;x<h.length;x++)y+=h[x];const b=c.morphTargetsRelative?1:1-y;d.getUniforms().setValue(n,"morphTargetBaseInfluence",b),d.getUniforms().setValue(n,"morphTargetInfluences",h),d.getUniforms().setValue(n,"morphTargetsTexture",m.texture,t),d.getUniforms().setValue(n,"morphTargetsTextureSize",m.size)}else{const g=h===void 0?0:h.length;let f=r[c.id];if(f===void 0||f.length!==g){f=[];for(let v=0;v<g;v++)f[v]=[v,0];r[c.id]=f}for(let v=0;v<g;v++){const w=f[v];w[0]=v,w[1]=h[v]}f.sort(FZ);for(let v=0;v<8;v++)v<g&&f[v][1]?(o[v][0]=f[v][0],o[v][1]=f[v][1]):(o[v][0]=Number.MAX_SAFE_INTEGER,o[v][1]=0);o.sort($Z);const m=c.morphAttributes.position,y=c.morphAttributes.normal;let b=0;for(let v=0;v<8;v++){const w=o[v],T=w[0],k=w[1];T!==Number.MAX_SAFE_INTEGER&&k?(m&&c.getAttribute("morphTarget"+v)!==m[T]&&c.setAttribute("morphTarget"+v,m[T]),y&&c.getAttribute("morphNormal"+v)!==y[T]&&c.setAttribute("morphNormal"+v,y[T]),s[v]=k,b+=k):(m&&c.hasAttribute("morphTarget"+v)===!0&&c.deleteAttribute("morphTarget"+v),y&&c.hasAttribute("morphNormal"+v)===!0&&c.deleteAttribute("morphNormal"+v),s[v]=0)}const x=c.morphTargetsRelative?1:1-b;d.getUniforms().setValue(n,"morphTargetBaseInfluence",x),d.getUniforms().setValue(n,"morphTargetInfluences",s)}}return{update:l}}function OZ(n,e,t,r){let s=new WeakMap;function i(l){const u=r.render.frame,c=l.geometry,d=e.get(l,c);return s.get(d)!==u&&(e.update(d),s.set(d,u)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),d}function a(){s=new WeakMap}function o(l){const u=l.target;u.removeEventListener("dispose",o),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:i,dispose:a}}const iz=new Ms,az=new KA,oz=new k4,lz=new nz,iE=[],aE=[],oE=new Float32Array(16),lE=new Float32Array(9),uE=new Float32Array(4);function yd(n,e,t){const r=n[0];if(r<=0||r>0)return n;const s=e*t;let i=iE[s];if(i===void 0&&(i=new Float32Array(s),iE[s]=i),e!==0){r.toArray(i,0);for(let a=1,o=0;a!==e;++a)o+=t,n[a].toArray(i,o)}return i}function On(n,e){if(n.length!==e.length)return!1;for(let t=0,r=n.length;t<r;t++)if(n[t]!==e[t])return!1;return!0}function Wn(n,e){for(let t=0,r=e.length;t<r;t++)n[t]=e[t]}function yb(n,e){let t=aE[e];t===void 0&&(t=new Int32Array(e),aE[e]=t);for(let r=0;r!==e;++r)t[r]=n.allocateTextureUnit();return t}function WZ(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function VZ(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(On(t,e))return;n.uniform2fv(this.addr,e),Wn(t,e)}}function BZ(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(On(t,e))return;n.uniform3fv(this.addr,e),Wn(t,e)}}function XZ(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(On(t,e))return;n.uniform4fv(this.addr,e),Wn(t,e)}}function UZ(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(On(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Wn(t,e)}else{if(On(t,r))return;uE.set(r),n.uniformMatrix2fv(this.addr,!1,uE),Wn(t,r)}}function ZZ(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(On(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Wn(t,e)}else{if(On(t,r))return;lE.set(r),n.uniformMatrix3fv(this.addr,!1,lE),Wn(t,r)}}function HZ(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(On(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Wn(t,e)}else{if(On(t,r))return;oE.set(r),n.uniformMatrix4fv(this.addr,!1,oE),Wn(t,r)}}function KZ(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function YZ(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(On(t,e))return;n.uniform2iv(this.addr,e),Wn(t,e)}}function jZ(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(On(t,e))return;n.uniform3iv(this.addr,e),Wn(t,e)}}function QZ(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(On(t,e))return;n.uniform4iv(this.addr,e),Wn(t,e)}}function JZ(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function qZ(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(On(t,e))return;n.uniform2uiv(this.addr,e),Wn(t,e)}}function eH(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(On(t,e))return;n.uniform3uiv(this.addr,e),Wn(t,e)}}function tH(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(On(t,e))return;n.uniform4uiv(this.addr,e),Wn(t,e)}}function nH(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTexture2D(e||iz,s)}function rH(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTexture3D(e||oz,s)}function sH(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTextureCube(e||lz,s)}function iH(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTexture2DArray(e||az,s)}function aH(n){switch(n){case 5126:return WZ;case 35664:return VZ;case 35665:return BZ;case 35666:return XZ;case 35674:return UZ;case 35675:return ZZ;case 35676:return HZ;case 5124:case 35670:return KZ;case 35667:case 35671:return YZ;case 35668:case 35672:return jZ;case 35669:case 35673:return QZ;case 5125:return JZ;case 36294:return qZ;case 36295:return eH;case 36296:return tH;case 35678:case 36198:case 36298:case 36306:case 35682:return nH;case 35679:case 36299:case 36307:return rH;case 35680:case 36300:case 36308:case 36293:return sH;case 36289:case 36303:case 36311:case 36292:return iH}}function oH(n,e){n.uniform1fv(this.addr,e)}function lH(n,e){const t=yd(e,this.size,2);n.uniform2fv(this.addr,t)}function uH(n,e){const t=yd(e,this.size,3);n.uniform3fv(this.addr,t)}function cH(n,e){const t=yd(e,this.size,4);n.uniform4fv(this.addr,t)}function dH(n,e){const t=yd(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function hH(n,e){const t=yd(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function pH(n,e){const t=yd(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function fH(n,e){n.uniform1iv(this.addr,e)}function mH(n,e){n.uniform2iv(this.addr,e)}function gH(n,e){n.uniform3iv(this.addr,e)}function yH(n,e){n.uniform4iv(this.addr,e)}function bH(n,e){n.uniform1uiv(this.addr,e)}function xH(n,e){n.uniform2uiv(this.addr,e)}function vH(n,e){n.uniform3uiv(this.addr,e)}function wH(n,e){n.uniform4uiv(this.addr,e)}function SH(n,e,t){const r=this.cache,s=e.length,i=yb(t,s);On(r,i)||(n.uniform1iv(this.addr,i),Wn(r,i));for(let a=0;a!==s;++a)t.setTexture2D(e[a]||iz,i[a])}function TH(n,e,t){const r=this.cache,s=e.length,i=yb(t,s);On(r,i)||(n.uniform1iv(this.addr,i),Wn(r,i));for(let a=0;a!==s;++a)t.setTexture3D(e[a]||oz,i[a])}function IH(n,e,t){const r=this.cache,s=e.length,i=yb(t,s);On(r,i)||(n.uniform1iv(this.addr,i),Wn(r,i));for(let a=0;a!==s;++a)t.setTextureCube(e[a]||lz,i[a])}function kH(n,e,t){const r=this.cache,s=e.length,i=yb(t,s);On(r,i)||(n.uniform1iv(this.addr,i),Wn(r,i));for(let a=0;a!==s;++a)t.setTexture2DArray(e[a]||az,i[a])}function CH(n){switch(n){case 5126:return oH;case 35664:return lH;case 35665:return uH;case 35666:return cH;case 35674:return dH;case 35675:return hH;case 35676:return pH;case 5124:case 35670:return fH;case 35667:case 35671:return mH;case 35668:case 35672:return gH;case 35669:case 35673:return yH;case 5125:return bH;case 36294:return xH;case 36295:return vH;case 36296:return wH;case 35678:case 36198:case 36298:case 36306:case 35682:return SH;case 35679:case 36299:case 36307:return TH;case 35680:case 36300:case 36308:case 36293:return IH;case 36289:case 36303:case 36311:case 36292:return kH}}class _H{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=aH(t.type)}}class MH{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=CH(t.type)}}class NH{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,r){const s=this.seq;for(let i=0,a=s.length;i!==a;++i){const o=s[i];o.setValue(e,t[o.id],r)}}}const Y1=/(\w+)(\])?(\[|\.)?/g;function cE(n,e){n.seq.push(e),n.map[e.id]=e}function EH(n,e,t){const r=n.name,s=r.length;for(Y1.lastIndex=0;;){const i=Y1.exec(r),a=Y1.lastIndex;let o=i[1];const l=i[2]==="]",u=i[3];if(l&&(o=o|0),u===void 0||u==="["&&a+2===s){cE(t,u===void 0?new _H(o,n,e):new MH(o,n,e));break}else{let d=t.map[o];d===void 0&&(d=new NH(o),cE(t,d)),t=d}}}class $y{constructor(e,t){this.seq=[],this.map={};const r=e.getProgramParameter(t,35718);for(let s=0;s<r;++s){const i=e.getActiveUniform(t,s),a=e.getUniformLocation(t,i.name);EH(i,a,this)}}setValue(e,t,r,s){const i=this.map[t];i!==void 0&&i.setValue(e,r,s)}setOptional(e,t,r){const s=t[r];s!==void 0&&this.setValue(e,r,s)}static upload(e,t,r,s){for(let i=0,a=t.length;i!==a;++i){const o=t[i],l=r[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,s)}}static seqWithValue(e,t){const r=[];for(let s=0,i=e.length;s!==i;++s){const a=e[s];a.id in t&&r.push(a)}return r}}function dE(n,e,t){const r=n.createShader(e);return n.shaderSource(r,t),n.compileShader(r),r}let RH=0;function LH(n,e){const t=n.split(`
`),r=[],s=Math.max(e-6,0),i=Math.min(e+6,t.length);for(let a=s;a<i;a++){const o=a+1;r.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return r.join(`
`)}function AH(n){switch(n){case eu:return["Linear","( value )"];case Wt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function hE(n,e,t){const r=n.getShaderParameter(e,35713),s=n.getShaderInfoLog(e).trim();if(r&&s==="")return"";const i=/ERROR: 0:(\d+)/.exec(s);if(i){const a=parseInt(i[1]);return t.toUpperCase()+`

`+s+`

`+LH(n.getShaderSource(e),a)}else return s}function zH(n,e){const t=AH(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function DH(n,e){let t;switch(e){case UX:t="Linear";break;case ZX:t="Reinhard";break;case HX:t="OptimizedCineon";break;case KX:t="ACESFilmic";break;case YX:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function PH(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(dp).join(`
`)}function $H(n){const e=[];for(const t in n){const r=n[t];r!==!1&&e.push("#define "+t+" "+r)}return e.join(`
`)}function FH(n,e){const t={},r=n.getProgramParameter(e,35721);for(let s=0;s<r;s++){const i=n.getActiveAttrib(e,s),a=i.name;let o=1;i.type===35674&&(o=2),i.type===35675&&(o=3),i.type===35676&&(o=4),t[a]={type:i.type,location:n.getAttribLocation(e,a),locationSize:o}}return t}function dp(n){return n!==""}function pE(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function fE(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const GH=/^[ \t]*#include +<([\w\d./]+)>/gm;function zS(n){return n.replace(GH,OH)}function OH(n,e){const t=dt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return zS(t)}const WH=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function mE(n){return n.replace(WH,VH)}function VH(n,e,t,r){let s="";for(let i=parseInt(e);i<parseInt(t);i++)s+=r.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return s}function gE(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function BH(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===$A?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===TX?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===cp&&(e="SHADOWMAP_TYPE_VSM"),e}function XH(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case Hc:case Kc:e="ENVMAP_TYPE_CUBE";break;case mb:e="ENVMAP_TYPE_CUBE_UV";break}return e}function UH(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case Kc:e="ENVMAP_MODE_REFRACTION";break}return e}function ZH(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case OA:e="ENVMAP_BLENDING_MULTIPLY";break;case BX:e="ENVMAP_BLENDING_MIX";break;case XX:e="ENVMAP_BLENDING_ADD";break}return e}function HH(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,r=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:r,maxMip:t}}function KH(n,e,t,r){const s=n.getContext(),i=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=BH(t),u=XH(t),c=UH(t),d=ZH(t),h=HH(t),p=t.isWebGL2?"":PH(t),g=$H(i),f=s.createProgram();let m,y,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[g].filter(dp).join(`
`),m.length>0&&(m+=`
`),y=[p,g].filter(dp).join(`
`),y.length>0&&(y+=`
`)):(m=[gE(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(dp).join(`
`),y=[p,gE(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+c:"",t.envMap?"#define "+d:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ea?"#define TONE_MAPPING":"",t.toneMapping!==Ea?dt.tonemapping_pars_fragment:"",t.toneMapping!==Ea?DH("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",dt.encodings_pars_fragment,zH("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(dp).join(`
`)),a=zS(a),a=pE(a,t),a=fE(a,t),o=zS(o),o=pE(o,t),o=fE(o,t),a=mE(a),o=mE(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,y=["#define varying in",t.glslVersion===FN?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===FN?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const x=b+m+a,v=b+y+o,w=dE(s,35633,x),T=dE(s,35632,v);if(s.attachShader(f,w),s.attachShader(f,T),t.index0AttributeName!==void 0?s.bindAttribLocation(f,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(f,0,"position"),s.linkProgram(f),n.debug.checkShaderErrors){const C=s.getProgramInfoLog(f).trim(),_=s.getShaderInfoLog(w).trim(),z=s.getShaderInfoLog(T).trim();let P=!0,R=!0;if(s.getProgramParameter(f,35714)===!1){P=!1;const A=hE(s,w,"vertex"),F=hE(s,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(f,35715)+`

Program Info Log: `+C+`
`+A+`
`+F)}else C!==""?console.warn("THREE.WebGLProgram: Program Info Log:",C):(_===""||z==="")&&(R=!1);R&&(this.diagnostics={runnable:P,programLog:C,vertexShader:{log:_,prefix:m},fragmentShader:{log:z,prefix:y}})}s.deleteShader(w),s.deleteShader(T);let k;this.getUniforms=function(){return k===void 0&&(k=new $y(s,f)),k};let S;return this.getAttributes=function(){return S===void 0&&(S=FH(s,f)),S},this.destroy=function(){r.releaseStatesOfProgram(this),s.deleteProgram(f),this.program=void 0},this.name=t.shaderName,this.id=RH++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=w,this.fragmentShader=T,this}let YH=0;class jH{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,r=e.fragmentShader,s=this._getShaderStage(t),i=this._getShaderStage(r),a=this._getShaderCacheForMaterial(e);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(i)===!1&&(a.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const r of t)r.usedTimes--,r.usedTimes===0&&this.shaderCache.delete(r.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let r=t.get(e);return r===void 0&&(r=new Set,t.set(e,r)),r}_getShaderStage(e){const t=this.shaderCache;let r=t.get(e);return r===void 0&&(r=new QH(e),t.set(e,r)),r}}class QH{constructor(e){this.id=YH++,this.code=e,this.usedTimes=0}}function JH(n,e,t,r,s,i,a){const o=new YA,l=new jH,u=[],c=s.isWebGL2,d=s.logarithmicDepthBuffer,h=s.vertexTextures;let p=s.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(S,C,_,z,P){const R=z.fog,A=P.geometry,F=S.isMeshStandardMaterial?z.environment:null,B=(S.isMeshStandardMaterial?t:e).get(S.envMap||F),K=B&&B.mapping===mb?B.image.height:null,L=g[S.type];S.precision!==null&&(p=s.getMaxPrecision(S.precision),p!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",p,"instead."));const O=A.morphAttributes.position||A.morphAttributes.normal||A.morphAttributes.color,U=O!==void 0?O.length:0;let ee=0;A.morphAttributes.position!==void 0&&(ee=1),A.morphAttributes.normal!==void 0&&(ee=2),A.morphAttributes.color!==void 0&&(ee=3);let G,Q,ne,X;if(L){const Me=Bi[L];G=Me.vertexShader,Q=Me.fragmentShader}else G=S.vertexShader,Q=S.fragmentShader,l.update(S),ne=l.getVertexShaderID(S),X=l.getFragmentShaderID(S);const ue=n.getRenderTarget(),le=S.alphaTest>0,pe=S.clearcoat>0,ge=S.iridescence>0;return{isWebGL2:c,shaderID:L,shaderName:S.type,vertexShader:G,fragmentShader:Q,defines:S.defines,customVertexShaderID:ne,customFragmentShaderID:X,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:p,instancing:P.isInstancedMesh===!0,instancingColor:P.isInstancedMesh===!0&&P.instanceColor!==null,supportsVertexTextures:h,outputEncoding:ue===null?n.outputEncoding:ue.isXRRenderTarget===!0?ue.texture.encoding:eu,map:!!S.map,matcap:!!S.matcap,envMap:!!B,envMapMode:B&&B.mapping,envMapCubeUVHeight:K,lightMap:!!S.lightMap,aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:S.normalMapType===f4,tangentSpaceNormalMap:S.normalMapType===BA,decodeVideoTexture:!!S.map&&S.map.isVideoTexture===!0&&S.map.encoding===Wt,clearcoat:pe,clearcoatMap:pe&&!!S.clearcoatMap,clearcoatRoughnessMap:pe&&!!S.clearcoatRoughnessMap,clearcoatNormalMap:pe&&!!S.clearcoatNormalMap,iridescence:ge,iridescenceMap:ge&&!!S.iridescenceMap,iridescenceThicknessMap:ge&&!!S.iridescenceThicknessMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,specularIntensityMap:!!S.specularIntensityMap,specularColorMap:!!S.specularColorMap,opaque:S.transparent===!1&&S.blending===Ac,alphaMap:!!S.alphaMap,alphaTest:le,gradientMap:!!S.gradientMap,sheen:S.sheen>0,sheenColorMap:!!S.sheenColorMap,sheenRoughnessMap:!!S.sheenRoughnessMap,transmission:S.transmission>0,transmissionMap:!!S.transmissionMap,thicknessMap:!!S.thicknessMap,combine:S.combine,vertexTangents:!!S.normalMap&&!!A.attributes.tangent,vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!A.attributes.color&&A.attributes.color.itemSize===4,vertexUvs:!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatMap||!!S.clearcoatRoughnessMap||!!S.clearcoatNormalMap||!!S.iridescenceMap||!!S.iridescenceThicknessMap||!!S.displacementMap||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||!!S.sheenColorMap||!!S.sheenRoughnessMap,uvsVertexOnly:!(S.map||S.bumpMap||S.normalMap||S.specularMap||S.alphaMap||S.emissiveMap||S.roughnessMap||S.metalnessMap||S.clearcoatNormalMap||S.iridescenceMap||S.iridescenceThicknessMap||S.transmission>0||S.transmissionMap||S.thicknessMap||S.specularIntensityMap||S.specularColorMap||S.sheen>0||S.sheenColorMap||S.sheenRoughnessMap)&&!!S.displacementMap,fog:!!R,useFog:S.fog===!0,fogExp2:R&&R.isFogExp2,flatShading:!!S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:d,skinning:P.isSkinnedMesh===!0,morphTargets:A.morphAttributes.position!==void 0,morphNormals:A.morphAttributes.normal!==void 0,morphColors:A.morphAttributes.color!==void 0,morphTargetsCount:U,morphTextureStride:ee,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numSpotLightMaps:C.spotLightMap.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numSpotLightShadowsWithMaps:C.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:S.dithering,shadowMapEnabled:n.shadowMap.enabled&&_.length>0,shadowMapType:n.shadowMap.type,toneMapping:S.toneMapped?n.toneMapping:Ea,useLegacyLights:n.useLegacyLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===yo,flipSided:S.side===_s,useDepthPacking:!!S.depthPacking,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||r.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function m(S){const C=[];if(S.shaderID?C.push(S.shaderID):(C.push(S.customVertexShaderID),C.push(S.customFragmentShaderID)),S.defines!==void 0)for(const _ in S.defines)C.push(_),C.push(S.defines[_]);return S.isRawShaderMaterial===!1&&(y(C,S),b(C,S),C.push(n.outputEncoding)),C.push(S.customProgramCacheKey),C.join()}function y(S,C){S.push(C.precision),S.push(C.outputEncoding),S.push(C.envMapMode),S.push(C.envMapCubeUVHeight),S.push(C.combine),S.push(C.vertexUvs),S.push(C.fogExp2),S.push(C.sizeAttenuation),S.push(C.morphTargetsCount),S.push(C.morphAttributeCount),S.push(C.numDirLights),S.push(C.numPointLights),S.push(C.numSpotLights),S.push(C.numSpotLightMaps),S.push(C.numHemiLights),S.push(C.numRectAreaLights),S.push(C.numDirLightShadows),S.push(C.numPointLightShadows),S.push(C.numSpotLightShadows),S.push(C.numSpotLightShadowsWithMaps),S.push(C.shadowMapType),S.push(C.toneMapping),S.push(C.numClippingPlanes),S.push(C.numClipIntersection),S.push(C.depthPacking)}function b(S,C){o.disableAll(),C.isWebGL2&&o.enable(0),C.supportsVertexTextures&&o.enable(1),C.instancing&&o.enable(2),C.instancingColor&&o.enable(3),C.map&&o.enable(4),C.matcap&&o.enable(5),C.envMap&&o.enable(6),C.lightMap&&o.enable(7),C.aoMap&&o.enable(8),C.emissiveMap&&o.enable(9),C.bumpMap&&o.enable(10),C.normalMap&&o.enable(11),C.objectSpaceNormalMap&&o.enable(12),C.tangentSpaceNormalMap&&o.enable(13),C.clearcoat&&o.enable(14),C.clearcoatMap&&o.enable(15),C.clearcoatRoughnessMap&&o.enable(16),C.clearcoatNormalMap&&o.enable(17),C.iridescence&&o.enable(18),C.iridescenceMap&&o.enable(19),C.iridescenceThicknessMap&&o.enable(20),C.displacementMap&&o.enable(21),C.specularMap&&o.enable(22),C.roughnessMap&&o.enable(23),C.metalnessMap&&o.enable(24),C.gradientMap&&o.enable(25),C.alphaMap&&o.enable(26),C.alphaTest&&o.enable(27),C.vertexColors&&o.enable(28),C.vertexAlphas&&o.enable(29),C.vertexUvs&&o.enable(30),C.vertexTangents&&o.enable(31),C.uvsVertexOnly&&o.enable(32),S.push(o.mask),o.disableAll(),C.fog&&o.enable(0),C.useFog&&o.enable(1),C.flatShading&&o.enable(2),C.logarithmicDepthBuffer&&o.enable(3),C.skinning&&o.enable(4),C.morphTargets&&o.enable(5),C.morphNormals&&o.enable(6),C.morphColors&&o.enable(7),C.premultipliedAlpha&&o.enable(8),C.shadowMapEnabled&&o.enable(9),C.useLegacyLights&&o.enable(10),C.doubleSided&&o.enable(11),C.flipSided&&o.enable(12),C.useDepthPacking&&o.enable(13),C.dithering&&o.enable(14),C.specularIntensityMap&&o.enable(15),C.specularColorMap&&o.enable(16),C.transmission&&o.enable(17),C.transmissionMap&&o.enable(18),C.thicknessMap&&o.enable(19),C.sheen&&o.enable(20),C.sheenColorMap&&o.enable(21),C.sheenRoughnessMap&&o.enable(22),C.decodeVideoTexture&&o.enable(23),C.opaque&&o.enable(24),S.push(o.mask)}function x(S){const C=g[S.type];let _;if(C){const z=Bi[C];_=F4.clone(z.uniforms)}else _=S.uniforms;return _}function v(S,C){let _;for(let z=0,P=u.length;z<P;z++){const R=u[z];if(R.cacheKey===C){_=R,++_.usedTimes;break}}return _===void 0&&(_=new KH(n,C,S,i),u.push(_)),_}function w(S){if(--S.usedTimes===0){const C=u.indexOf(S);u[C]=u[u.length-1],u.pop(),S.destroy()}}function T(S){l.remove(S)}function k(){l.dispose()}return{getParameters:f,getProgramCacheKey:m,getUniforms:x,acquireProgram:v,releaseProgram:w,releaseShaderCache:T,programs:u,dispose:k}}function qH(){let n=new WeakMap;function e(i){let a=n.get(i);return a===void 0&&(a={},n.set(i,a)),a}function t(i){n.delete(i)}function r(i,a,o){n.get(i)[a]=o}function s(){n=new WeakMap}return{get:e,remove:t,update:r,dispose:s}}function eK(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function yE(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function bE(){const n=[];let e=0;const t=[],r=[],s=[];function i(){e=0,t.length=0,r.length=0,s.length=0}function a(d,h,p,g,f,m){let y=n[e];return y===void 0?(y={id:d.id,object:d,geometry:h,material:p,groupOrder:g,renderOrder:d.renderOrder,z:f,group:m},n[e]=y):(y.id=d.id,y.object=d,y.geometry=h,y.material=p,y.groupOrder=g,y.renderOrder=d.renderOrder,y.z=f,y.group=m),e++,y}function o(d,h,p,g,f,m){const y=a(d,h,p,g,f,m);p.transmission>0?r.push(y):p.transparent===!0?s.push(y):t.push(y)}function l(d,h,p,g,f,m){const y=a(d,h,p,g,f,m);p.transmission>0?r.unshift(y):p.transparent===!0?s.unshift(y):t.unshift(y)}function u(d,h){t.length>1&&t.sort(d||eK),r.length>1&&r.sort(h||yE),s.length>1&&s.sort(h||yE)}function c(){for(let d=e,h=n.length;d<h;d++){const p=n[d];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:t,transmissive:r,transparent:s,init:i,push:o,unshift:l,finish:c,sort:u}}function tK(){let n=new WeakMap;function e(r,s){const i=n.get(r);let a;return i===void 0?(a=new bE,n.set(r,[a])):s>=i.length?(a=new bE,i.push(a)):a=i[s],a}function t(){n=new WeakMap}return{get:e,dispose:t}}function nK(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new te,color:new Et};break;case"SpotLight":t={position:new te,direction:new te,color:new Et,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new te,color:new Et,distance:0,decay:0};break;case"HemisphereLight":t={direction:new te,skyColor:new Et,groundColor:new Et};break;case"RectAreaLight":t={color:new Et,position:new te,halfWidth:new te,halfHeight:new te};break}return n[e.id]=t,t}}}function rK(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ue};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ue};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ue,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let sK=0;function iK(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function aK(n,e){const t=new nK,r=rK(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let c=0;c<9;c++)s.probe.push(new te);const i=new te,a=new Bt,o=new Bt;function l(c,d){let h=0,p=0,g=0;for(let z=0;z<9;z++)s.probe[z].set(0,0,0);let f=0,m=0,y=0,b=0,x=0,v=0,w=0,T=0,k=0,S=0;c.sort(iK);const C=d===!0?Math.PI:1;for(let z=0,P=c.length;z<P;z++){const R=c[z],A=R.color,F=R.intensity,B=R.distance,K=R.shadow&&R.shadow.map?R.shadow.map.texture:null;if(R.isAmbientLight)h+=A.r*F*C,p+=A.g*F*C,g+=A.b*F*C;else if(R.isLightProbe)for(let L=0;L<9;L++)s.probe[L].addScaledVector(R.sh.coefficients[L],F);else if(R.isDirectionalLight){const L=t.get(R);if(L.color.copy(R.color).multiplyScalar(R.intensity*C),R.castShadow){const O=R.shadow,U=r.get(R);U.shadowBias=O.bias,U.shadowNormalBias=O.normalBias,U.shadowRadius=O.radius,U.shadowMapSize=O.mapSize,s.directionalShadow[f]=U,s.directionalShadowMap[f]=K,s.directionalShadowMatrix[f]=R.shadow.matrix,v++}s.directional[f]=L,f++}else if(R.isSpotLight){const L=t.get(R);L.position.setFromMatrixPosition(R.matrixWorld),L.color.copy(A).multiplyScalar(F*C),L.distance=B,L.coneCos=Math.cos(R.angle),L.penumbraCos=Math.cos(R.angle*(1-R.penumbra)),L.decay=R.decay,s.spot[y]=L;const O=R.shadow;if(R.map&&(s.spotLightMap[k]=R.map,k++,O.updateMatrices(R),R.castShadow&&S++),s.spotLightMatrix[y]=O.matrix,R.castShadow){const U=r.get(R);U.shadowBias=O.bias,U.shadowNormalBias=O.normalBias,U.shadowRadius=O.radius,U.shadowMapSize=O.mapSize,s.spotShadow[y]=U,s.spotShadowMap[y]=K,T++}y++}else if(R.isRectAreaLight){const L=t.get(R);L.color.copy(A).multiplyScalar(F),L.halfWidth.set(R.width*.5,0,0),L.halfHeight.set(0,R.height*.5,0),s.rectArea[b]=L,b++}else if(R.isPointLight){const L=t.get(R);if(L.color.copy(R.color).multiplyScalar(R.intensity*C),L.distance=R.distance,L.decay=R.decay,R.castShadow){const O=R.shadow,U=r.get(R);U.shadowBias=O.bias,U.shadowNormalBias=O.normalBias,U.shadowRadius=O.radius,U.shadowMapSize=O.mapSize,U.shadowCameraNear=O.camera.near,U.shadowCameraFar=O.camera.far,s.pointShadow[m]=U,s.pointShadowMap[m]=K,s.pointShadowMatrix[m]=R.shadow.matrix,w++}s.point[m]=L,m++}else if(R.isHemisphereLight){const L=t.get(R);L.skyColor.copy(R.color).multiplyScalar(F*C),L.groundColor.copy(R.groundColor).multiplyScalar(F*C),s.hemi[x]=L,x++}}b>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=_e.LTC_FLOAT_1,s.rectAreaLTC2=_e.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=_e.LTC_HALF_1,s.rectAreaLTC2=_e.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=h,s.ambient[1]=p,s.ambient[2]=g;const _=s.hash;(_.directionalLength!==f||_.pointLength!==m||_.spotLength!==y||_.rectAreaLength!==b||_.hemiLength!==x||_.numDirectionalShadows!==v||_.numPointShadows!==w||_.numSpotShadows!==T||_.numSpotMaps!==k)&&(s.directional.length=f,s.spot.length=y,s.rectArea.length=b,s.point.length=m,s.hemi.length=x,s.directionalShadow.length=v,s.directionalShadowMap.length=v,s.pointShadow.length=w,s.pointShadowMap.length=w,s.spotShadow.length=T,s.spotShadowMap.length=T,s.directionalShadowMatrix.length=v,s.pointShadowMatrix.length=w,s.spotLightMatrix.length=T+k-S,s.spotLightMap.length=k,s.numSpotLightShadowsWithMaps=S,_.directionalLength=f,_.pointLength=m,_.spotLength=y,_.rectAreaLength=b,_.hemiLength=x,_.numDirectionalShadows=v,_.numPointShadows=w,_.numSpotShadows=T,_.numSpotMaps=k,s.version=sK++)}function u(c,d){let h=0,p=0,g=0,f=0,m=0;const y=d.matrixWorldInverse;for(let b=0,x=c.length;b<x;b++){const v=c[b];if(v.isDirectionalLight){const w=s.directional[h];w.direction.setFromMatrixPosition(v.matrixWorld),i.setFromMatrixPosition(v.target.matrixWorld),w.direction.sub(i),w.direction.transformDirection(y),h++}else if(v.isSpotLight){const w=s.spot[g];w.position.setFromMatrixPosition(v.matrixWorld),w.position.applyMatrix4(y),w.direction.setFromMatrixPosition(v.matrixWorld),i.setFromMatrixPosition(v.target.matrixWorld),w.direction.sub(i),w.direction.transformDirection(y),g++}else if(v.isRectAreaLight){const w=s.rectArea[f];w.position.setFromMatrixPosition(v.matrixWorld),w.position.applyMatrix4(y),o.identity(),a.copy(v.matrixWorld),a.premultiply(y),o.extractRotation(a),w.halfWidth.set(v.width*.5,0,0),w.halfHeight.set(0,v.height*.5,0),w.halfWidth.applyMatrix4(o),w.halfHeight.applyMatrix4(o),f++}else if(v.isPointLight){const w=s.point[p];w.position.setFromMatrixPosition(v.matrixWorld),w.position.applyMatrix4(y),p++}else if(v.isHemisphereLight){const w=s.hemi[m];w.direction.setFromMatrixPosition(v.matrixWorld),w.direction.transformDirection(y),m++}}}return{setup:l,setupView:u,state:s}}function xE(n,e){const t=new aK(n,e),r=[],s=[];function i(){r.length=0,s.length=0}function a(d){r.push(d)}function o(d){s.push(d)}function l(d){t.setup(r,d)}function u(d){t.setupView(r,d)}return{init:i,state:{lightsArray:r,shadowsArray:s,lights:t},setupLights:l,setupLightsView:u,pushLight:a,pushShadow:o}}function oK(n,e){let t=new WeakMap;function r(i,a=0){const o=t.get(i);let l;return o===void 0?(l=new xE(n,e),t.set(i,[l])):a>=o.length?(l=new xE(n,e),o.push(l)):l=o[a],l}function s(){t=new WeakMap}return{get:r,dispose:s}}class lK extends Ef{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=h4,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class uK extends Ef{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new te,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const cK=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,dK=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function hK(n,e,t){let r=new LT;const s=new Ue,i=new Ue,a=new tr,o=new lK({depthPacking:p4}),l=new uK,u={},c=t.maxTextureSize,d={[Fo]:_s,[_s]:Fo,[yo]:yo},h=new nu({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ue},radius:{value:4}},vertexShader:cK,fragmentShader:dK}),p=h.clone();p.defines.HORIZONTAL_PASS=1;const g=new el;g.setAttribute("position",new qi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new Ma(g,h),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=$A,this.render=function(v,w,T){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||v.length===0)return;const k=n.getRenderTarget(),S=n.getActiveCubeFace(),C=n.getActiveMipmapLevel(),_=n.state;_.setBlending(Ro),_.buffers.color.setClear(1,1,1,1),_.buffers.depth.setTest(!0),_.setScissorTest(!1);for(let z=0,P=v.length;z<P;z++){const R=v[z],A=R.shadow;if(A===void 0){console.warn("THREE.WebGLShadowMap:",R,"has no shadow.");continue}if(A.autoUpdate===!1&&A.needsUpdate===!1)continue;s.copy(A.mapSize);const F=A.getFrameExtents();if(s.multiply(F),i.copy(A.mapSize),(s.x>c||s.y>c)&&(s.x>c&&(i.x=Math.floor(c/F.x),s.x=i.x*F.x,A.mapSize.x=i.x),s.y>c&&(i.y=Math.floor(c/F.y),s.y=i.y*F.y,A.mapSize.y=i.y)),A.map===null){const K=this.type!==cp?{minFilter:Pr,magFilter:Pr}:{};A.map=new tu(s.x,s.y,K),A.map.texture.name=R.name+".shadowMap",A.camera.updateProjectionMatrix()}n.setRenderTarget(A.map),n.clear();const B=A.getViewportCount();for(let K=0;K<B;K++){const L=A.getViewport(K);a.set(i.x*L.x,i.y*L.y,i.x*L.z,i.y*L.w),_.viewport(a),A.updateMatrices(R,K),r=A.getFrustum(),x(w,T,A.camera,R,this.type)}A.isPointLightShadow!==!0&&this.type===cp&&y(A,T),A.needsUpdate=!1}m.needsUpdate=!1,n.setRenderTarget(k,S,C)};function y(v,w){const T=e.update(f);h.defines.VSM_SAMPLES!==v.blurSamples&&(h.defines.VSM_SAMPLES=v.blurSamples,p.defines.VSM_SAMPLES=v.blurSamples,h.needsUpdate=!0,p.needsUpdate=!0),v.mapPass===null&&(v.mapPass=new tu(s.x,s.y)),h.uniforms.shadow_pass.value=v.map.texture,h.uniforms.resolution.value=v.mapSize,h.uniforms.radius.value=v.radius,n.setRenderTarget(v.mapPass),n.clear(),n.renderBufferDirect(w,null,T,h,f,null),p.uniforms.shadow_pass.value=v.mapPass.texture,p.uniforms.resolution.value=v.mapSize,p.uniforms.radius.value=v.radius,n.setRenderTarget(v.map),n.clear(),n.renderBufferDirect(w,null,T,p,f,null)}function b(v,w,T,k,S,C){let _=null;const z=T.isPointLight===!0?v.customDistanceMaterial:v.customDepthMaterial;if(z!==void 0)_=z;else if(_=T.isPointLight===!0?l:o,n.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0||w.map&&w.alphaTest>0){const P=_.uuid,R=w.uuid;let A=u[P];A===void 0&&(A={},u[P]=A);let F=A[R];F===void 0&&(F=_.clone(),A[R]=F),_=F}return _.visible=w.visible,_.wireframe=w.wireframe,C===cp?_.side=w.shadowSide!==null?w.shadowSide:w.side:_.side=w.shadowSide!==null?w.shadowSide:d[w.side],_.alphaMap=w.alphaMap,_.alphaTest=w.alphaTest,_.map=w.map,_.clipShadows=w.clipShadows,_.clippingPlanes=w.clippingPlanes,_.clipIntersection=w.clipIntersection,_.displacementMap=w.displacementMap,_.displacementScale=w.displacementScale,_.displacementBias=w.displacementBias,_.wireframeLinewidth=w.wireframeLinewidth,_.linewidth=w.linewidth,T.isPointLight===!0&&_.isMeshDistanceMaterial===!0&&(_.referencePosition.setFromMatrixPosition(T.matrixWorld),_.nearDistance=k,_.farDistance=S),_}function x(v,w,T,k,S){if(v.visible===!1)return;if(v.layers.test(w.layers)&&(v.isMesh||v.isLine||v.isPoints)&&(v.castShadow||v.receiveShadow&&S===cp)&&(!v.frustumCulled||r.intersectsObject(v))){v.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,v.matrixWorld);const z=e.update(v),P=v.material;if(Array.isArray(P)){const R=z.groups;for(let A=0,F=R.length;A<F;A++){const B=R[A],K=P[B.materialIndex];if(K&&K.visible){const L=b(v,K,k,T.near,T.far,S);n.renderBufferDirect(T,null,z,L,v,B)}}}else if(P.visible){const R=b(v,P,k,T.near,T.far,S);n.renderBufferDirect(T,null,z,R,v,null)}}const _=v.children;for(let z=0,P=_.length;z<P;z++)x(_[z],w,T,k,S)}}function pK(n,e,t){const r=t.isWebGL2;function s(){let J=!1;const de=new tr;let Se=null;const ze=new tr(0,0,0,0);return{setMask:function(Oe){Se!==Oe&&!J&&(n.colorMask(Oe,Oe,Oe,Oe),Se=Oe)},setLocked:function(Oe){J=Oe},setClear:function(Oe,Zt,Hn,Rr,Li){Li===!0&&(Oe*=Rr,Zt*=Rr,Hn*=Rr),de.set(Oe,Zt,Hn,Rr),ze.equals(de)===!1&&(n.clearColor(Oe,Zt,Hn,Rr),ze.copy(de))},reset:function(){J=!1,Se=null,ze.set(-1,0,0,0)}}}function i(){let J=!1,de=null,Se=null,ze=null;return{setTest:function(Oe){Oe?le(2929):pe(2929)},setMask:function(Oe){de!==Oe&&!J&&(n.depthMask(Oe),de=Oe)},setFunc:function(Oe){if(Se!==Oe){switch(Oe){case PX:n.depthFunc(512);break;case $X:n.depthFunc(519);break;case FX:n.depthFunc(513);break;case MS:n.depthFunc(515);break;case GX:n.depthFunc(514);break;case OX:n.depthFunc(518);break;case WX:n.depthFunc(516);break;case VX:n.depthFunc(517);break;default:n.depthFunc(515)}Se=Oe}},setLocked:function(Oe){J=Oe},setClear:function(Oe){ze!==Oe&&(n.clearDepth(Oe),ze=Oe)},reset:function(){J=!1,de=null,Se=null,ze=null}}}function a(){let J=!1,de=null,Se=null,ze=null,Oe=null,Zt=null,Hn=null,Rr=null,Li=null;return{setTest:function(xn){J||(xn?le(2960):pe(2960))},setMask:function(xn){de!==xn&&!J&&(n.stencilMask(xn),de=xn)},setFunc:function(xn,$s,Ai){(Se!==xn||ze!==$s||Oe!==Ai)&&(n.stencilFunc(xn,$s,Ai),Se=xn,ze=$s,Oe=Ai)},setOp:function(xn,$s,Ai){(Zt!==xn||Hn!==$s||Rr!==Ai)&&(n.stencilOp(xn,$s,Ai),Zt=xn,Hn=$s,Rr=Ai)},setLocked:function(xn){J=xn},setClear:function(xn){Li!==xn&&(n.clearStencil(xn),Li=xn)},reset:function(){J=!1,de=null,Se=null,ze=null,Oe=null,Zt=null,Hn=null,Rr=null,Li=null}}}const o=new s,l=new i,u=new a,c=new WeakMap,d=new WeakMap;let h={},p={},g=new WeakMap,f=[],m=null,y=!1,b=null,x=null,v=null,w=null,T=null,k=null,S=null,C=!1,_=null,z=null,P=null,R=null,A=null;const F=n.getParameter(35661);let B=!1,K=0;const L=n.getParameter(7938);L.indexOf("WebGL")!==-1?(K=parseFloat(/^WebGL (\d)/.exec(L)[1]),B=K>=1):L.indexOf("OpenGL ES")!==-1&&(K=parseFloat(/^OpenGL ES (\d)/.exec(L)[1]),B=K>=2);let O=null,U={};const ee=n.getParameter(3088),G=n.getParameter(2978),Q=new tr().fromArray(ee),ne=new tr().fromArray(G);function X(J,de,Se){const ze=new Uint8Array(4),Oe=n.createTexture();n.bindTexture(J,Oe),n.texParameteri(J,10241,9728),n.texParameteri(J,10240,9728);for(let Zt=0;Zt<Se;Zt++)n.texImage2D(de+Zt,0,6408,1,1,0,6408,5121,ze);return Oe}const ue={};ue[3553]=X(3553,3553,1),ue[34067]=X(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),u.setClear(0),le(2929),l.setFunc(MS),it(!1),at(oN),le(2884),st(Ro);function le(J){h[J]!==!0&&(n.enable(J),h[J]=!0)}function pe(J){h[J]!==!1&&(n.disable(J),h[J]=!1)}function ge(J,de){return p[J]!==de?(n.bindFramebuffer(J,de),p[J]=de,r&&(J===36009&&(p[36160]=de),J===36160&&(p[36009]=de)),!0):!1}function be(J,de){let Se=f,ze=!1;if(J)if(Se=g.get(de),Se===void 0&&(Se=[],g.set(de,Se)),J.isWebGLMultipleRenderTargets){const Oe=J.texture;if(Se.length!==Oe.length||Se[0]!==36064){for(let Zt=0,Hn=Oe.length;Zt<Hn;Zt++)Se[Zt]=36064+Zt;Se.length=Oe.length,ze=!0}}else Se[0]!==36064&&(Se[0]=36064,ze=!0);else Se[0]!==1029&&(Se[0]=1029,ze=!0);ze&&(t.isWebGL2?n.drawBuffers(Se):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Se))}function Me(J){return m!==J?(n.useProgram(J),m=J,!0):!1}const Re={[oc]:32774,[kX]:32778,[CX]:32779};if(r)Re[dN]=32775,Re[hN]=32776;else{const J=e.get("EXT_blend_minmax");J!==null&&(Re[dN]=J.MIN_EXT,Re[hN]=J.MAX_EXT)}const Xe={[_X]:0,[MX]:1,[NX]:768,[FA]:770,[DX]:776,[AX]:774,[RX]:772,[EX]:769,[GA]:771,[zX]:775,[LX]:773};function st(J,de,Se,ze,Oe,Zt,Hn,Rr){if(J===Ro){y===!0&&(pe(3042),y=!1);return}if(y===!1&&(le(3042),y=!0),J!==IX){if(J!==b||Rr!==C){if((x!==oc||T!==oc)&&(n.blendEquation(32774),x=oc,T=oc),Rr)switch(J){case Ac:n.blendFuncSeparate(1,771,1,771);break;case lN:n.blendFunc(1,1);break;case uN:n.blendFuncSeparate(0,769,0,1);break;case cN:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",J);break}else switch(J){case Ac:n.blendFuncSeparate(770,771,1,771);break;case lN:n.blendFunc(770,1);break;case uN:n.blendFuncSeparate(0,769,0,1);break;case cN:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",J);break}v=null,w=null,k=null,S=null,b=J,C=Rr}return}Oe=Oe||de,Zt=Zt||Se,Hn=Hn||ze,(de!==x||Oe!==T)&&(n.blendEquationSeparate(Re[de],Re[Oe]),x=de,T=Oe),(Se!==v||ze!==w||Zt!==k||Hn!==S)&&(n.blendFuncSeparate(Xe[Se],Xe[ze],Xe[Zt],Xe[Hn]),v=Se,w=ze,k=Zt,S=Hn),b=J,C=!1}function ct(J,de){J.side===yo?pe(2884):le(2884);let Se=J.side===_s;de&&(Se=!Se),it(Se),J.blending===Ac&&J.transparent===!1?st(Ro):st(J.blending,J.blendEquation,J.blendSrc,J.blendDst,J.blendEquationAlpha,J.blendSrcAlpha,J.blendDstAlpha,J.premultipliedAlpha),l.setFunc(J.depthFunc),l.setTest(J.depthTest),l.setMask(J.depthWrite),o.setMask(J.colorWrite);const ze=J.stencilWrite;u.setTest(ze),ze&&(u.setMask(J.stencilWriteMask),u.setFunc(J.stencilFunc,J.stencilRef,J.stencilFuncMask),u.setOp(J.stencilFail,J.stencilZFail,J.stencilZPass)),kt(J.polygonOffset,J.polygonOffsetFactor,J.polygonOffsetUnits),J.alphaToCoverage===!0?le(32926):pe(32926)}function it(J){_!==J&&(J?n.frontFace(2304):n.frontFace(2305),_=J)}function at(J){J!==wX?(le(2884),J!==z&&(J===oN?n.cullFace(1029):J===SX?n.cullFace(1028):n.cullFace(1032))):pe(2884),z=J}function et(J){J!==P&&(B&&n.lineWidth(J),P=J)}function kt(J,de,Se){J?(le(32823),(R!==de||A!==Se)&&(n.polygonOffset(de,Se),R=de,A=Se)):pe(32823)}function $t(J){J?le(3089):pe(3089)}function bn(J){J===void 0&&(J=33984+F-1),O!==J&&(n.activeTexture(J),O=J)}function $(J,de,Se){Se===void 0&&(O===null?Se=33984+F-1:Se=O);let ze=U[Se];ze===void 0&&(ze={type:void 0,texture:void 0},U[Se]=ze),(ze.type!==J||ze.texture!==de)&&(O!==Se&&(n.activeTexture(Se),O=Se),n.bindTexture(J,de||ue[J]),ze.type=J,ze.texture=de)}function E(){const J=U[O];J!==void 0&&J.type!==void 0&&(n.bindTexture(J.type,null),J.type=void 0,J.texture=void 0)}function oe(){try{n.compressedTexImage2D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function ve(){try{n.compressedTexImage3D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function we(){try{n.texSubImage2D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Ne(){try{n.texSubImage3D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Be(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Le(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function fe(){try{n.texStorage2D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Qe(){try{n.texStorage3D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Ge(){try{n.texImage2D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function He(){try{n.texImage3D.apply(n,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Ke(J){Q.equals(J)===!1&&(n.scissor(J.x,J.y,J.z,J.w),Q.copy(J))}function Ze(J){ne.equals(J)===!1&&(n.viewport(J.x,J.y,J.z,J.w),ne.copy(J))}function _t(J,de){let Se=d.get(de);Se===void 0&&(Se=new WeakMap,d.set(de,Se));let ze=Se.get(J);ze===void 0&&(ze=n.getUniformBlockIndex(de,J.name),Se.set(J,ze))}function sn(J,de){const ze=d.get(de).get(J);c.get(de)!==ze&&(n.uniformBlockBinding(de,ze,J.__bindingPointIndex),c.set(de,ze))}function Zn(){n.disable(3042),n.disable(2884),n.disable(2929),n.disable(32823),n.disable(3089),n.disable(2960),n.disable(32926),n.blendEquation(32774),n.blendFunc(1,0),n.blendFuncSeparate(1,0,1,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(513),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(519,0,4294967295),n.stencilOp(7680,7680,7680),n.clearStencil(0),n.cullFace(1029),n.frontFace(2305),n.polygonOffset(0,0),n.activeTexture(33984),n.bindFramebuffer(36160,null),r===!0&&(n.bindFramebuffer(36009,null),n.bindFramebuffer(36008,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),h={},O=null,U={},p={},g=new WeakMap,f=[],m=null,y=!1,b=null,x=null,v=null,w=null,T=null,k=null,S=null,C=!1,_=null,z=null,P=null,R=null,A=null,Q.set(0,0,n.canvas.width,n.canvas.height),ne.set(0,0,n.canvas.width,n.canvas.height),o.reset(),l.reset(),u.reset()}return{buffers:{color:o,depth:l,stencil:u},enable:le,disable:pe,bindFramebuffer:ge,drawBuffers:be,useProgram:Me,setBlending:st,setMaterial:ct,setFlipSided:it,setCullFace:at,setLineWidth:et,setPolygonOffset:kt,setScissorTest:$t,activeTexture:bn,bindTexture:$,unbindTexture:E,compressedTexImage2D:oe,compressedTexImage3D:ve,texImage2D:Ge,texImage3D:He,updateUBOMapping:_t,uniformBlockBinding:sn,texStorage2D:fe,texStorage3D:Qe,texSubImage2D:we,texSubImage3D:Ne,compressedTexSubImage2D:Be,compressedTexSubImage3D:Le,scissor:Ke,viewport:Ze,reset:Zn}}function fK(n,e,t,r,s,i,a){const o=s.isWebGL2,l=s.maxTextures,u=s.maxCubemapSize,c=s.maxTextureSize,d=s.maxSamples,h=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let f;const m=new WeakMap;let y=!1;try{y=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b($,E){return y?new OffscreenCanvas($,E):b0("canvas")}function x($,E,oe,ve){let we=1;if(($.width>ve||$.height>ve)&&(we=ve/Math.max($.width,$.height)),we<1||E===!0)if(typeof HTMLImageElement<"u"&&$ instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&$ instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&$ instanceof ImageBitmap){const Ne=E?y4:Math.floor,Be=Ne(we*$.width),Le=Ne(we*$.height);f===void 0&&(f=b(Be,Le));const fe=oe?b(Be,Le):f;return fe.width=Be,fe.height=Le,fe.getContext("2d").drawImage($,0,0,Be,Le),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+$.width+"x"+$.height+") to ("+Be+"x"+Le+")."),fe}else return"data"in $&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+$.width+"x"+$.height+")."),$;return $}function v($){return ON($.width)&&ON($.height)}function w($){return o?!1:$.wrapS!==fi||$.wrapT!==fi||$.minFilter!==Pr&&$.minFilter!==Xs}function T($,E){return $.generateMipmaps&&E&&$.minFilter!==Pr&&$.minFilter!==Xs}function k($){n.generateMipmap($)}function S($,E,oe,ve,we=!1){if(o===!1)return E;if($!==null){if(n[$]!==void 0)return n[$];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+$+"'")}let Ne=E;return E===6403&&(oe===5126&&(Ne=33326),oe===5131&&(Ne=33325),oe===5121&&(Ne=33321)),E===33319&&(oe===5126&&(Ne=33328),oe===5131&&(Ne=33327),oe===5121&&(Ne=33323)),E===6408&&(oe===5126&&(Ne=34836),oe===5131&&(Ne=34842),oe===5121&&(Ne=ve===Wt&&we===!1?35907:32856),oe===32819&&(Ne=32854),oe===32820&&(Ne=32855)),(Ne===33325||Ne===33326||Ne===33327||Ne===33328||Ne===34842||Ne===34836)&&e.get("EXT_color_buffer_float"),Ne}function C($,E,oe){return T($,oe)===!0||$.isFramebufferTexture&&$.minFilter!==Pr&&$.minFilter!==Xs?Math.log2(Math.max(E.width,E.height))+1:$.mipmaps!==void 0&&$.mipmaps.length>0?$.mipmaps.length:$.isCompressedTexture&&Array.isArray($.image)?E.mipmaps.length:1}function _($){return $===Pr||$===pN||$===x1?9728:9729}function z($){const E=$.target;E.removeEventListener("dispose",z),R(E),E.isVideoTexture&&g.delete(E)}function P($){const E=$.target;E.removeEventListener("dispose",P),F(E)}function R($){const E=r.get($);if(E.__webglInit===void 0)return;const oe=$.source,ve=m.get(oe);if(ve){const we=ve[E.__cacheKey];we.usedTimes--,we.usedTimes===0&&A($),Object.keys(ve).length===0&&m.delete(oe)}r.remove($)}function A($){const E=r.get($);n.deleteTexture(E.__webglTexture);const oe=$.source,ve=m.get(oe);delete ve[E.__cacheKey],a.memory.textures--}function F($){const E=$.texture,oe=r.get($),ve=r.get(E);if(ve.__webglTexture!==void 0&&(n.deleteTexture(ve.__webglTexture),a.memory.textures--),$.depthTexture&&$.depthTexture.dispose(),$.isWebGLCubeRenderTarget)for(let we=0;we<6;we++)n.deleteFramebuffer(oe.__webglFramebuffer[we]),oe.__webglDepthbuffer&&n.deleteRenderbuffer(oe.__webglDepthbuffer[we]);else{if(n.deleteFramebuffer(oe.__webglFramebuffer),oe.__webglDepthbuffer&&n.deleteRenderbuffer(oe.__webglDepthbuffer),oe.__webglMultisampledFramebuffer&&n.deleteFramebuffer(oe.__webglMultisampledFramebuffer),oe.__webglColorRenderbuffer)for(let we=0;we<oe.__webglColorRenderbuffer.length;we++)oe.__webglColorRenderbuffer[we]&&n.deleteRenderbuffer(oe.__webglColorRenderbuffer[we]);oe.__webglDepthRenderbuffer&&n.deleteRenderbuffer(oe.__webglDepthRenderbuffer)}if($.isWebGLMultipleRenderTargets)for(let we=0,Ne=E.length;we<Ne;we++){const Be=r.get(E[we]);Be.__webglTexture&&(n.deleteTexture(Be.__webglTexture),a.memory.textures--),r.remove(E[we])}r.remove(E),r.remove($)}let B=0;function K(){B=0}function L(){const $=B;return $>=l&&console.warn("THREE.WebGLTextures: Trying to use "+$+" texture units while this GPU supports only "+l),B+=1,$}function O($){const E=[];return E.push($.wrapS),E.push($.wrapT),E.push($.wrapR||0),E.push($.magFilter),E.push($.minFilter),E.push($.anisotropy),E.push($.internalFormat),E.push($.format),E.push($.type),E.push($.generateMipmaps),E.push($.premultiplyAlpha),E.push($.flipY),E.push($.unpackAlignment),E.push($.encoding),E.join()}function U($,E){const oe=r.get($);if($.isVideoTexture&&$t($),$.isRenderTargetTexture===!1&&$.version>0&&oe.__version!==$.version){const ve=$.image;if(ve===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ve.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{pe(oe,$,E);return}}t.bindTexture(3553,oe.__webglTexture,33984+E)}function ee($,E){const oe=r.get($);if($.version>0&&oe.__version!==$.version){pe(oe,$,E);return}t.bindTexture(35866,oe.__webglTexture,33984+E)}function G($,E){const oe=r.get($);if($.version>0&&oe.__version!==$.version){pe(oe,$,E);return}t.bindTexture(32879,oe.__webglTexture,33984+E)}function Q($,E){const oe=r.get($);if($.version>0&&oe.__version!==$.version){ge(oe,$,E);return}t.bindTexture(34067,oe.__webglTexture,33984+E)}const ne={[RS]:10497,[fi]:33071,[LS]:33648},X={[Pr]:9728,[pN]:9984,[x1]:9986,[Xs]:9729,[jX]:9985,[Qp]:9987};function ue($,E,oe){if(oe?(n.texParameteri($,10242,ne[E.wrapS]),n.texParameteri($,10243,ne[E.wrapT]),($===32879||$===35866)&&n.texParameteri($,32882,ne[E.wrapR]),n.texParameteri($,10240,X[E.magFilter]),n.texParameteri($,10241,X[E.minFilter])):(n.texParameteri($,10242,33071),n.texParameteri($,10243,33071),($===32879||$===35866)&&n.texParameteri($,32882,33071),(E.wrapS!==fi||E.wrapT!==fi)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri($,10240,_(E.magFilter)),n.texParameteri($,10241,_(E.minFilter)),E.minFilter!==Pr&&E.minFilter!==Xs&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ve=e.get("EXT_texture_filter_anisotropic");if(E.magFilter===Pr||E.minFilter!==x1&&E.minFilter!==Qp||E.type===Pl&&e.has("OES_texture_float_linear")===!1||o===!1&&E.type===Jp&&e.has("OES_texture_half_float_linear")===!1)return;(E.anisotropy>1||r.get(E).__currentAnisotropy)&&(n.texParameterf($,ve.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,s.getMaxAnisotropy())),r.get(E).__currentAnisotropy=E.anisotropy)}}function le($,E){let oe=!1;$.__webglInit===void 0&&($.__webglInit=!0,E.addEventListener("dispose",z));const ve=E.source;let we=m.get(ve);we===void 0&&(we={},m.set(ve,we));const Ne=O(E);if(Ne!==$.__cacheKey){we[Ne]===void 0&&(we[Ne]={texture:n.createTexture(),usedTimes:0},a.memory.textures++,oe=!0),we[Ne].usedTimes++;const Be=we[$.__cacheKey];Be!==void 0&&(we[$.__cacheKey].usedTimes--,Be.usedTimes===0&&A(E)),$.__cacheKey=Ne,$.__webglTexture=we[Ne].texture}return oe}function pe($,E,oe){let ve=3553;(E.isDataArrayTexture||E.isCompressedArrayTexture)&&(ve=35866),E.isData3DTexture&&(ve=32879);const we=le($,E),Ne=E.source;t.bindTexture(ve,$.__webglTexture,33984+oe);const Be=r.get(Ne);if(Ne.version!==Be.__version||we===!0){t.activeTexture(33984+oe),n.pixelStorei(37440,E.flipY),n.pixelStorei(37441,E.premultiplyAlpha),n.pixelStorei(3317,E.unpackAlignment),n.pixelStorei(37443,0);const Le=w(E)&&v(E.image)===!1;let fe=x(E.image,Le,!1,c);fe=bn(E,fe);const Qe=v(fe)||o,Ge=i.convert(E.format,E.encoding);let He=i.convert(E.type),Ke=S(E.internalFormat,Ge,He,E.encoding,E.isVideoTexture);ue(ve,E,Qe);let Ze;const _t=E.mipmaps,sn=o&&E.isVideoTexture!==!0,Zn=Be.__version===void 0||we===!0,J=C(E,fe,Qe);if(E.isDepthTexture)Ke=6402,o?E.type===Pl?Ke=36012:E.type===Dl?Ke=33190:E.type===zc?Ke=35056:Ke=33189:E.type===Pl&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),E.format===Vl&&Ke===6402&&E.type!==VA&&E.type!==Dl&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),E.type=Dl,He=i.convert(E.type)),E.format===Yc&&Ke===6402&&(Ke=34041,E.type!==zc&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),E.type=zc,He=i.convert(E.type))),Zn&&(sn?t.texStorage2D(3553,1,Ke,fe.width,fe.height):t.texImage2D(3553,0,Ke,fe.width,fe.height,0,Ge,He,null));else if(E.isDataTexture)if(_t.length>0&&Qe){sn&&Zn&&t.texStorage2D(3553,J,Ke,_t[0].width,_t[0].height);for(let de=0,Se=_t.length;de<Se;de++)Ze=_t[de],sn?t.texSubImage2D(3553,de,0,0,Ze.width,Ze.height,Ge,He,Ze.data):t.texImage2D(3553,de,Ke,Ze.width,Ze.height,0,Ge,He,Ze.data);E.generateMipmaps=!1}else sn?(Zn&&t.texStorage2D(3553,J,Ke,fe.width,fe.height),t.texSubImage2D(3553,0,0,0,fe.width,fe.height,Ge,He,fe.data)):t.texImage2D(3553,0,Ke,fe.width,fe.height,0,Ge,He,fe.data);else if(E.isCompressedTexture)if(E.isCompressedArrayTexture){sn&&Zn&&t.texStorage3D(35866,J,Ke,_t[0].width,_t[0].height,fe.depth);for(let de=0,Se=_t.length;de<Se;de++)Ze=_t[de],E.format!==mi?Ge!==null?sn?t.compressedTexSubImage3D(35866,de,0,0,0,Ze.width,Ze.height,fe.depth,Ge,Ze.data,0,0):t.compressedTexImage3D(35866,de,Ke,Ze.width,Ze.height,fe.depth,0,Ze.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):sn?t.texSubImage3D(35866,de,0,0,0,Ze.width,Ze.height,fe.depth,Ge,He,Ze.data):t.texImage3D(35866,de,Ke,Ze.width,Ze.height,fe.depth,0,Ge,He,Ze.data)}else{sn&&Zn&&t.texStorage2D(3553,J,Ke,_t[0].width,_t[0].height);for(let de=0,Se=_t.length;de<Se;de++)Ze=_t[de],E.format!==mi?Ge!==null?sn?t.compressedTexSubImage2D(3553,de,0,0,Ze.width,Ze.height,Ge,Ze.data):t.compressedTexImage2D(3553,de,Ke,Ze.width,Ze.height,0,Ze.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):sn?t.texSubImage2D(3553,de,0,0,Ze.width,Ze.height,Ge,He,Ze.data):t.texImage2D(3553,de,Ke,Ze.width,Ze.height,0,Ge,He,Ze.data)}else if(E.isDataArrayTexture)sn?(Zn&&t.texStorage3D(35866,J,Ke,fe.width,fe.height,fe.depth),t.texSubImage3D(35866,0,0,0,0,fe.width,fe.height,fe.depth,Ge,He,fe.data)):t.texImage3D(35866,0,Ke,fe.width,fe.height,fe.depth,0,Ge,He,fe.data);else if(E.isData3DTexture)sn?(Zn&&t.texStorage3D(32879,J,Ke,fe.width,fe.height,fe.depth),t.texSubImage3D(32879,0,0,0,0,fe.width,fe.height,fe.depth,Ge,He,fe.data)):t.texImage3D(32879,0,Ke,fe.width,fe.height,fe.depth,0,Ge,He,fe.data);else if(E.isFramebufferTexture){if(Zn)if(sn)t.texStorage2D(3553,J,Ke,fe.width,fe.height);else{let de=fe.width,Se=fe.height;for(let ze=0;ze<J;ze++)t.texImage2D(3553,ze,Ke,de,Se,0,Ge,He,null),de>>=1,Se>>=1}}else if(_t.length>0&&Qe){sn&&Zn&&t.texStorage2D(3553,J,Ke,_t[0].width,_t[0].height);for(let de=0,Se=_t.length;de<Se;de++)Ze=_t[de],sn?t.texSubImage2D(3553,de,0,0,Ge,He,Ze):t.texImage2D(3553,de,Ke,Ge,He,Ze);E.generateMipmaps=!1}else sn?(Zn&&t.texStorage2D(3553,J,Ke,fe.width,fe.height),t.texSubImage2D(3553,0,0,0,Ge,He,fe)):t.texImage2D(3553,0,Ke,Ge,He,fe);T(E,Qe)&&k(ve),Be.__version=Ne.version,E.onUpdate&&E.onUpdate(E)}$.__version=E.version}function ge($,E,oe){if(E.image.length!==6)return;const ve=le($,E),we=E.source;t.bindTexture(34067,$.__webglTexture,33984+oe);const Ne=r.get(we);if(we.version!==Ne.__version||ve===!0){t.activeTexture(33984+oe),n.pixelStorei(37440,E.flipY),n.pixelStorei(37441,E.premultiplyAlpha),n.pixelStorei(3317,E.unpackAlignment),n.pixelStorei(37443,0);const Be=E.isCompressedTexture||E.image[0].isCompressedTexture,Le=E.image[0]&&E.image[0].isDataTexture,fe=[];for(let de=0;de<6;de++)!Be&&!Le?fe[de]=x(E.image[de],!1,!0,u):fe[de]=Le?E.image[de].image:E.image[de],fe[de]=bn(E,fe[de]);const Qe=fe[0],Ge=v(Qe)||o,He=i.convert(E.format,E.encoding),Ke=i.convert(E.type),Ze=S(E.internalFormat,He,Ke,E.encoding),_t=o&&E.isVideoTexture!==!0,sn=Ne.__version===void 0||ve===!0;let Zn=C(E,Qe,Ge);ue(34067,E,Ge);let J;if(Be){_t&&sn&&t.texStorage2D(34067,Zn,Ze,Qe.width,Qe.height);for(let de=0;de<6;de++){J=fe[de].mipmaps;for(let Se=0;Se<J.length;Se++){const ze=J[Se];E.format!==mi?He!==null?_t?t.compressedTexSubImage2D(34069+de,Se,0,0,ze.width,ze.height,He,ze.data):t.compressedTexImage2D(34069+de,Se,Ze,ze.width,ze.height,0,ze.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):_t?t.texSubImage2D(34069+de,Se,0,0,ze.width,ze.height,He,Ke,ze.data):t.texImage2D(34069+de,Se,Ze,ze.width,ze.height,0,He,Ke,ze.data)}}}else{J=E.mipmaps,_t&&sn&&(J.length>0&&Zn++,t.texStorage2D(34067,Zn,Ze,fe[0].width,fe[0].height));for(let de=0;de<6;de++)if(Le){_t?t.texSubImage2D(34069+de,0,0,0,fe[de].width,fe[de].height,He,Ke,fe[de].data):t.texImage2D(34069+de,0,Ze,fe[de].width,fe[de].height,0,He,Ke,fe[de].data);for(let Se=0;Se<J.length;Se++){const Oe=J[Se].image[de].image;_t?t.texSubImage2D(34069+de,Se+1,0,0,Oe.width,Oe.height,He,Ke,Oe.data):t.texImage2D(34069+de,Se+1,Ze,Oe.width,Oe.height,0,He,Ke,Oe.data)}}else{_t?t.texSubImage2D(34069+de,0,0,0,He,Ke,fe[de]):t.texImage2D(34069+de,0,Ze,He,Ke,fe[de]);for(let Se=0;Se<J.length;Se++){const ze=J[Se];_t?t.texSubImage2D(34069+de,Se+1,0,0,He,Ke,ze.image[de]):t.texImage2D(34069+de,Se+1,Ze,He,Ke,ze.image[de])}}}T(E,Ge)&&k(34067),Ne.__version=we.version,E.onUpdate&&E.onUpdate(E)}$.__version=E.version}function be($,E,oe,ve,we){const Ne=i.convert(oe.format,oe.encoding),Be=i.convert(oe.type),Le=S(oe.internalFormat,Ne,Be,oe.encoding);r.get(E).__hasExternalTextures||(we===32879||we===35866?t.texImage3D(we,0,Le,E.width,E.height,E.depth,0,Ne,Be,null):t.texImage2D(we,0,Le,E.width,E.height,0,Ne,Be,null)),t.bindFramebuffer(36160,$),kt(E)?h.framebufferTexture2DMultisampleEXT(36160,ve,we,r.get(oe).__webglTexture,0,et(E)):(we===3553||we>=34069&&we<=34074)&&n.framebufferTexture2D(36160,ve,we,r.get(oe).__webglTexture,0),t.bindFramebuffer(36160,null)}function Me($,E,oe){if(n.bindRenderbuffer(36161,$),E.depthBuffer&&!E.stencilBuffer){let ve=33189;if(oe||kt(E)){const we=E.depthTexture;we&&we.isDepthTexture&&(we.type===Pl?ve=36012:we.type===Dl&&(ve=33190));const Ne=et(E);kt(E)?h.renderbufferStorageMultisampleEXT(36161,Ne,ve,E.width,E.height):n.renderbufferStorageMultisample(36161,Ne,ve,E.width,E.height)}else n.renderbufferStorage(36161,ve,E.width,E.height);n.framebufferRenderbuffer(36160,36096,36161,$)}else if(E.depthBuffer&&E.stencilBuffer){const ve=et(E);oe&&kt(E)===!1?n.renderbufferStorageMultisample(36161,ve,35056,E.width,E.height):kt(E)?h.renderbufferStorageMultisampleEXT(36161,ve,35056,E.width,E.height):n.renderbufferStorage(36161,34041,E.width,E.height),n.framebufferRenderbuffer(36160,33306,36161,$)}else{const ve=E.isWebGLMultipleRenderTargets===!0?E.texture:[E.texture];for(let we=0;we<ve.length;we++){const Ne=ve[we],Be=i.convert(Ne.format,Ne.encoding),Le=i.convert(Ne.type),fe=S(Ne.internalFormat,Be,Le,Ne.encoding),Qe=et(E);oe&&kt(E)===!1?n.renderbufferStorageMultisample(36161,Qe,fe,E.width,E.height):kt(E)?h.renderbufferStorageMultisampleEXT(36161,Qe,fe,E.width,E.height):n.renderbufferStorage(36161,fe,E.width,E.height)}}n.bindRenderbuffer(36161,null)}function Re($,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,$),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!r.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),U(E.depthTexture,0);const ve=r.get(E.depthTexture).__webglTexture,we=et(E);if(E.depthTexture.format===Vl)kt(E)?h.framebufferTexture2DMultisampleEXT(36160,36096,3553,ve,0,we):n.framebufferTexture2D(36160,36096,3553,ve,0);else if(E.depthTexture.format===Yc)kt(E)?h.framebufferTexture2DMultisampleEXT(36160,33306,3553,ve,0,we):n.framebufferTexture2D(36160,33306,3553,ve,0);else throw new Error("Unknown depthTexture format")}function Xe($){const E=r.get($),oe=$.isWebGLCubeRenderTarget===!0;if($.depthTexture&&!E.__autoAllocateDepthBuffer){if(oe)throw new Error("target.depthTexture not supported in Cube render targets");Re(E.__webglFramebuffer,$)}else if(oe){E.__webglDepthbuffer=[];for(let ve=0;ve<6;ve++)t.bindFramebuffer(36160,E.__webglFramebuffer[ve]),E.__webglDepthbuffer[ve]=n.createRenderbuffer(),Me(E.__webglDepthbuffer[ve],$,!1)}else t.bindFramebuffer(36160,E.__webglFramebuffer),E.__webglDepthbuffer=n.createRenderbuffer(),Me(E.__webglDepthbuffer,$,!1);t.bindFramebuffer(36160,null)}function st($,E,oe){const ve=r.get($);E!==void 0&&be(ve.__webglFramebuffer,$,$.texture,36064,3553),oe!==void 0&&Xe($)}function ct($){const E=$.texture,oe=r.get($),ve=r.get(E);$.addEventListener("dispose",P),$.isWebGLMultipleRenderTargets!==!0&&(ve.__webglTexture===void 0&&(ve.__webglTexture=n.createTexture()),ve.__version=E.version,a.memory.textures++);const we=$.isWebGLCubeRenderTarget===!0,Ne=$.isWebGLMultipleRenderTargets===!0,Be=v($)||o;if(we){oe.__webglFramebuffer=[];for(let Le=0;Le<6;Le++)oe.__webglFramebuffer[Le]=n.createFramebuffer()}else{if(oe.__webglFramebuffer=n.createFramebuffer(),Ne)if(s.drawBuffers){const Le=$.texture;for(let fe=0,Qe=Le.length;fe<Qe;fe++){const Ge=r.get(Le[fe]);Ge.__webglTexture===void 0&&(Ge.__webglTexture=n.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&$.samples>0&&kt($)===!1){const Le=Ne?E:[E];oe.__webglMultisampledFramebuffer=n.createFramebuffer(),oe.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,oe.__webglMultisampledFramebuffer);for(let fe=0;fe<Le.length;fe++){const Qe=Le[fe];oe.__webglColorRenderbuffer[fe]=n.createRenderbuffer(),n.bindRenderbuffer(36161,oe.__webglColorRenderbuffer[fe]);const Ge=i.convert(Qe.format,Qe.encoding),He=i.convert(Qe.type),Ke=S(Qe.internalFormat,Ge,He,Qe.encoding,$.isXRRenderTarget===!0),Ze=et($);n.renderbufferStorageMultisample(36161,Ze,Ke,$.width,$.height),n.framebufferRenderbuffer(36160,36064+fe,36161,oe.__webglColorRenderbuffer[fe])}n.bindRenderbuffer(36161,null),$.depthBuffer&&(oe.__webglDepthRenderbuffer=n.createRenderbuffer(),Me(oe.__webglDepthRenderbuffer,$,!0)),t.bindFramebuffer(36160,null)}}if(we){t.bindTexture(34067,ve.__webglTexture),ue(34067,E,Be);for(let Le=0;Le<6;Le++)be(oe.__webglFramebuffer[Le],$,E,36064,34069+Le);T(E,Be)&&k(34067),t.unbindTexture()}else if(Ne){const Le=$.texture;for(let fe=0,Qe=Le.length;fe<Qe;fe++){const Ge=Le[fe],He=r.get(Ge);t.bindTexture(3553,He.__webglTexture),ue(3553,Ge,Be),be(oe.__webglFramebuffer,$,Ge,36064+fe,3553),T(Ge,Be)&&k(3553)}t.unbindTexture()}else{let Le=3553;($.isWebGL3DRenderTarget||$.isWebGLArrayRenderTarget)&&(o?Le=$.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Le,ve.__webglTexture),ue(Le,E,Be),be(oe.__webglFramebuffer,$,E,36064,Le),T(E,Be)&&k(Le),t.unbindTexture()}$.depthBuffer&&Xe($)}function it($){const E=v($)||o,oe=$.isWebGLMultipleRenderTargets===!0?$.texture:[$.texture];for(let ve=0,we=oe.length;ve<we;ve++){const Ne=oe[ve];if(T(Ne,E)){const Be=$.isWebGLCubeRenderTarget?34067:3553,Le=r.get(Ne).__webglTexture;t.bindTexture(Be,Le),k(Be),t.unbindTexture()}}}function at($){if(o&&$.samples>0&&kt($)===!1){const E=$.isWebGLMultipleRenderTargets?$.texture:[$.texture],oe=$.width,ve=$.height;let we=16384;const Ne=[],Be=$.stencilBuffer?33306:36096,Le=r.get($),fe=$.isWebGLMultipleRenderTargets===!0;if(fe)for(let Qe=0;Qe<E.length;Qe++)t.bindFramebuffer(36160,Le.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+Qe,36161,null),t.bindFramebuffer(36160,Le.__webglFramebuffer),n.framebufferTexture2D(36009,36064+Qe,3553,null,0);t.bindFramebuffer(36008,Le.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Le.__webglFramebuffer);for(let Qe=0;Qe<E.length;Qe++){Ne.push(36064+Qe),$.depthBuffer&&Ne.push(Be);const Ge=Le.__ignoreDepthValues!==void 0?Le.__ignoreDepthValues:!1;if(Ge===!1&&($.depthBuffer&&(we|=256),$.stencilBuffer&&(we|=1024)),fe&&n.framebufferRenderbuffer(36008,36064,36161,Le.__webglColorRenderbuffer[Qe]),Ge===!0&&(n.invalidateFramebuffer(36008,[Be]),n.invalidateFramebuffer(36009,[Be])),fe){const He=r.get(E[Qe]).__webglTexture;n.framebufferTexture2D(36009,36064,3553,He,0)}n.blitFramebuffer(0,0,oe,ve,0,0,oe,ve,we,9728),p&&n.invalidateFramebuffer(36008,Ne)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),fe)for(let Qe=0;Qe<E.length;Qe++){t.bindFramebuffer(36160,Le.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+Qe,36161,Le.__webglColorRenderbuffer[Qe]);const Ge=r.get(E[Qe]).__webglTexture;t.bindFramebuffer(36160,Le.__webglFramebuffer),n.framebufferTexture2D(36009,36064+Qe,3553,Ge,0)}t.bindFramebuffer(36009,Le.__webglMultisampledFramebuffer)}}function et($){return Math.min(d,$.samples)}function kt($){const E=r.get($);return o&&$.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function $t($){const E=a.render.frame;g.get($)!==E&&(g.set($,E),$.update())}function bn($,E){const oe=$.encoding,ve=$.format,we=$.type;return $.isCompressedTexture===!0||$.isVideoTexture===!0||$.format===AS||oe!==eu&&(oe===Wt?o===!1?e.has("EXT_sRGB")===!0&&ve===mi?($.format=AS,$.minFilter=Xs,$.generateMipmaps=!1):E=ZA.sRGBToLinear(E):(ve!==mi||we!==ql)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",oe)),E}this.allocateTextureUnit=L,this.resetTextureUnits=K,this.setTexture2D=U,this.setTexture2DArray=ee,this.setTexture3D=G,this.setTextureCube=Q,this.rebindTextures=st,this.setupRenderTarget=ct,this.updateRenderTargetMipmap=it,this.updateMultisampleRenderTarget=at,this.setupDepthRenderbuffer=Xe,this.setupFrameBufferTexture=be,this.useMultisampledRTT=kt}function mK(n,e,t){const r=t.isWebGL2;function s(i,a=null){let o;if(i===ql)return 5121;if(i===e4)return 32819;if(i===t4)return 32820;if(i===QX)return 5120;if(i===JX)return 5122;if(i===VA)return 5123;if(i===qX)return 5124;if(i===Dl)return 5125;if(i===Pl)return 5126;if(i===Jp)return r?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(i===n4)return 6406;if(i===mi)return 6408;if(i===r4)return 6409;if(i===s4)return 6410;if(i===Vl)return 6402;if(i===Yc)return 34041;if(i===AS)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(i===i4)return 6403;if(i===a4)return 36244;if(i===o4)return 33319;if(i===l4)return 33320;if(i===u4)return 36249;if(i===v1||i===w1||i===S1||i===T1)if(a===Wt)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(i===v1)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===w1)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===S1)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===T1)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(i===v1)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===w1)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===S1)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===T1)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===fN||i===mN||i===gN||i===yN)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(i===fN)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===mN)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===gN)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===yN)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===c4)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===bN||i===xN)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(i===bN)return a===Wt?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(i===xN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===vN||i===wN||i===SN||i===TN||i===IN||i===kN||i===CN||i===_N||i===MN||i===NN||i===EN||i===RN||i===LN||i===AN)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(i===vN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===wN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===SN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===TN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===IN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===kN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===CN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===_N)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===MN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===NN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===EN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===RN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===LN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===AN)return a===Wt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===I1)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(i===I1)return a===Wt?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(i===d4||i===zN||i===DN||i===PN)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(i===I1)return o.COMPRESSED_RED_RGTC1_EXT;if(i===zN)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===DN)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===PN)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===zc?r?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):n[i]!==void 0?n[i]:null}return{convert:s}}class gK extends Us{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Ic extends kr{constructor(){super(),this.isGroup=!0,this.type="Group"}}const yK={type:"move"};class j1{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ic,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ic,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new te,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new te),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ic,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new te,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new te),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const r of e.hand.values())this._getHandJoint(t,r)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,r){let s=null,i=null,a=null;const o=this._targetRay,l=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(u&&e.hand){a=!0;for(const f of e.hand.values()){const m=t.getJointPose(f,r),y=this._getHandJoint(u,f);m!==null&&(y.matrix.fromArray(m.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.jointRadius=m.radius),y.visible=m!==null}const c=u.joints["index-finger-tip"],d=u.joints["thumb-tip"],h=c.position.distanceTo(d.position),p=.02,g=.005;u.inputState.pinching&&h>p+g?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&h<=p-g&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(i=t.getPose(e.gripSpace,r),i!==null&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(s=t.getPose(e.targetRaySpace,r),s===null&&i!==null&&(s=i),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(yK)))}return o!==null&&(o.visible=s!==null),l!==null&&(l.visible=i!==null),u!==null&&(u.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const r=new Ic;r.matrixAutoUpdate=!1,r.visible=!1,e.joints[t.jointName]=r,e.add(r)}return e.joints[t.jointName]}}class bK extends Ms{constructor(e,t,r,s,i,a,o,l,u,c){if(c=c!==void 0?c:Vl,c!==Vl&&c!==Yc)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");r===void 0&&c===Vl&&(r=Dl),r===void 0&&c===Yc&&(r=zc),super(null,s,i,a,o,l,c,r,u),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:Pr,this.minFilter=l!==void 0?l:Pr,this.flipY=!1,this.generateMipmaps=!1}}class xK extends md{constructor(e,t){super();const r=this;let s=null,i=1,a=null,o="local-floor",l=1,u=null,c=null,d=null,h=null,p=null,g=null;const f=t.getContextAttributes();let m=null,y=null;const b=[],x=[],v=new Set,w=new Map,T=new Us;T.layers.enable(1),T.viewport=new tr;const k=new Us;k.layers.enable(2),k.viewport=new tr;const S=[T,k],C=new gK;C.layers.enable(1),C.layers.enable(2);let _=null,z=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(G){let Q=b[G];return Q===void 0&&(Q=new j1,b[G]=Q),Q.getTargetRaySpace()},this.getControllerGrip=function(G){let Q=b[G];return Q===void 0&&(Q=new j1,b[G]=Q),Q.getGripSpace()},this.getHand=function(G){let Q=b[G];return Q===void 0&&(Q=new j1,b[G]=Q),Q.getHandSpace()};function P(G){const Q=x.indexOf(G.inputSource);if(Q===-1)return;const ne=b[Q];ne!==void 0&&ne.dispatchEvent({type:G.type,data:G.inputSource})}function R(){s.removeEventListener("select",P),s.removeEventListener("selectstart",P),s.removeEventListener("selectend",P),s.removeEventListener("squeeze",P),s.removeEventListener("squeezestart",P),s.removeEventListener("squeezeend",P),s.removeEventListener("end",R),s.removeEventListener("inputsourceschange",A);for(let G=0;G<b.length;G++){const Q=x[G];Q!==null&&(x[G]=null,b[G].disconnect(Q))}_=null,z=null,e.setRenderTarget(m),p=null,h=null,d=null,s=null,y=null,ee.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(G){i=G,r.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(G){o=G,r.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||a},this.setReferenceSpace=function(G){u=G},this.getBaseLayer=function(){return h!==null?h:p},this.getBinding=function(){return d},this.getFrame=function(){return g},this.getSession=function(){return s},this.setSession=async function(G){if(s=G,s!==null){if(m=e.getRenderTarget(),s.addEventListener("select",P),s.addEventListener("selectstart",P),s.addEventListener("selectend",P),s.addEventListener("squeeze",P),s.addEventListener("squeezestart",P),s.addEventListener("squeezeend",P),s.addEventListener("end",R),s.addEventListener("inputsourceschange",A),f.xrCompatible!==!0&&await t.makeXRCompatible(),s.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Q={antialias:s.renderState.layers===void 0?f.antialias:!0,alpha:f.alpha,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:i};p=new XRWebGLLayer(s,t,Q),s.updateRenderState({baseLayer:p}),y=new tu(p.framebufferWidth,p.framebufferHeight,{format:mi,type:ql,encoding:e.outputEncoding,stencilBuffer:f.stencil})}else{let Q=null,ne=null,X=null;f.depth&&(X=f.stencil?35056:33190,Q=f.stencil?Yc:Vl,ne=f.stencil?zc:Dl);const ue={colorFormat:32856,depthFormat:X,scaleFactor:i};d=new XRWebGLBinding(s,t),h=d.createProjectionLayer(ue),s.updateRenderState({layers:[h]}),y=new tu(h.textureWidth,h.textureHeight,{format:mi,type:ql,depthTexture:new bK(h.textureWidth,h.textureHeight,ne,void 0,void 0,void 0,void 0,void 0,void 0,Q),stencilBuffer:f.stencil,encoding:e.outputEncoding,samples:f.antialias?4:0});const le=e.properties.get(y);le.__ignoreDepthValues=h.ignoreDepthValues}y.isXRRenderTarget=!0,this.setFoveation(l),u=null,a=await s.requestReferenceSpace(o),ee.setContext(s),ee.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}};function A(G){for(let Q=0;Q<G.removed.length;Q++){const ne=G.removed[Q],X=x.indexOf(ne);X>=0&&(x[X]=null,b[X].disconnect(ne))}for(let Q=0;Q<G.added.length;Q++){const ne=G.added[Q];let X=x.indexOf(ne);if(X===-1){for(let le=0;le<b.length;le++)if(le>=x.length){x.push(ne),X=le;break}else if(x[le]===null){x[le]=ne,X=le;break}if(X===-1)break}const ue=b[X];ue&&ue.connect(ne)}}const F=new te,B=new te;function K(G,Q,ne){F.setFromMatrixPosition(Q.matrixWorld),B.setFromMatrixPosition(ne.matrixWorld);const X=F.distanceTo(B),ue=Q.projectionMatrix.elements,le=ne.projectionMatrix.elements,pe=ue[14]/(ue[10]-1),ge=ue[14]/(ue[10]+1),be=(ue[9]+1)/ue[5],Me=(ue[9]-1)/ue[5],Re=(ue[8]-1)/ue[0],Xe=(le[8]+1)/le[0],st=pe*Re,ct=pe*Xe,it=X/(-Re+Xe),at=it*-Re;Q.matrixWorld.decompose(G.position,G.quaternion,G.scale),G.translateX(at),G.translateZ(it),G.matrixWorld.compose(G.position,G.quaternion,G.scale),G.matrixWorldInverse.copy(G.matrixWorld).invert();const et=pe+it,kt=ge+it,$t=st-at,bn=ct+(X-at),$=be*ge/kt*et,E=Me*ge/kt*et;G.projectionMatrix.makePerspective($t,bn,$,E,et,kt)}function L(G,Q){Q===null?G.matrixWorld.copy(G.matrix):G.matrixWorld.multiplyMatrices(Q.matrixWorld,G.matrix),G.matrixWorldInverse.copy(G.matrixWorld).invert()}this.updateCamera=function(G){if(s===null)return;C.near=k.near=T.near=G.near,C.far=k.far=T.far=G.far,(_!==C.near||z!==C.far)&&(s.updateRenderState({depthNear:C.near,depthFar:C.far}),_=C.near,z=C.far);const Q=G.parent,ne=C.cameras;L(C,Q);for(let ue=0;ue<ne.length;ue++)L(ne[ue],Q);C.matrixWorld.decompose(C.position,C.quaternion,C.scale),G.matrix.copy(C.matrix),G.matrix.decompose(G.position,G.quaternion,G.scale);const X=G.children;for(let ue=0,le=X.length;ue<le;ue++)X[ue].updateMatrixWorld(!0);ne.length===2?K(C,T,k):C.projectionMatrix.copy(T.projectionMatrix)},this.getCamera=function(){return C},this.getFoveation=function(){if(!(h===null&&p===null))return l},this.setFoveation=function(G){l=G,h!==null&&(h.fixedFoveation=G),p!==null&&p.fixedFoveation!==void 0&&(p.fixedFoveation=G)},this.getPlanes=function(){return v};let O=null;function U(G,Q){if(c=Q.getViewerPose(u||a),g=Q,c!==null){const ne=c.views;p!==null&&(e.setRenderTargetFramebuffer(y,p.framebuffer),e.setRenderTarget(y));let X=!1;ne.length!==C.cameras.length&&(C.cameras.length=0,X=!0);for(let ue=0;ue<ne.length;ue++){const le=ne[ue];let pe=null;if(p!==null)pe=p.getViewport(le);else{const be=d.getViewSubImage(h,le);pe=be.viewport,ue===0&&(e.setRenderTargetTextures(y,be.colorTexture,h.ignoreDepthValues?void 0:be.depthStencilTexture),e.setRenderTarget(y))}let ge=S[ue];ge===void 0&&(ge=new Us,ge.layers.enable(ue),ge.viewport=new tr,S[ue]=ge),ge.matrix.fromArray(le.transform.matrix),ge.projectionMatrix.fromArray(le.projectionMatrix),ge.viewport.set(pe.x,pe.y,pe.width,pe.height),ue===0&&C.matrix.copy(ge.matrix),X===!0&&C.cameras.push(ge)}}for(let ne=0;ne<b.length;ne++){const X=x[ne],ue=b[ne];X!==null&&ue!==void 0&&ue.update(X,Q,u||a)}if(O&&O(G,Q),Q.detectedPlanes){r.dispatchEvent({type:"planesdetected",data:Q.detectedPlanes});let ne=null;for(const X of v)Q.detectedPlanes.has(X)||(ne===null&&(ne=[]),ne.push(X));if(ne!==null)for(const X of ne)v.delete(X),w.delete(X),r.dispatchEvent({type:"planeremoved",data:X});for(const X of Q.detectedPlanes)if(!v.has(X))v.add(X),w.set(X,Q.lastChangedTime),r.dispatchEvent({type:"planeadded",data:X});else{const ue=w.get(X);X.lastChangedTime>ue&&(w.set(X,X.lastChangedTime),r.dispatchEvent({type:"planechanged",data:X}))}}g=null}const ee=new rz;ee.setAnimationLoop(U),this.setAnimationLoop=function(G){O=G},this.dispose=function(){}}}function vK(n,e){function t(f,m){m.color.getRGB(f.fogColor.value,ez(n)),m.isFog?(f.fogNear.value=m.near,f.fogFar.value=m.far):m.isFogExp2&&(f.fogDensity.value=m.density)}function r(f,m,y,b,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?s(f,m):m.isMeshToonMaterial?(s(f,m),c(f,m)):m.isMeshPhongMaterial?(s(f,m),u(f,m)):m.isMeshStandardMaterial?(s(f,m),d(f,m),m.isMeshPhysicalMaterial&&h(f,m,x)):m.isMeshMatcapMaterial?(s(f,m),p(f,m)):m.isMeshDepthMaterial?s(f,m):m.isMeshDistanceMaterial?(s(f,m),g(f,m)):m.isMeshNormalMaterial?s(f,m):m.isLineBasicMaterial?(i(f,m),m.isLineDashedMaterial&&a(f,m)):m.isPointsMaterial?o(f,m,y,b):m.isSpriteMaterial?l(f,m):m.isShadowMaterial?(f.color.value.copy(m.color),f.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function s(f,m){f.opacity.value=m.opacity,m.color&&f.diffuse.value.copy(m.color),m.emissive&&f.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(f.map.value=m.map),m.alphaMap&&(f.alphaMap.value=m.alphaMap),m.bumpMap&&(f.bumpMap.value=m.bumpMap,f.bumpScale.value=m.bumpScale,m.side===_s&&(f.bumpScale.value*=-1)),m.displacementMap&&(f.displacementMap.value=m.displacementMap,f.displacementScale.value=m.displacementScale,f.displacementBias.value=m.displacementBias),m.emissiveMap&&(f.emissiveMap.value=m.emissiveMap),m.normalMap&&(f.normalMap.value=m.normalMap,f.normalScale.value.copy(m.normalScale),m.side===_s&&f.normalScale.value.negate()),m.specularMap&&(f.specularMap.value=m.specularMap),m.alphaTest>0&&(f.alphaTest.value=m.alphaTest);const y=e.get(m).envMap;if(y&&(f.envMap.value=y,f.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,f.reflectivity.value=m.reflectivity,f.ior.value=m.ior,f.refractionRatio.value=m.refractionRatio),m.lightMap){f.lightMap.value=m.lightMap;const v=n.useLegacyLights===!0?Math.PI:1;f.lightMapIntensity.value=m.lightMapIntensity*v}m.aoMap&&(f.aoMap.value=m.aoMap,f.aoMapIntensity.value=m.aoMapIntensity);let b;m.map?b=m.map:m.specularMap?b=m.specularMap:m.displacementMap?b=m.displacementMap:m.normalMap?b=m.normalMap:m.bumpMap?b=m.bumpMap:m.roughnessMap?b=m.roughnessMap:m.metalnessMap?b=m.metalnessMap:m.alphaMap?b=m.alphaMap:m.emissiveMap?b=m.emissiveMap:m.clearcoatMap?b=m.clearcoatMap:m.clearcoatNormalMap?b=m.clearcoatNormalMap:m.clearcoatRoughnessMap?b=m.clearcoatRoughnessMap:m.iridescenceMap?b=m.iridescenceMap:m.iridescenceThicknessMap?b=m.iridescenceThicknessMap:m.specularIntensityMap?b=m.specularIntensityMap:m.specularColorMap?b=m.specularColorMap:m.transmissionMap?b=m.transmissionMap:m.thicknessMap?b=m.thicknessMap:m.sheenColorMap?b=m.sheenColorMap:m.sheenRoughnessMap&&(b=m.sheenRoughnessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),f.uvTransform.value.copy(b.matrix));let x;m.aoMap?x=m.aoMap:m.lightMap&&(x=m.lightMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),f.uv2Transform.value.copy(x.matrix))}function i(f,m){f.diffuse.value.copy(m.color),f.opacity.value=m.opacity}function a(f,m){f.dashSize.value=m.dashSize,f.totalSize.value=m.dashSize+m.gapSize,f.scale.value=m.scale}function o(f,m,y,b){f.diffuse.value.copy(m.color),f.opacity.value=m.opacity,f.size.value=m.size*y,f.scale.value=b*.5,m.map&&(f.map.value=m.map),m.alphaMap&&(f.alphaMap.value=m.alphaMap),m.alphaTest>0&&(f.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),f.uvTransform.value.copy(x.matrix))}function l(f,m){f.diffuse.value.copy(m.color),f.opacity.value=m.opacity,f.rotation.value=m.rotation,m.map&&(f.map.value=m.map),m.alphaMap&&(f.alphaMap.value=m.alphaMap),m.alphaTest>0&&(f.alphaTest.value=m.alphaTest);let y;m.map?y=m.map:m.alphaMap&&(y=m.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),f.uvTransform.value.copy(y.matrix))}function u(f,m){f.specular.value.copy(m.specular),f.shininess.value=Math.max(m.shininess,1e-4)}function c(f,m){m.gradientMap&&(f.gradientMap.value=m.gradientMap)}function d(f,m){f.roughness.value=m.roughness,f.metalness.value=m.metalness,m.roughnessMap&&(f.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(f.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(f.envMapIntensity.value=m.envMapIntensity)}function h(f,m,y){f.ior.value=m.ior,m.sheen>0&&(f.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),f.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(f.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(f.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(f.clearcoat.value=m.clearcoat,f.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(f.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(f.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),f.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===_s&&f.clearcoatNormalScale.value.negate())),m.iridescence>0&&(f.iridescence.value=m.iridescence,f.iridescenceIOR.value=m.iridescenceIOR,f.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],f.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(f.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(f.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(f.transmission.value=m.transmission,f.transmissionSamplerMap.value=y.texture,f.transmissionSamplerSize.value.set(y.width,y.height),m.transmissionMap&&(f.transmissionMap.value=m.transmissionMap),f.thickness.value=m.thickness,m.thicknessMap&&(f.thicknessMap.value=m.thicknessMap),f.attenuationDistance.value=m.attenuationDistance,f.attenuationColor.value.copy(m.attenuationColor)),f.specularIntensity.value=m.specularIntensity,f.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(f.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(f.specularColorMap.value=m.specularColorMap)}function p(f,m){m.matcap&&(f.matcap.value=m.matcap)}function g(f,m){f.referencePosition.value.copy(m.referencePosition),f.nearDistance.value=m.nearDistance,f.farDistance.value=m.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:r}}function wK(n,e,t,r){let s={},i={},a=[];const o=t.isWebGL2?n.getParameter(35375):0;function l(b,x){const v=x.program;r.uniformBlockBinding(b,v)}function u(b,x){let v=s[b.id];v===void 0&&(g(b),v=c(b),s[b.id]=v,b.addEventListener("dispose",m));const w=x.program;r.updateUBOMapping(b,w);const T=e.render.frame;i[b.id]!==T&&(h(b),i[b.id]=T)}function c(b){const x=d();b.__bindingPointIndex=x;const v=n.createBuffer(),w=b.__size,T=b.usage;return n.bindBuffer(35345,v),n.bufferData(35345,w,T),n.bindBuffer(35345,null),n.bindBufferBase(35345,x,v),v}function d(){for(let b=0;b<o;b++)if(a.indexOf(b)===-1)return a.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function h(b){const x=s[b.id],v=b.uniforms,w=b.__cache;n.bindBuffer(35345,x);for(let T=0,k=v.length;T<k;T++){const S=v[T];if(p(S,T,w)===!0){const C=S.__offset,_=Array.isArray(S.value)?S.value:[S.value];let z=0;for(let P=0;P<_.length;P++){const R=_[P],A=f(R);typeof R=="number"?(S.__data[0]=R,n.bufferSubData(35345,C+z,S.__data)):R.isMatrix3?(S.__data[0]=R.elements[0],S.__data[1]=R.elements[1],S.__data[2]=R.elements[2],S.__data[3]=R.elements[0],S.__data[4]=R.elements[3],S.__data[5]=R.elements[4],S.__data[6]=R.elements[5],S.__data[7]=R.elements[0],S.__data[8]=R.elements[6],S.__data[9]=R.elements[7],S.__data[10]=R.elements[8],S.__data[11]=R.elements[0]):(R.toArray(S.__data,z),z+=A.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(35345,C,S.__data)}}n.bindBuffer(35345,null)}function p(b,x,v){const w=b.value;if(v[x]===void 0){if(typeof w=="number")v[x]=w;else{const T=Array.isArray(w)?w:[w],k=[];for(let S=0;S<T.length;S++)k.push(T[S].clone());v[x]=k}return!0}else if(typeof w=="number"){if(v[x]!==w)return v[x]=w,!0}else{const T=Array.isArray(v[x])?v[x]:[v[x]],k=Array.isArray(w)?w:[w];for(let S=0;S<T.length;S++){const C=T[S];if(C.equals(k[S])===!1)return C.copy(k[S]),!0}}return!1}function g(b){const x=b.uniforms;let v=0;const w=16;let T=0;for(let k=0,S=x.length;k<S;k++){const C=x[k],_={boundary:0,storage:0},z=Array.isArray(C.value)?C.value:[C.value];for(let P=0,R=z.length;P<R;P++){const A=z[P],F=f(A);_.boundary+=F.boundary,_.storage+=F.storage}if(C.__data=new Float32Array(_.storage/Float32Array.BYTES_PER_ELEMENT),C.__offset=v,k>0){T=v%w;const P=w-T;T!==0&&P-_.boundary<0&&(v+=w-T,C.__offset=v)}v+=_.storage}return T=v%w,T>0&&(v+=w-T),b.__size=v,b.__cache={},this}function f(b){const x={boundary:0,storage:0};return typeof b=="number"?(x.boundary=4,x.storage=4):b.isVector2?(x.boundary=8,x.storage=8):b.isVector3||b.isColor?(x.boundary=16,x.storage=12):b.isVector4?(x.boundary=16,x.storage=16):b.isMatrix3?(x.boundary=48,x.storage=48):b.isMatrix4?(x.boundary=64,x.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),x}function m(b){const x=b.target;x.removeEventListener("dispose",m);const v=a.indexOf(x.__bindingPointIndex);a.splice(v,1),n.deleteBuffer(s[x.id]),delete s[x.id],delete i[x.id]}function y(){for(const b in s)n.deleteBuffer(s[b]);a=[],s={},i={}}return{bind:l,update:u,dispose:y}}function SK(){const n=b0("canvas");return n.style.display="block",n}function DT(n={}){this.isWebGLRenderer=!0;const e=n.canvas!==void 0?n.canvas:SK(),t=n.context!==void 0?n.context:null,r=n.depth!==void 0?n.depth:!0,s=n.stencil!==void 0?n.stencil:!0,i=n.antialias!==void 0?n.antialias:!1,a=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,o=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,l=n.powerPreference!==void 0?n.powerPreference:"default",u=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let c;t!==null?c=t.getContextAttributes().alpha:c=n.alpha!==void 0?n.alpha:!1;let d=null,h=null;const p=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=eu,this.useLegacyLights=!0,this.toneMapping=Ea,this.toneMappingExposure=1;const f=this;let m=!1,y=0,b=0,x=null,v=-1,w=null;const T=new tr,k=new tr;let S=null,C=e.width,_=e.height,z=1,P=null,R=null;const A=new tr(0,0,C,_),F=new tr(0,0,C,_);let B=!1;const K=new LT;let L=!1,O=!1,U=null;const ee=new Bt,G=new te,Q={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ne(){return x===null?z:1}let X=t;function ue(D,se){for(let ce=0;ce<D.length;ce++){const re=D[ce],he=e.getContext(re,se);if(he!==null)return he}return null}try{const D={alpha:!0,depth:r,stencil:s,antialias:i,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${ET}`),e.addEventListener("webglcontextlost",He,!1),e.addEventListener("webglcontextrestored",Ke,!1),e.addEventListener("webglcontextcreationerror",Ze,!1),X===null){const se=["webgl2","webgl","experimental-webgl"];if(f.isWebGL1Renderer===!0&&se.shift(),X=ue(se,D),X===null)throw ue(se)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}X.getShaderPrecisionFormat===void 0&&(X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let le,pe,ge,be,Me,Re,Xe,st,ct,it,at,et,kt,$t,bn,$,E,oe,ve,we,Ne,Be,Le,fe;function Qe(){le=new AZ(X),pe=new _Z(X,le,n),le.init(pe),Be=new mK(X,le,pe),ge=new pK(X,le,pe),be=new PZ,Me=new qH,Re=new fK(X,le,ge,Me,pe,Be,be),Xe=new NZ(f),st=new LZ(f),ct=new U4(X,pe),Le=new kZ(X,le,ct,pe),it=new zZ(X,ct,be,Le),at=new OZ(X,it,ct,be),ve=new GZ(X,pe,Re),$=new MZ(Me),et=new JH(f,Xe,st,le,pe,Le,$),kt=new vK(f,Me),$t=new tK,bn=new oK(le,pe),oe=new IZ(f,Xe,st,ge,at,c,a),E=new hK(f,at,pe),fe=new wK(X,be,pe,ge),we=new CZ(X,le,be,pe),Ne=new DZ(X,le,be,pe),be.programs=et.programs,f.capabilities=pe,f.extensions=le,f.properties=Me,f.renderLists=$t,f.shadowMap=E,f.state=ge,f.info=be}Qe();const Ge=new xK(f,X);this.xr=Ge,this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){const D=le.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=le.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(D){D!==void 0&&(z=D,this.setSize(C,_,!1))},this.getSize=function(D){return D.set(C,_)},this.setSize=function(D,se,ce=!0){if(Ge.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=D,_=se,e.width=Math.floor(D*z),e.height=Math.floor(se*z),ce===!0&&(e.style.width=D+"px",e.style.height=se+"px"),this.setViewport(0,0,D,se)},this.getDrawingBufferSize=function(D){return D.set(C*z,_*z).floor()},this.setDrawingBufferSize=function(D,se,ce){C=D,_=se,z=ce,e.width=Math.floor(D*ce),e.height=Math.floor(se*ce),this.setViewport(0,0,D,se)},this.getCurrentViewport=function(D){return D.copy(T)},this.getViewport=function(D){return D.copy(A)},this.setViewport=function(D,se,ce,re){D.isVector4?A.set(D.x,D.y,D.z,D.w):A.set(D,se,ce,re),ge.viewport(T.copy(A).multiplyScalar(z).floor())},this.getScissor=function(D){return D.copy(F)},this.setScissor=function(D,se,ce,re){D.isVector4?F.set(D.x,D.y,D.z,D.w):F.set(D,se,ce,re),ge.scissor(k.copy(F).multiplyScalar(z).floor())},this.getScissorTest=function(){return B},this.setScissorTest=function(D){ge.setScissorTest(B=D)},this.setOpaqueSort=function(D){P=D},this.setTransparentSort=function(D){R=D},this.getClearColor=function(D){return D.copy(oe.getClearColor())},this.setClearColor=function(){oe.setClearColor.apply(oe,arguments)},this.getClearAlpha=function(){return oe.getClearAlpha()},this.setClearAlpha=function(){oe.setClearAlpha.apply(oe,arguments)},this.clear=function(D=!0,se=!0,ce=!0){let re=0;D&&(re|=16384),se&&(re|=256),ce&&(re|=1024),X.clear(re)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",He,!1),e.removeEventListener("webglcontextrestored",Ke,!1),e.removeEventListener("webglcontextcreationerror",Ze,!1),$t.dispose(),bn.dispose(),Me.dispose(),Xe.dispose(),st.dispose(),at.dispose(),Le.dispose(),fe.dispose(),et.dispose(),Ge.dispose(),Ge.removeEventListener("sessionstart",Se),Ge.removeEventListener("sessionend",ze),U&&(U.dispose(),U=null),Oe.stop()};function He(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Ke(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const D=be.autoReset,se=E.enabled,ce=E.autoUpdate,re=E.needsUpdate,he=E.type;Qe(),be.autoReset=D,E.enabled=se,E.autoUpdate=ce,E.needsUpdate=re,E.type=he}function Ze(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function _t(D){const se=D.target;se.removeEventListener("dispose",_t),sn(se)}function sn(D){Zn(D),Me.remove(D)}function Zn(D){const se=Me.get(D).programs;se!==void 0&&(se.forEach(function(ce){et.releaseProgram(ce)}),D.isShaderMaterial&&et.releaseShaderCache(D))}this.renderBufferDirect=function(D,se,ce,re,he,Ye){se===null&&(se=Q);const tt=he.isMesh&&he.matrixWorld.determinant()<0,pt=UW(D,se,ce,re,he);ge.setMaterial(re,tt);let mt=ce.index,Mt=1;re.wireframe===!0&&(mt=it.getWireframeAttribute(ce),Mt=2);const wt=ce.drawRange,St=ce.attributes.position;let Cn=wt.start*Mt,ms=(wt.start+wt.count)*Mt;Ye!==null&&(Cn=Math.max(Cn,Ye.start*Mt),ms=Math.min(ms,(Ye.start+Ye.count)*Mt)),mt!==null?(Cn=Math.max(Cn,0),ms=Math.min(ms,mt.count)):St!=null&&(Cn=Math.max(Cn,0),ms=Math.min(ms,St.count));const ha=ms-Cn;if(ha<0||ha===1/0)return;Le.setup(he,re,pt,ce,mt);let dl,_n=we;if(mt!==null&&(dl=ct.get(mt),_n=Ne,_n.setIndex(dl)),he.isMesh)re.wireframe===!0?(ge.setLineWidth(re.wireframeLinewidth*ne()),_n.setMode(1)):_n.setMode(4);else if(he.isLine){let Tt=re.linewidth;Tt===void 0&&(Tt=1),ge.setLineWidth(Tt*ne()),he.isLineSegments?_n.setMode(1):he.isLineLoop?_n.setMode(2):_n.setMode(3)}else he.isPoints?_n.setMode(0):he.isSprite&&_n.setMode(4);if(he.isInstancedMesh)_n.renderInstances(Cn,ha,he.count);else if(ce.isInstancedBufferGeometry){const Tt=ce._maxInstanceCount!==void 0?ce._maxInstanceCount:1/0,Bv=Math.min(ce.instanceCount,Tt);_n.renderInstances(Cn,ha,Bv)}else _n.render(Cn,ha)},this.compile=function(D,se){function ce(re,he,Ye){re.transparent===!0&&re.side===yo&&re.forceSinglePass===!1?(re.side=_s,re.needsUpdate=!0,$s(re,he,Ye),re.side=Fo,re.needsUpdate=!0,$s(re,he,Ye),re.side=yo):$s(re,he,Ye)}h=bn.get(D),h.init(),g.push(h),D.traverseVisible(function(re){re.isLight&&re.layers.test(se.layers)&&(h.pushLight(re),re.castShadow&&h.pushShadow(re))}),h.setupLights(f.useLegacyLights),D.traverse(function(re){const he=re.material;if(he)if(Array.isArray(he))for(let Ye=0;Ye<he.length;Ye++){const tt=he[Ye];ce(tt,D,re)}else ce(he,D,re)}),g.pop(),h=null};let J=null;function de(D){J&&J(D)}function Se(){Oe.stop()}function ze(){Oe.start()}const Oe=new rz;Oe.setAnimationLoop(de),typeof self<"u"&&Oe.setContext(self),this.setAnimationLoop=function(D){J=D,Ge.setAnimationLoop(D),D===null?Oe.stop():Oe.start()},Ge.addEventListener("sessionstart",Se),Ge.addEventListener("sessionend",ze),this.render=function(D,se){if(se!==void 0&&se.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),se.parent===null&&se.matrixWorldAutoUpdate===!0&&se.updateMatrixWorld(),Ge.enabled===!0&&Ge.isPresenting===!0&&(Ge.cameraAutoUpdate===!0&&Ge.updateCamera(se),se=Ge.getCamera()),D.isScene===!0&&D.onBeforeRender(f,D,se,x),h=bn.get(D,g.length),h.init(),g.push(h),ee.multiplyMatrices(se.projectionMatrix,se.matrixWorldInverse),K.setFromProjectionMatrix(ee),O=this.localClippingEnabled,L=$.init(this.clippingPlanes,O),d=$t.get(D,p.length),d.init(),p.push(d),Zt(D,se,0,f.sortObjects),d.finish(),f.sortObjects===!0&&d.sort(P,R),L===!0&&$.beginShadows();const ce=h.state.shadowsArray;if(E.render(ce,D,se),L===!0&&$.endShadows(),this.info.autoReset===!0&&this.info.reset(),oe.render(d,D),h.setupLights(f.useLegacyLights),se.isArrayCamera){const re=se.cameras;for(let he=0,Ye=re.length;he<Ye;he++){const tt=re[he];Hn(d,D,tt,tt.viewport)}}else Hn(d,D,se);x!==null&&(Re.updateMultisampleRenderTarget(x),Re.updateRenderTargetMipmap(x)),D.isScene===!0&&D.onAfterRender(f,D,se),Le.resetDefaultState(),v=-1,w=null,g.pop(),g.length>0?h=g[g.length-1]:h=null,p.pop(),p.length>0?d=p[p.length-1]:d=null};function Zt(D,se,ce,re){if(D.visible===!1)return;if(D.layers.test(se.layers)){if(D.isGroup)ce=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(se);else if(D.isLight)h.pushLight(D),D.castShadow&&h.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||K.intersectsSprite(D)){re&&G.setFromMatrixPosition(D.matrixWorld).applyMatrix4(ee);const tt=at.update(D),pt=D.material;pt.visible&&d.push(D,tt,pt,ce,G.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(D.isSkinnedMesh&&D.skeleton.frame!==be.render.frame&&(D.skeleton.update(),D.skeleton.frame=be.render.frame),!D.frustumCulled||K.intersectsObject(D))){re&&G.setFromMatrixPosition(D.matrixWorld).applyMatrix4(ee);const tt=at.update(D),pt=D.material;if(Array.isArray(pt)){const mt=tt.groups;for(let Mt=0,wt=mt.length;Mt<wt;Mt++){const St=mt[Mt],Cn=pt[St.materialIndex];Cn&&Cn.visible&&d.push(D,tt,Cn,ce,G.z,St)}}else pt.visible&&d.push(D,tt,pt,ce,G.z,null)}}const Ye=D.children;for(let tt=0,pt=Ye.length;tt<pt;tt++)Zt(Ye[tt],se,ce,re)}function Hn(D,se,ce,re){const he=D.opaque,Ye=D.transmissive,tt=D.transparent;h.setupLightsView(ce),L===!0&&$.setGlobalState(f.clippingPlanes,ce),Ye.length>0&&Rr(he,se,ce),re&&ge.viewport(T.copy(re)),he.length>0&&Li(he,se,ce),Ye.length>0&&Li(Ye,se,ce),tt.length>0&&Li(tt,se,ce),ge.buffers.depth.setTest(!0),ge.buffers.depth.setMask(!0),ge.buffers.color.setMask(!0),ge.setPolygonOffset(!1)}function Rr(D,se,ce){const re=pe.isWebGL2;U===null&&(U=new tu(1024,1024,{generateMipmaps:!0,type:le.has("EXT_color_buffer_half_float")?Jp:ql,minFilter:Qp,samples:re&&i===!0?4:0}));const he=f.getRenderTarget();f.setRenderTarget(U),f.clear();const Ye=f.toneMapping;f.toneMapping=Ea,Li(D,se,ce),f.toneMapping=Ye,Re.updateMultisampleRenderTarget(U),Re.updateRenderTargetMipmap(U),f.setRenderTarget(he)}function Li(D,se,ce){const re=se.isScene===!0?se.overrideMaterial:null;for(let he=0,Ye=D.length;he<Ye;he++){const tt=D[he],pt=tt.object,mt=tt.geometry,Mt=re===null?tt.material:re,wt=tt.group;pt.layers.test(ce.layers)&&xn(pt,se,ce,mt,Mt,wt)}}function xn(D,se,ce,re,he,Ye){D.onBeforeRender(f,se,ce,re,he,Ye),D.modelViewMatrix.multiplyMatrices(ce.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),he.onBeforeRender(f,se,ce,re,D,Ye),he.transparent===!0&&he.side===yo&&he.forceSinglePass===!1?(he.side=_s,he.needsUpdate=!0,f.renderBufferDirect(ce,se,re,he,D,Ye),he.side=Fo,he.needsUpdate=!0,f.renderBufferDirect(ce,se,re,he,D,Ye),he.side=yo):f.renderBufferDirect(ce,se,re,he,D,Ye),D.onAfterRender(f,se,ce,re,he,Ye)}function $s(D,se,ce){se.isScene!==!0&&(se=Q);const re=Me.get(D),he=h.state.lights,Ye=h.state.shadowsArray,tt=he.state.version,pt=et.getParameters(D,he.state,Ye,se,ce),mt=et.getProgramCacheKey(pt);let Mt=re.programs;re.environment=D.isMeshStandardMaterial?se.environment:null,re.fog=se.fog,re.envMap=(D.isMeshStandardMaterial?st:Xe).get(D.envMap||re.environment),Mt===void 0&&(D.addEventListener("dispose",_t),Mt=new Map,re.programs=Mt);let wt=Mt.get(mt);if(wt!==void 0){if(re.currentProgram===wt&&re.lightsStateVersion===tt)return Ai(D,pt),wt}else pt.uniforms=et.getUniforms(D),D.onBuild(ce,pt,f),D.onBeforeCompile(pt,f),wt=et.acquireProgram(pt,mt),Mt.set(mt,wt),re.uniforms=pt.uniforms;const St=re.uniforms;(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(St.clippingPlanes=$.uniform),Ai(D,pt),re.needsLights=HW(D),re.lightsStateVersion=tt,re.needsLights&&(St.ambientLightColor.value=he.state.ambient,St.lightProbe.value=he.state.probe,St.directionalLights.value=he.state.directional,St.directionalLightShadows.value=he.state.directionalShadow,St.spotLights.value=he.state.spot,St.spotLightShadows.value=he.state.spotShadow,St.rectAreaLights.value=he.state.rectArea,St.ltc_1.value=he.state.rectAreaLTC1,St.ltc_2.value=he.state.rectAreaLTC2,St.pointLights.value=he.state.point,St.pointLightShadows.value=he.state.pointShadow,St.hemisphereLights.value=he.state.hemi,St.directionalShadowMap.value=he.state.directionalShadowMap,St.directionalShadowMatrix.value=he.state.directionalShadowMatrix,St.spotShadowMap.value=he.state.spotShadowMap,St.spotLightMatrix.value=he.state.spotLightMatrix,St.spotLightMap.value=he.state.spotLightMap,St.pointShadowMap.value=he.state.pointShadowMap,St.pointShadowMatrix.value=he.state.pointShadowMatrix);const Cn=wt.getUniforms(),ms=$y.seqWithValue(Cn.seq,St);return re.currentProgram=wt,re.uniformsList=ms,wt}function Ai(D,se){const ce=Me.get(D);ce.outputEncoding=se.outputEncoding,ce.instancing=se.instancing,ce.skinning=se.skinning,ce.morphTargets=se.morphTargets,ce.morphNormals=se.morphNormals,ce.morphColors=se.morphColors,ce.morphTargetsCount=se.morphTargetsCount,ce.numClippingPlanes=se.numClippingPlanes,ce.numIntersection=se.numClipIntersection,ce.vertexAlphas=se.vertexAlphas,ce.vertexTangents=se.vertexTangents,ce.toneMapping=se.toneMapping}function UW(D,se,ce,re,he){se.isScene!==!0&&(se=Q),Re.resetTextureUnits();const Ye=se.fog,tt=re.isMeshStandardMaterial?se.environment:null,pt=x===null?f.outputEncoding:x.isXRRenderTarget===!0?x.texture.encoding:eu,mt=(re.isMeshStandardMaterial?st:Xe).get(re.envMap||tt),Mt=re.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,wt=!!re.normalMap&&!!ce.attributes.tangent,St=!!ce.morphAttributes.position,Cn=!!ce.morphAttributes.normal,ms=!!ce.morphAttributes.color,ha=re.toneMapped?f.toneMapping:Ea,dl=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,_n=dl!==void 0?dl.length:0,Tt=Me.get(re),Bv=h.state.lights;if(L===!0&&(O===!0||D!==w)){const gs=D===w&&re.id===v;$.setState(re,D,gs)}let Kn=!1;re.version===Tt.__version?(Tt.needsLights&&Tt.lightsStateVersion!==Bv.state.version||Tt.outputEncoding!==pt||he.isInstancedMesh&&Tt.instancing===!1||!he.isInstancedMesh&&Tt.instancing===!0||he.isSkinnedMesh&&Tt.skinning===!1||!he.isSkinnedMesh&&Tt.skinning===!0||Tt.envMap!==mt||re.fog===!0&&Tt.fog!==Ye||Tt.numClippingPlanes!==void 0&&(Tt.numClippingPlanes!==$.numPlanes||Tt.numIntersection!==$.numIntersection)||Tt.vertexAlphas!==Mt||Tt.vertexTangents!==wt||Tt.morphTargets!==St||Tt.morphNormals!==Cn||Tt.morphColors!==ms||Tt.toneMapping!==ha||pe.isWebGL2===!0&&Tt.morphTargetsCount!==_n)&&(Kn=!0):(Kn=!0,Tt.__version=re.version);let hl=Tt.currentProgram;Kn===!0&&(hl=$s(re,se,he));let j_=!1,Ph=!1,Xv=!1;const Lr=hl.getUniforms(),pl=Tt.uniforms;if(ge.useProgram(hl.program)&&(j_=!0,Ph=!0,Xv=!0),re.id!==v&&(v=re.id,Ph=!0),j_||w!==D){if(Lr.setValue(X,"projectionMatrix",D.projectionMatrix),pe.logarithmicDepthBuffer&&Lr.setValue(X,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),w!==D&&(w=D,Ph=!0,Xv=!0),re.isShaderMaterial||re.isMeshPhongMaterial||re.isMeshToonMaterial||re.isMeshStandardMaterial||re.envMap){const gs=Lr.map.cameraPosition;gs!==void 0&&gs.setValue(X,G.setFromMatrixPosition(D.matrixWorld))}(re.isMeshPhongMaterial||re.isMeshToonMaterial||re.isMeshLambertMaterial||re.isMeshBasicMaterial||re.isMeshStandardMaterial||re.isShaderMaterial)&&Lr.setValue(X,"isOrthographic",D.isOrthographicCamera===!0),(re.isMeshPhongMaterial||re.isMeshToonMaterial||re.isMeshLambertMaterial||re.isMeshBasicMaterial||re.isMeshStandardMaterial||re.isShaderMaterial||re.isShadowMaterial||he.isSkinnedMesh)&&Lr.setValue(X,"viewMatrix",D.matrixWorldInverse)}if(he.isSkinnedMesh){Lr.setOptional(X,he,"bindMatrix"),Lr.setOptional(X,he,"bindMatrixInverse");const gs=he.skeleton;gs&&(pe.floatVertexTextures?(gs.boneTexture===null&&gs.computeBoneTexture(),Lr.setValue(X,"boneTexture",gs.boneTexture,Re),Lr.setValue(X,"boneTextureSize",gs.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Uv=ce.morphAttributes;if((Uv.position!==void 0||Uv.normal!==void 0||Uv.color!==void 0&&pe.isWebGL2===!0)&&ve.update(he,ce,hl),(Ph||Tt.receiveShadow!==he.receiveShadow)&&(Tt.receiveShadow=he.receiveShadow,Lr.setValue(X,"receiveShadow",he.receiveShadow)),re.isMeshGouraudMaterial&&re.envMap!==null&&(pl.envMap.value=mt,pl.flipEnvMap.value=mt.isCubeTexture&&mt.isRenderTargetTexture===!1?-1:1),Ph&&(Lr.setValue(X,"toneMappingExposure",f.toneMappingExposure),Tt.needsLights&&ZW(pl,Xv),Ye&&re.fog===!0&&kt.refreshFogUniforms(pl,Ye),kt.refreshMaterialUniforms(pl,re,z,_,U),$y.upload(X,Tt.uniformsList,pl,Re)),re.isShaderMaterial&&re.uniformsNeedUpdate===!0&&($y.upload(X,Tt.uniformsList,pl,Re),re.uniformsNeedUpdate=!1),re.isSpriteMaterial&&Lr.setValue(X,"center",he.center),Lr.setValue(X,"modelViewMatrix",he.modelViewMatrix),Lr.setValue(X,"normalMatrix",he.normalMatrix),Lr.setValue(X,"modelMatrix",he.matrixWorld),re.isShaderMaterial||re.isRawShaderMaterial){const gs=re.uniformsGroups;for(let Zv=0,KW=gs.length;Zv<KW;Zv++)if(pe.isWebGL2){const Q_=gs[Zv];fe.update(Q_,hl),fe.bind(Q_,hl)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return hl}function ZW(D,se){D.ambientLightColor.needsUpdate=se,D.lightProbe.needsUpdate=se,D.directionalLights.needsUpdate=se,D.directionalLightShadows.needsUpdate=se,D.pointLights.needsUpdate=se,D.pointLightShadows.needsUpdate=se,D.spotLights.needsUpdate=se,D.spotLightShadows.needsUpdate=se,D.rectAreaLights.needsUpdate=se,D.hemisphereLights.needsUpdate=se}function HW(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(D,se,ce){Me.get(D.texture).__webglTexture=se,Me.get(D.depthTexture).__webglTexture=ce;const re=Me.get(D);re.__hasExternalTextures=!0,re.__hasExternalTextures&&(re.__autoAllocateDepthBuffer=ce===void 0,re.__autoAllocateDepthBuffer||le.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),re.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(D,se){const ce=Me.get(D);ce.__webglFramebuffer=se,ce.__useDefaultFramebuffer=se===void 0},this.setRenderTarget=function(D,se=0,ce=0){x=D,y=se,b=ce;let re=!0,he=null,Ye=!1,tt=!1;if(D){const mt=Me.get(D);mt.__useDefaultFramebuffer!==void 0?(ge.bindFramebuffer(36160,null),re=!1):mt.__webglFramebuffer===void 0?Re.setupRenderTarget(D):mt.__hasExternalTextures&&Re.rebindTextures(D,Me.get(D.texture).__webglTexture,Me.get(D.depthTexture).__webglTexture);const Mt=D.texture;(Mt.isData3DTexture||Mt.isDataArrayTexture||Mt.isCompressedArrayTexture)&&(tt=!0);const wt=Me.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(he=wt[se],Ye=!0):pe.isWebGL2&&D.samples>0&&Re.useMultisampledRTT(D)===!1?he=Me.get(D).__webglMultisampledFramebuffer:he=wt,T.copy(D.viewport),k.copy(D.scissor),S=D.scissorTest}else T.copy(A).multiplyScalar(z).floor(),k.copy(F).multiplyScalar(z).floor(),S=B;if(ge.bindFramebuffer(36160,he)&&pe.drawBuffers&&re&&ge.drawBuffers(D,he),ge.viewport(T),ge.scissor(k),ge.setScissorTest(S),Ye){const mt=Me.get(D.texture);X.framebufferTexture2D(36160,36064,34069+se,mt.__webglTexture,ce)}else if(tt){const mt=Me.get(D.texture),Mt=se||0;X.framebufferTextureLayer(36160,36064,mt.__webglTexture,ce||0,Mt)}v=-1},this.readRenderTargetPixels=function(D,se,ce,re,he,Ye,tt){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let pt=Me.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&tt!==void 0&&(pt=pt[tt]),pt){ge.bindFramebuffer(36160,pt);try{const mt=D.texture,Mt=mt.format,wt=mt.type;if(Mt!==mi&&Be.convert(Mt)!==X.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const St=wt===Jp&&(le.has("EXT_color_buffer_half_float")||pe.isWebGL2&&le.has("EXT_color_buffer_float"));if(wt!==ql&&Be.convert(wt)!==X.getParameter(35738)&&!(wt===Pl&&(pe.isWebGL2||le.has("OES_texture_float")||le.has("WEBGL_color_buffer_float")))&&!St){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}se>=0&&se<=D.width-re&&ce>=0&&ce<=D.height-he&&X.readPixels(se,ce,re,he,Be.convert(Mt),Be.convert(wt),Ye)}finally{const mt=x!==null?Me.get(x).__webglFramebuffer:null;ge.bindFramebuffer(36160,mt)}}},this.copyFramebufferToTexture=function(D,se,ce=0){const re=Math.pow(2,-ce),he=Math.floor(se.image.width*re),Ye=Math.floor(se.image.height*re);Re.setTexture2D(se,0),X.copyTexSubImage2D(3553,ce,0,0,D.x,D.y,he,Ye),ge.unbindTexture()},this.copyTextureToTexture=function(D,se,ce,re=0){const he=se.image.width,Ye=se.image.height,tt=Be.convert(ce.format),pt=Be.convert(ce.type);Re.setTexture2D(ce,0),X.pixelStorei(37440,ce.flipY),X.pixelStorei(37441,ce.premultiplyAlpha),X.pixelStorei(3317,ce.unpackAlignment),se.isDataTexture?X.texSubImage2D(3553,re,D.x,D.y,he,Ye,tt,pt,se.image.data):se.isCompressedTexture?X.compressedTexSubImage2D(3553,re,D.x,D.y,se.mipmaps[0].width,se.mipmaps[0].height,tt,se.mipmaps[0].data):X.texSubImage2D(3553,re,D.x,D.y,tt,pt,se.image),re===0&&ce.generateMipmaps&&X.generateMipmap(3553),ge.unbindTexture()},this.copyTextureToTexture3D=function(D,se,ce,re,he=0){if(f.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ye=D.max.x-D.min.x+1,tt=D.max.y-D.min.y+1,pt=D.max.z-D.min.z+1,mt=Be.convert(re.format),Mt=Be.convert(re.type);let wt;if(re.isData3DTexture)Re.setTexture3D(re,0),wt=32879;else if(re.isDataArrayTexture)Re.setTexture2DArray(re,0),wt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}X.pixelStorei(37440,re.flipY),X.pixelStorei(37441,re.premultiplyAlpha),X.pixelStorei(3317,re.unpackAlignment);const St=X.getParameter(3314),Cn=X.getParameter(32878),ms=X.getParameter(3316),ha=X.getParameter(3315),dl=X.getParameter(32877),_n=ce.isCompressedTexture?ce.mipmaps[0]:ce.image;X.pixelStorei(3314,_n.width),X.pixelStorei(32878,_n.height),X.pixelStorei(3316,D.min.x),X.pixelStorei(3315,D.min.y),X.pixelStorei(32877,D.min.z),ce.isDataTexture||ce.isData3DTexture?X.texSubImage3D(wt,he,se.x,se.y,se.z,Ye,tt,pt,mt,Mt,_n.data):ce.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),X.compressedTexSubImage3D(wt,he,se.x,se.y,se.z,Ye,tt,pt,mt,_n.data)):X.texSubImage3D(wt,he,se.x,se.y,se.z,Ye,tt,pt,mt,Mt,_n),X.pixelStorei(3314,St),X.pixelStorei(32878,Cn),X.pixelStorei(3316,ms),X.pixelStorei(3315,ha),X.pixelStorei(32877,dl),he===0&&re.generateMipmaps&&X.generateMipmap(wt),ge.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?Re.setTextureCube(D,0):D.isData3DTexture?Re.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?Re.setTexture2DArray(D,0):Re.setTexture2D(D,0),ge.unbindTexture()},this.resetState=function(){y=0,b=0,x=null,ge.reset(),Le.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Object.defineProperties(DT.prototype,{physicallyCorrectLights:{get:function(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights},set:function(n){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!n}}});class TK extends DT{}TK.prototype.isWebGL1Renderer=!0;class vE extends kr{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class ua{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const r=this.getUtoTmapping(e);return this.getPoint(r,t)}getPoints(e=5){const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return t}getSpacedPoints(e=5){const t=[];for(let r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let r,s=this.getPoint(0),i=0;t.push(0);for(let a=1;a<=e;a++)r=this.getPoint(a/e),i+=r.distanceTo(s),t.push(i),s=r;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const r=this.getLengths();let s=0;const i=r.length;let a;t?a=t:a=e*r[i-1];let o=0,l=i-1,u;for(;o<=l;)if(s=Math.floor(o+(l-o)/2),u=r[s]-a,u<0)o=s+1;else if(u>0)l=s-1;else{l=s;break}if(s=l,r[s]===a)return s/(i-1);const c=r[s],h=r[s+1]-c,p=(a-c)/h;return(s+p)/(i-1)}getTangent(e,t){let s=e-1e-4,i=e+1e-4;s<0&&(s=0),i>1&&(i=1);const a=this.getPoint(s),o=this.getPoint(i),l=t||(a.isVector2?new Ue:new te);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){const r=this.getUtoTmapping(e);return this.getTangent(r,t)}computeFrenetFrames(e,t){const r=new te,s=[],i=[],a=[],o=new te,l=new Bt;for(let p=0;p<=e;p++){const g=p/e;s[p]=this.getTangentAt(g,new te)}i[0]=new te,a[0]=new te;let u=Number.MAX_VALUE;const c=Math.abs(s[0].x),d=Math.abs(s[0].y),h=Math.abs(s[0].z);c<=u&&(u=c,r.set(1,0,0)),d<=u&&(u=d,r.set(0,1,0)),h<=u&&r.set(0,0,1),o.crossVectors(s[0],r).normalize(),i[0].crossVectors(s[0],o),a[0].crossVectors(s[0],i[0]);for(let p=1;p<=e;p++){if(i[p]=i[p-1].clone(),a[p]=a[p-1].clone(),o.crossVectors(s[p-1],s[p]),o.length()>Number.EPSILON){o.normalize();const g=Math.acos(wr(s[p-1].dot(s[p]),-1,1));i[p].applyMatrix4(l.makeRotationAxis(o,g))}a[p].crossVectors(s[p],i[p])}if(t===!0){let p=Math.acos(wr(i[0].dot(i[e]),-1,1));p/=e,s[0].dot(o.crossVectors(i[0],i[e]))>0&&(p=-p);for(let g=1;g<=e;g++)i[g].applyMatrix4(l.makeRotationAxis(s[g],p*g)),a[g].crossVectors(s[g],i[g])}return{tangents:s,normals:i,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class PT extends ua{constructor(e=0,t=0,r=1,s=1,i=0,a=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=s,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t){const r=t||new Ue,s=Math.PI*2;let i=this.aEndAngle-this.aStartAngle;const a=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=s;for(;i>s;)i-=s;i<Number.EPSILON&&(a?i=0:i=s),this.aClockwise===!0&&!a&&(i===s?i=-s:i=i-s);const o=this.aStartAngle+e*i;let l=this.aX+this.xRadius*Math.cos(o),u=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const c=Math.cos(this.aRotation),d=Math.sin(this.aRotation),h=l-this.aX,p=u-this.aY;l=h*c-p*d+this.aX,u=h*d+p*c+this.aY}return r.set(l,u)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class IK extends PT{constructor(e,t,r,s,i,a){super(e,t,r,r,s,i,a),this.isArcCurve=!0,this.type="ArcCurve"}}function $T(){let n=0,e=0,t=0,r=0;function s(i,a,o,l){n=i,e=o,t=-3*i+3*a-2*o-l,r=2*i-2*a+o+l}return{initCatmullRom:function(i,a,o,l,u){s(a,o,u*(o-i),u*(l-a))},initNonuniformCatmullRom:function(i,a,o,l,u,c,d){let h=(a-i)/u-(o-i)/(u+c)+(o-a)/c,p=(o-a)/c-(l-a)/(c+d)+(l-o)/d;h*=c,p*=c,s(a,o,h,p)},calc:function(i){const a=i*i,o=a*i;return n+e*i+t*a+r*o}}}const ry=new te,Q1=new $T,J1=new $T,q1=new $T;class kK extends ua{constructor(e=[],t=!1,r="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=r,this.tension=s}getPoint(e,t=new te){const r=t,s=this.points,i=s.length,a=(i-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/i)+1)*i:l===0&&o===i-1&&(o=i-2,l=1);let u,c;this.closed||o>0?u=s[(o-1)%i]:(ry.subVectors(s[0],s[1]).add(s[0]),u=ry);const d=s[o%i],h=s[(o+1)%i];if(this.closed||o+2<i?c=s[(o+2)%i]:(ry.subVectors(s[i-1],s[i-2]).add(s[i-1]),c=ry),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let g=Math.pow(u.distanceToSquared(d),p),f=Math.pow(d.distanceToSquared(h),p),m=Math.pow(h.distanceToSquared(c),p);f<1e-4&&(f=1),g<1e-4&&(g=f),m<1e-4&&(m=f),Q1.initNonuniformCatmullRom(u.x,d.x,h.x,c.x,g,f,m),J1.initNonuniformCatmullRom(u.y,d.y,h.y,c.y,g,f,m),q1.initNonuniformCatmullRom(u.z,d.z,h.z,c.z,g,f,m)}else this.curveType==="catmullrom"&&(Q1.initCatmullRom(u.x,d.x,h.x,c.x,this.tension),J1.initCatmullRom(u.y,d.y,h.y,c.y,this.tension),q1.initCatmullRom(u.z,d.z,h.z,c.z,this.tension));return r.set(Q1.calc(l),J1.calc(l),q1.calc(l)),r}copy(e){super.copy(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const s=e.points[t];this.points.push(s.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,r=this.points.length;t<r;t++){const s=this.points[t];e.points.push(s.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const s=e.points[t];this.points.push(new te().fromArray(s))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function wE(n,e,t,r,s){const i=(r-e)*.5,a=(s-t)*.5,o=n*n,l=n*o;return(2*t-2*r+i+a)*l+(-3*t+3*r-2*i-a)*o+i*n+t}function CK(n,e){const t=1-n;return t*t*e}function _K(n,e){return 2*(1-n)*n*e}function MK(n,e){return n*n*e}function Ep(n,e,t,r){return CK(n,e)+_K(n,t)+MK(n,r)}function NK(n,e){const t=1-n;return t*t*t*e}function EK(n,e){const t=1-n;return 3*t*t*n*e}function RK(n,e){return 3*(1-n)*n*n*e}function LK(n,e){return n*n*n*e}function Rp(n,e,t,r,s){return NK(n,e)+EK(n,t)+RK(n,r)+LK(n,s)}class uz extends ua{constructor(e=new Ue,t=new Ue,r=new Ue,s=new Ue){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=r,this.v3=s}getPoint(e,t=new Ue){const r=t,s=this.v0,i=this.v1,a=this.v2,o=this.v3;return r.set(Rp(e,s.x,i.x,a.x,o.x),Rp(e,s.y,i.y,a.y,o.y)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class AK extends ua{constructor(e=new te,t=new te,r=new te,s=new te){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=r,this.v3=s}getPoint(e,t=new te){const r=t,s=this.v0,i=this.v1,a=this.v2,o=this.v3;return r.set(Rp(e,s.x,i.x,a.x,o.x),Rp(e,s.y,i.y,a.y,o.y),Rp(e,s.z,i.z,a.z,o.z)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class FT extends ua{constructor(e=new Ue,t=new Ue){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Ue){const r=t;return e===1?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Ue){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class zK extends ua{constructor(e=new te,t=new te){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new te){const r=t;return e===1?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new te){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cz extends ua{constructor(e=new Ue,t=new Ue,r=new Ue){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new Ue){const r=t,s=this.v0,i=this.v1,a=this.v2;return r.set(Ep(e,s.x,i.x,a.x),Ep(e,s.y,i.y,a.y)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class DK extends ua{constructor(e=new te,t=new te,r=new te){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new te){const r=t,s=this.v0,i=this.v1,a=this.v2;return r.set(Ep(e,s.x,i.x,a.x),Ep(e,s.y,i.y,a.y),Ep(e,s.z,i.z,a.z)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class dz extends ua{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Ue){const r=t,s=this.points,i=(s.length-1)*e,a=Math.floor(i),o=i-a,l=s[a===0?a:a-1],u=s[a],c=s[a>s.length-2?s.length-1:a+1],d=s[a>s.length-3?s.length-1:a+2];return r.set(wE(o,l.x,u.x,c.x,d.x),wE(o,l.y,u.y,c.y,d.y)),r}copy(e){super.copy(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const s=e.points[t];this.points.push(s.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,r=this.points.length;t<r;t++){const s=this.points[t];e.points.push(s.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const s=e.points[t];this.points.push(new Ue().fromArray(s))}return this}}var PK=Object.freeze({__proto__:null,ArcCurve:IK,CatmullRomCurve3:kK,CubicBezierCurve:uz,CubicBezierCurve3:AK,EllipseCurve:PT,LineCurve:FT,LineCurve3:zK,QuadraticBezierCurve:cz,QuadraticBezierCurve3:DK,SplineCurve:dz});class $K extends ua{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new FT(t,e))}getPoint(e,t){const r=e*this.getLength(),s=this.getCurveLengths();let i=0;for(;i<s.length;){if(s[i]>=r){const a=s[i]-r,o=this.curves[i],l=o.getLength(),u=l===0?0:1-a/l;return o.getPointAt(u,t)}i++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let r=0,s=this.curves.length;r<s;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let r;for(let s=0,i=this.curves;s<i.length;s++){const a=i[s],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let u=0;u<l.length;u++){const c=l[u];r&&r.equals(c)||(t.push(c),r=c)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const s=e.curves[t];this.curves.push(s.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,r=this.curves.length;t<r;t++){const s=this.curves[t];e.curves.push(s.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const s=e.curves[t];this.curves.push(new PK[s.type]().fromJSON(s))}return this}}class SE extends $K{constructor(e){super(),this.type="Path",this.currentPoint=new Ue,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const r=new FT(this.currentPoint.clone(),new Ue(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,r,s){const i=new cz(this.currentPoint.clone(),new Ue(e,t),new Ue(r,s));return this.curves.push(i),this.currentPoint.set(r,s),this}bezierCurveTo(e,t,r,s,i,a){const o=new uz(this.currentPoint.clone(),new Ue(e,t),new Ue(r,s),new Ue(i,a));return this.curves.push(o),this.currentPoint.set(i,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),r=new dz(t);return this.curves.push(r),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,r,s,i,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,r,s,i,a),this}absarc(e,t,r,s,i,a){return this.absellipse(e,t,r,r,s,i,a),this}ellipse(e,t,r,s,i,a,o,l){const u=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+u,t+c,r,s,i,a,o,l),this}absellipse(e,t,r,s,i,a,o,l){const u=new PT(e,t,r,s,i,a,o,l);if(this.curves.length>0){const d=u.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(u);const c=u.getPoint(1);return this.currentPoint.copy(c),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class hz extends SE{constructor(e){super(e),this.uuid=gd(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let r=0,s=this.holes.length;r<s;r++)t[r]=this.holes[r].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const s=e.holes[t];this.holes.push(s.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,r=this.holes.length;t<r;t++){const s=this.holes[t];e.holes.push(s.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const s=e.holes[t];this.holes.push(new SE().fromJSON(s))}return this}}const FK={triangulate:function(n,e,t=2){const r=e&&e.length,s=r?e[0]*t:n.length;let i=pz(n,0,s,t,!0);const a=[];if(!i||i.next===i.prev)return a;let o,l,u,c,d,h,p;if(r&&(i=BK(n,e,i,t)),n.length>80*t){o=u=n[0],l=c=n[1];for(let g=t;g<s;g+=t)d=n[g],h=n[g+1],d<o&&(o=d),h<l&&(l=h),d>u&&(u=d),h>c&&(c=h);p=Math.max(u-o,c-l),p=p!==0?32767/p:0}return ef(i,a,t,o,l,p,0),a}};function pz(n,e,t,r,s){let i,a;if(s===e9(n,e,t,r)>0)for(i=e;i<t;i+=r)a=TE(i,n[i],n[i+1],a);else for(i=t-r;i>=e;i-=r)a=TE(i,n[i],n[i+1],a);return a&&bb(a,a.next)&&(nf(a),a=a.next),a}function ru(n,e){if(!n)return n;e||(e=n);let t=n,r;do if(r=!1,!t.steiner&&(bb(t,t.next)||on(t.prev,t,t.next)===0)){if(nf(t),t=e=t.prev,t===t.next)break;r=!0}else t=t.next;while(r||t!==e);return e}function ef(n,e,t,r,s,i,a){if(!n)return;!a&&i&&KK(n,r,s,i);let o=n,l,u;for(;n.prev!==n.next;){if(l=n.prev,u=n.next,i?OK(n,r,s,i):GK(n)){e.push(l.i/t|0),e.push(n.i/t|0),e.push(u.i/t|0),nf(n),n=u.next,o=u.next;continue}if(n=u,n===o){a?a===1?(n=WK(ru(n),e,t),ef(n,e,t,r,s,i,2)):a===2&&VK(n,e,t,r,s,i):ef(ru(n),e,t,r,s,i,1);break}}}function GK(n){const e=n.prev,t=n,r=n.next;if(on(e,t,r)>=0)return!1;const s=e.x,i=t.x,a=r.x,o=e.y,l=t.y,u=r.y,c=s<i?s<a?s:a:i<a?i:a,d=o<l?o<u?o:u:l<u?l:u,h=s>i?s>a?s:a:i>a?i:a,p=o>l?o>u?o:u:l>u?l:u;let g=r.next;for(;g!==e;){if(g.x>=c&&g.x<=h&&g.y>=d&&g.y<=p&&kc(s,o,i,l,a,u,g.x,g.y)&&on(g.prev,g,g.next)>=0)return!1;g=g.next}return!0}function OK(n,e,t,r){const s=n.prev,i=n,a=n.next;if(on(s,i,a)>=0)return!1;const o=s.x,l=i.x,u=a.x,c=s.y,d=i.y,h=a.y,p=o<l?o<u?o:u:l<u?l:u,g=c<d?c<h?c:h:d<h?d:h,f=o>l?o>u?o:u:l>u?l:u,m=c>d?c>h?c:h:d>h?d:h,y=DS(p,g,e,t,r),b=DS(f,m,e,t,r);let x=n.prevZ,v=n.nextZ;for(;x&&x.z>=y&&v&&v.z<=b;){if(x.x>=p&&x.x<=f&&x.y>=g&&x.y<=m&&x!==s&&x!==a&&kc(o,c,l,d,u,h,x.x,x.y)&&on(x.prev,x,x.next)>=0||(x=x.prevZ,v.x>=p&&v.x<=f&&v.y>=g&&v.y<=m&&v!==s&&v!==a&&kc(o,c,l,d,u,h,v.x,v.y)&&on(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;x&&x.z>=y;){if(x.x>=p&&x.x<=f&&x.y>=g&&x.y<=m&&x!==s&&x!==a&&kc(o,c,l,d,u,h,x.x,x.y)&&on(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;v&&v.z<=b;){if(v.x>=p&&v.x<=f&&v.y>=g&&v.y<=m&&v!==s&&v!==a&&kc(o,c,l,d,u,h,v.x,v.y)&&on(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function WK(n,e,t){let r=n;do{const s=r.prev,i=r.next.next;!bb(s,i)&&fz(s,r,r.next,i)&&tf(s,i)&&tf(i,s)&&(e.push(s.i/t|0),e.push(r.i/t|0),e.push(i.i/t|0),nf(r),nf(r.next),r=n=i),r=r.next}while(r!==n);return ru(r)}function VK(n,e,t,r,s,i){let a=n;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&QK(a,o)){let l=mz(a,o);a=ru(a,a.next),l=ru(l,l.next),ef(a,e,t,r,s,i,0),ef(l,e,t,r,s,i,0);return}o=o.next}a=a.next}while(a!==n)}function BK(n,e,t,r){const s=[];let i,a,o,l,u;for(i=0,a=e.length;i<a;i++)o=e[i]*r,l=i<a-1?e[i+1]*r:n.length,u=pz(n,o,l,r,!1),u===u.next&&(u.steiner=!0),s.push(jK(u));for(s.sort(XK),i=0;i<s.length;i++)t=UK(s[i],t);return t}function XK(n,e){return n.x-e.x}function UK(n,e){const t=ZK(n,e);if(!t)return e;const r=mz(t,n);return ru(r,r.next),ru(t,t.next)}function ZK(n,e){let t=e,r=-1/0,s;const i=n.x,a=n.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const h=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(h<=i&&h>r&&(r=h,s=t.x<t.next.x?t:t.next,h===i))return s}t=t.next}while(t!==e);if(!s)return null;const o=s,l=s.x,u=s.y;let c=1/0,d;t=s;do i>=t.x&&t.x>=l&&i!==t.x&&kc(a<u?i:r,a,l,u,a<u?r:i,a,t.x,t.y)&&(d=Math.abs(a-t.y)/(i-t.x),tf(t,n)&&(d<c||d===c&&(t.x>s.x||t.x===s.x&&HK(s,t)))&&(s=t,c=d)),t=t.next;while(t!==o);return s}function HK(n,e){return on(n.prev,n,e.prev)<0&&on(e.next,n,n.next)<0}function KK(n,e,t,r){let s=n;do s.z===0&&(s.z=DS(s.x,s.y,e,t,r)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==n);s.prevZ.nextZ=null,s.prevZ=null,YK(s)}function YK(n){let e,t,r,s,i,a,o,l,u=1;do{for(t=n,n=null,i=null,a=0;t;){for(a++,r=t,o=0,e=0;e<u&&(o++,r=r.nextZ,!!r);e++);for(l=u;o>0||l>0&&r;)o!==0&&(l===0||!r||t.z<=r.z)?(s=t,t=t.nextZ,o--):(s=r,r=r.nextZ,l--),i?i.nextZ=s:n=s,s.prevZ=i,i=s;t=r}i.nextZ=null,u*=2}while(a>1);return n}function DS(n,e,t,r,s){return n=(n-t)*s|0,e=(e-r)*s|0,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function jK(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function kc(n,e,t,r,s,i,a,o){return(s-a)*(e-o)>=(n-a)*(i-o)&&(n-a)*(r-o)>=(t-a)*(e-o)&&(t-a)*(i-o)>=(s-a)*(r-o)}function QK(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!JK(n,e)&&(tf(n,e)&&tf(e,n)&&qK(n,e)&&(on(n.prev,n,e.prev)||on(n,e.prev,e))||bb(n,e)&&on(n.prev,n,n.next)>0&&on(e.prev,e,e.next)>0)}function on(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function bb(n,e){return n.x===e.x&&n.y===e.y}function fz(n,e,t,r){const s=iy(on(n,e,t)),i=iy(on(n,e,r)),a=iy(on(t,r,n)),o=iy(on(t,r,e));return!!(s!==i&&a!==o||s===0&&sy(n,t,e)||i===0&&sy(n,r,e)||a===0&&sy(t,n,r)||o===0&&sy(t,e,r))}function sy(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function iy(n){return n>0?1:n<0?-1:0}function JK(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&fz(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function tf(n,e){return on(n.prev,n,n.next)<0?on(n,e,n.next)>=0&&on(n,n.prev,e)>=0:on(n,e,n.prev)<0||on(n,n.next,e)<0}function qK(n,e){let t=n,r=!1;const s=(n.x+e.x)/2,i=(n.y+e.y)/2;do t.y>i!=t.next.y>i&&t.next.y!==t.y&&s<(t.next.x-t.x)*(i-t.y)/(t.next.y-t.y)+t.x&&(r=!r),t=t.next;while(t!==n);return r}function mz(n,e){const t=new PS(n.i,n.x,n.y),r=new PS(e.i,e.x,e.y),s=n.next,i=e.prev;return n.next=e,e.prev=n,t.next=s,s.prev=t,r.next=t,t.prev=r,i.next=r,r.prev=i,r}function TE(n,e,t,r){const s=new PS(n,e,t);return r?(s.next=r.next,s.prev=r,r.next.prev=s,r.next=s):(s.prev=s,s.next=s),s}function nf(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function PS(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function e9(n,e,t,r){let s=0;for(let i=e,a=t-r;i<t;i+=r)s+=(n[a]-n[i])*(n[i+1]+n[a+1]),a=i;return s}class Lp{static area(e){const t=e.length;let r=0;for(let s=t-1,i=0;i<t;s=i++)r+=e[s].x*e[i].y-e[i].x*e[s].y;return r*.5}static isClockWise(e){return Lp.area(e)<0}static triangulateShape(e,t){const r=[],s=[],i=[];IE(e),kE(r,e);let a=e.length;t.forEach(IE);for(let l=0;l<t.length;l++)s.push(a),a+=t[l].length,kE(r,t[l]);const o=FK.triangulate(r,s);for(let l=0;l<o.length;l+=3)i.push(o.slice(l,l+3));return i}}function IE(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function kE(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class GT extends el{constructor(e=new hz([new Ue(0,.5),new Ue(-.5,-.5),new Ue(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const r=[],s=[],i=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)u(e);else for(let c=0;c<e.length;c++)u(e[c]),this.addGroup(o,l,c),o+=l,l=0;this.setIndex(r),this.setAttribute("position",new ea(s,3)),this.setAttribute("normal",new ea(i,3)),this.setAttribute("uv",new ea(a,2));function u(c){const d=s.length/3,h=c.extractPoints(t);let p=h.shape;const g=h.holes;Lp.isClockWise(p)===!1&&(p=p.reverse());for(let m=0,y=g.length;m<y;m++){const b=g[m];Lp.isClockWise(b)===!0&&(g[m]=b.reverse())}const f=Lp.triangulateShape(p,g);for(let m=0,y=g.length;m<y;m++){const b=g[m];p=p.concat(b)}for(let m=0,y=p.length;m<y;m++){const b=p[m];s.push(b.x,b.y,0),i.push(0,0,1),a.push(b.x,b.y)}for(let m=0,y=f.length;m<y;m++){const b=f[m],x=b[0]+d,v=b[1]+d,w=b[2]+d;r.push(x,v,w),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return t9(t,e)}static fromJSON(e,t){const r=[];for(let s=0,i=e.shapes.length;s<i;s++){const a=t[e.shapes[s]];r.push(a)}return new GT(r,e.curveSegments)}}function t9(n,e){if(e.shapes=[],Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const s=n[t];e.shapes.push(s.uuid)}else e.shapes.push(n.uuid);return e}class n9 extends Ef{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Et(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Et(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=BA,this.normalScale=new Ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class r9 extends n9{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Ue(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return wr(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Et(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Et(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Et(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class gz extends kr{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Et(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}const ew=new Bt,CE=new te,_E=new te;class s9{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ue(512,512),this.map=null,this.mapPass=null,this.matrix=new Bt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new LT,this._frameExtents=new Ue(1,1),this._viewportCount=1,this._viewports=[new tr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,r=this.matrix;CE.setFromMatrixPosition(e.matrixWorld),t.position.copy(CE),_E.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(_E),t.updateMatrixWorld(),ew.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ew),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(ew)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class i9 extends s9{constructor(){super(new sz(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class a9 extends gz{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(kr.DEFAULT_UP),this.updateMatrix(),this.target=new kr,this.shadow=new i9}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class o9 extends gz{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ET}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ET);const ME=(n,e)=>{const t=2*Math.PI*e*n;return t/(t+1)},NE=(n,e,t)=>n*e+(1-n)*t;class l9{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,t){if(!this.initialized)return this.initialized=!0,this.xPrev=t,this.dxPrev=t.map(()=>0),this.tPrev=e,t;const{xPrev:r,tPrev:s,dxPrev:i}=this,a=e-s,o=ME(a,this.dCutOff),l=[],u=[],c=[];for(let d=0;d<t.length;d++){l[d]=(t[d]-r[d])/a,u[d]=NE(o,l[d],i[d]);const h=this.minCutOff+this.beta*Math.abs(u[d]),p=ME(a,h);c[d]=NE(p,t[d],r[d])}return this.xPrev=c,this.dxPrev=u,this.tPrev=e,c}}const u9=`<div class="mindar-ui-overlay mindar-ui-loading">
  <div class="loader"/>
</div>
`,c9=`<div class="mindar-ui-overlay mindar-ui-compatibility">
  <div class="content">
    <h1>Failed to launch :(</h1>
    <p>
      Looks like your device/browser is not compatible.
    </p>

    <br/>
    <br/>
    <p>
      Please try the following recommended browsers:
    </p>
    <p>
      For Android device - Chrome
    </p>
    <p>
      For iOS device - Safari
    </p>
  </div>
</div>
`,d9=`<div class="mindar-ui-overlay mindar-ui-scanning">
  <div class="scanning">
    <div class="inner">
      <div class="scanline"/>
    </div>
  </div>
</div>
`,h9=".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid white;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right,white 10px,transparent 10px) 0 0,linear-gradient(to right,white 10px,transparent 10px) 0 100%,linear-gradient(to left,white 10px,transparent 10px) 100% 0,linear-gradient(to left,white 10px,transparent 10px) 100% 100%,linear-gradient(to bottom,white 10px,transparent 10px) 0 0,linear-gradient(to bottom,white 10px,transparent 10px) 100% 0,linear-gradient(to top,white 10px,transparent 10px) 0 100%,linear-gradient(to top,white 10px,transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:white;animation:move 2s linear infinite}@keyframes move{0%,to{top:0%}50%{top:calc(100% - 10px)}}";class p9{constructor({uiLoading:e,uiScanning:t,uiError:r}){const s=document.createElement("style");s.innerText=h9,document.head.appendChild(s),e==="yes"?this.loadingModal=this._loadHTML(u9):e!=="no"&&(this.loadingModal=document.querySelector(e)),r==="yes"?this.compatibilityModal=this._loadHTML(c9):r!=="no"&&(this.compatibilityModal=document.querySelector(r)),t==="yes"?this.scanningMask=this._loadHTML(d9):t!=="no"&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const r=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(r),r}}var OT={};function f9(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const i=Object.getOwnPropertyDescriptor(r,s);i&&Object.defineProperty(n,s,i.get?i:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m9=1e-7,g9=1e-4;let WT=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}};class xb{refCount(e){return Jr("refCount")}incRef(e){return Jr("incRef")}timerAvailable(){return!0}time(e){return Jr("time")}read(e){return Jr("read")}readSync(e){return Jr("readSync")}readToGPU(e,t){return Jr("readToGPU")}numDataIds(){return Jr("numDataIds")}disposeData(e,t){return Jr("disposeData")}write(e,t,r){return Jr("write")}move(e,t,r,s,i){return Jr("move")}createTensorFromGPUData(e,t,r){return Jr("createTensorFromGPUData")}memory(){return Jr("memory")}floatPrecision(){return Jr("floatPrecision")}epsilon(){return this.floatPrecision()===32?m9:g9}dispose(){return Jr("dispose")}}function Jr(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Ia(n,e,t)}function y9(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,r=0;for(;t>0;)r=Math.random()*t|0,t--,Ia(n,t,r),Ia(e,t,r)}function Go(n,e,t){return Math.max(n,Math.min(e,t))}function vb(n){return n%2===0?n:n+1}function Ia(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function yz(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function b9(n,e){const t=Math.random();return e*t+(1-t)*n}function x9(n,e){let t=0;for(let r=0;r<n.length;r++){const s=Number(n[r])-Number(e[r]);t+=s*s}return t}function M(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function ar(n,e,t=""){M(ht(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function ku(n){M(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ie(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function v9(n){return n.length===0}function bz(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function ht(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function su(n){return n%1===0}function w9(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function x0(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function S9(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return VT(e),e}function Bl(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function $S(n,e=s=>0,t,r){return new Promise((s,i)=>{let a=0;const o=()=>{if(n()){s();return}a++;const l=e(a);if(t!=null&&a>=t){i();return}r!=null?r(o,l):setTimeout(o,l)};o()})}function BT(n,e){let t=1,r=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)t*=n[i];else if(n[i]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function lt(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),M(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),M(n.every(r=>su(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function Za(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||s?null:lt(e,n).sort();let a=0;for(let o=0;o<n.length;++o){if(i!=null){if(i[a]===o&&n[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${n[o]}' is not 1`);(i[a]==null||i[a]>o)&&n[o]===1&&(t.push(n[o]),r.push(o)),i[a]<=o&&a++}n[o]!==1&&(t.push(n[o]),r.push(o))}return{newShape:t,keptDims:r}}function Vn(n,e){return ln(n,e)}function ln(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function xz(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function vz(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function XT(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function rf(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function wz(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Hi(n){return typeof n=="string"||n instanceof String}function Sz(n){return typeof n=="boolean"}function v0(n){return typeof n=="number"}function Cu(n){return Array.isArray(n)?Cu(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":v0(n)?"float32":Hi(n)?"string":Sz(n)?"bool":"float32"}function Oo(n){return!!(n&&n.constructor&&n.call&&n.apply)}function w0(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function We(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function Tz(n,e,t,r=!1){const s=new Array;if(e.length===1){const i=e[0]*(r?2:1);for(let a=0;a<i;a++)s[a]=t[n+a]}else{const i=e[0],a=e.slice(1),o=a.reduce((l,u)=>l*u)*(r?2:1);for(let l=0;l<i;l++)s[l]=Tz(n+l*o,a,t,r)}return s}function Ns(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,i)=>s*i)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return Tz(0,n,e,t)}function Iz(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function wb(n,e){const t=sr(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function sr(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function UT(n,e){const t=n.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return Ns(n,new Float32Array(t));if(e==="int32")return Ns(n,new Int32Array(t));if(e==="bool")return Ns(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function ps(n){n.forEach(e=>{M(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function bi(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function _u(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function Pa(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EE="tfjsflags";class kz{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=T9,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Pa(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);EE in e&&e[EE].split(",").forEach(t=>{const[r,s]=t.split(":");this.urlFlags[r]=k9(r,s)})}}function T9(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(I9(e,r[0],r[1]),r.join("="))),e}function I9(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function k9(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function q(){return ZT}let ZT=null;function C9(n){ZT=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tw;function Cz(){if(tw==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");tw=n}return tw}function _9(){const n=Cz();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function HT(n,e){const t=_9();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const Lf="Abs",bd="Acos",xd="Acosh",Mu="Add",Af="AddN",Sb="All",Tb="Any",zf="ArgMax",Df="ArgMin",vd="Asin",wd="Asinh",Sd="Atan",Td="Atanh",Id="Atan2",Pf="AvgPool",Ib="AvgPoolGrad",$f="AvgPool3D",kb="AvgPool3DGrad",Ff="BatchMatMul",Gf="BatchToSpaceND",Cb="Bincount",Of="BitwiseAnd",_z="BroadcastTo",_b="BroadcastArgs",kd="Cast",Cd="Ceil",_d="ClipByValue",Mb="Complex",Wf="ComplexAbs",Vf="Concat",Bf="Conv2D",Nb="Conv2DBackpropFilter",Xf="Conv2DBackpropInput",Uf="Conv3D",Eb="Conv3DBackpropFilterV2",Rb="Conv3DBackpropInputV2",Md="Cos",Nd="Cosh",Lb="Cumprod",Zf="Cumsum",Ab="CropAndResize",zb="DenseBincount",Db="DepthToSpace",Hf="DepthwiseConv2dNative",Pb="DepthwiseConv2dNativeBackpropFilter",$b="DepthwiseConv2dNativeBackpropInput",Fb="Diag",Kf="Dilation2D",S0="Dilation2DBackpropInput",T0="Dilation2DBackpropFilter",Gb="Draw",Ed="RealDiv",Ob="Einsum",Rd="Elu",Wb="EluGrad",Ld="Erf",Yf="Equal",Ad="Exp",jf="ExpandDims",zd="Expm1",Vb="FFT",Bb="Fill",Xb="FlipLeftRight",Dd="Floor",Pd="FloorDiv",Qf="FusedBatchNorm",Jf="GatherV2",Ub="GatherNd",qf="Greater",$d="GreaterEqual",Fd="Identity",Zb="IFFT",Hb="Imag",Gd="IsFinite",Od="IsInf",Wd="IsNan",em="LeakyRelu",tm="Less",nm="LessEqual",Kb="LinSpace",Vd="Log",Bd="Log1p",rm="LogicalAnd",sm="LogicalNot",im="LogicalOr",M9="LogicalXor",Mz="LogSoftmax",N9="LowerBound",am="LRN",Yb="LRNGrad",E9="MatrixBandPart",om="Max",Xd="Maximum",lm="MaxPool",jb="MaxPoolGrad",um="MaxPool3D",Qb="MaxPool3DGrad",Jb="MaxPoolWithArgmax",cm="Mean",dm="Min",Ud="Minimum",hm="MirrorPad",Zd="Mod",qb="Multinomial",Hd="Multiply",pm="Neg",fm="NotEqual",ex="NonMaxSuppressionV3",tx="NonMaxSuppressionV4",nx="NonMaxSuppressionV5",mm="OnesLike",gm="OneHot",ym="Pack",bm="PadV2",R9="Pool",Kd="Pow",xm="Prelu",vm="Prod",rx="RaggedGather",sx="RaggedRange",ix="RaggedTensorToTensor",ax="Range",ox="Real",Yd="Reciprocal",jd="Relu",wm="Reshape",Sm="ResizeNearestNeighbor",lx="ResizeNearestNeighborGrad",Tm="ResizeBilinear",ux="ResizeBilinearGrad",Qd="Relu6",Im="Reverse",Jd="Round",qd="Rsqrt",cx="ScatterNd",dx="TensorScatterUpdate",hx="SearchSorted",km="Select",eh="Selu",Cm="Slice",th="Sin",nh="Sinh",rh="Sign",sh="Sigmoid",ih="Softplus",ah="Sqrt",_m="Sum",Mm="SpaceToBatchND",Nm="SplitV",Em="Softmax",px="SparseFillEmptyRows",fx="SparseReshape",mx="SparseSegmentMean",gx="SparseSegmentSum",yx="SparseToDense",oh="SquaredDifference",bx="Square",Rm="StaticRegexReplace",xx="StridedSlice",vx="StringNGrams",wx="StringSplit",Sx="StringToHashBucketFast",lh="Sub",uh="Tan",ch="Tanh",dh="Tile",Tx="TopK",Ix="Transform",Xl="Transpose",kx="Unique",Lm="Unpack",Am="UnsortedSegmentSum",L9="UpperBound",zm="ZerosLike",hh="Step",I0="FromPixels",Cx="RotateWithOffset",sf="_FusedMatMul",af="FusedConv2D",of="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(...n){q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(...n)}function A9(...n){q().getBool("IS_TEST")||q().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qc=HT("kernelRegistry",()=>new Map),lf=HT("gradRegistry",()=>new Map);function uf(n,e){const t=KT(n,e);return Qc.get(t)}function FS(n){return lf.get(n)}function k0(n){const e=Qc.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===n&&t.push(a)}return t}function jr(n){const{kernelName:e,backendName:t}=n,r=KT(e,t);Qc.has(r)&&ws(`The kernel '${e}' for backend '${t}' is already registered`),Qc.set(r,n)}function Nz(n){const{kernelName:e}=n;lf.has(e)&&q().getBool("DEBUG")&&ws(`Overriding the gradient for '${e}'`),lf.set(e,n)}function z9(n,e){const t=KT(n,e);if(!Qc.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);Qc.delete(t)}function D9(n){if(!lf.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);lf.delete(n)}function P9(n,e){k0(n).forEach(t=>{const r=Object.assign({},t,{backendName:e});jr(r)})}function KT(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Nu=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function $9(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function F9(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var Rz=Xt,Hs=null;try{Hs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Xt(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Xt.prototype.__isLong__;Object.defineProperty(Xt.prototype,"__isLong__",{value:!0});function fs(n){return(n&&n.__isLong__)===!0}Xt.isLong=fs;var RE={},LE={};function Eu(n,e){var t,r,s;return e?(n>>>=0,(s=0<=n&&n<256)&&(r=LE[n],r)?r:(t=Ut(n,(n|0)<0?-1:0,!0),s&&(LE[n]=t),t)):(n|=0,(s=-128<=n&&n<128)&&(r=RE[n],r)?r:(t=Ut(n,n<0?-1:0,!1),s&&(RE[n]=t),t))}Xt.fromInt=Eu;function Ks(n,e){if(isNaN(n))return e?$l:Ys;if(e){if(n<0)return $l;if(n>=Lz)return Dz}else{if(n<=-9223372036854776e3)return is;if(n+1>=O9)return zz}return n<0?Ks(-n,e).neg():Ut(n%Jc|0,n/Jc|0,e)}Xt.fromNumber=Ks;function Ut(n,e,t){return new Xt(n,e,t)}Xt.fromBits=Ut;var C0=Math.pow;function YT(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return Ys;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var r;if((r=n.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return YT(n.substring(1),e,t).neg();for(var s=Ks(C0(t,8)),i=Ys,a=0;a<n.length;a+=8){var o=Math.min(8,n.length-a),l=parseInt(n.substring(a,a+o),t);if(o<8){var u=Ks(C0(t,o));i=i.mul(u).add(Ks(l))}else i=i.mul(s),i=i.add(Ks(l))}return i.unsigned=e,i}Xt.fromString=YT;function _i(n,e){return typeof n=="number"?Ks(n,e):typeof n=="string"?YT(n,e):Ut(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Xt.fromValue=_i;var AE=65536,G9=1<<24,Jc=AE*AE,Lz=Jc*Jc,O9=Lz/2,zE=Eu(G9),Ys=Eu(0);Xt.ZERO=Ys;var $l=Eu(0,!0);Xt.UZERO=$l;var Cc=Eu(1);Xt.ONE=Cc;var Az=Eu(1,!0);Xt.UONE=Az;var GS=Eu(-1);Xt.NEG_ONE=GS;var zz=Ut(-1,2147483647,!1);Xt.MAX_VALUE=zz;var Dz=Ut(-1,-1,!0);Xt.MAX_UNSIGNED_VALUE=Dz;var is=Ut(0,-2147483648,!1);Xt.MIN_VALUE=is;var Ce=Xt.prototype;Ce.toInt=function(){return this.unsigned?this.low>>>0:this.low};Ce.toNumber=function(){return this.unsigned?(this.high>>>0)*Jc+(this.low>>>0):this.high*Jc+(this.low>>>0)};Ce.toString=function(n){if(n=n||10,n<2||36<n)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(is)){var e=Ks(n),t=this.div(e),r=t.mul(e).sub(this);return t.toString(n)+r.toInt().toString(n)}else return"-"+this.neg().toString(n);for(var s=Ks(C0(n,6),this.unsigned),i=this,a="";;){var o=i.div(s),l=i.sub(o.mul(s)).toInt()>>>0,u=l.toString(n);if(i=o,i.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};Ce.getHighBits=function(){return this.high};Ce.getHighBitsUnsigned=function(){return this.high>>>0};Ce.getLowBits=function(){return this.low};Ce.getLowBitsUnsigned=function(){return this.low>>>0};Ce.getNumBitsAbs=function(){if(this.isNegative())return this.eq(is)?64:this.neg().getNumBitsAbs();for(var n=this.high!=0?this.high:this.low,e=31;e>0&&!(n&1<<e);e--);return this.high!=0?e+33:e+1};Ce.isZero=function(){return this.high===0&&this.low===0};Ce.eqz=Ce.isZero;Ce.isNegative=function(){return!this.unsigned&&this.high<0};Ce.isPositive=function(){return this.unsigned||this.high>=0};Ce.isOdd=function(){return(this.low&1)===1};Ce.isEven=function(){return(this.low&1)===0};Ce.equals=function(n){return fs(n)||(n=_i(n)),this.unsigned!==n.unsigned&&this.high>>>31===1&&n.high>>>31===1?!1:this.high===n.high&&this.low===n.low};Ce.eq=Ce.equals;Ce.notEquals=function(n){return!this.eq(n)};Ce.neq=Ce.notEquals;Ce.ne=Ce.notEquals;Ce.lessThan=function(n){return this.comp(n)<0};Ce.lt=Ce.lessThan;Ce.lessThanOrEqual=function(n){return this.comp(n)<=0};Ce.lte=Ce.lessThanOrEqual;Ce.le=Ce.lessThanOrEqual;Ce.greaterThan=function(n){return this.comp(n)>0};Ce.gt=Ce.greaterThan;Ce.greaterThanOrEqual=function(n){return this.comp(n)>=0};Ce.gte=Ce.greaterThanOrEqual;Ce.ge=Ce.greaterThanOrEqual;Ce.compare=function(n){if(fs(n)||(n=_i(n)),this.eq(n))return 0;var e=this.isNegative(),t=n.isNegative();return e&&!t?-1:!e&&t?1:this.unsigned?n.high>>>0>this.high>>>0||n.high===this.high&&n.low>>>0>this.low>>>0?-1:1:this.sub(n).isNegative()?-1:1};Ce.comp=Ce.compare;Ce.negate=function(){return!this.unsigned&&this.eq(is)?is:this.not().add(Cc)};Ce.neg=Ce.negate;Ce.add=function(n){fs(n)||(n=_i(n));var e=this.high>>>16,t=this.high&65535,r=this.low>>>16,s=this.low&65535,i=n.high>>>16,a=n.high&65535,o=n.low>>>16,l=n.low&65535,u=0,c=0,d=0,h=0;return h+=s+l,d+=h>>>16,h&=65535,d+=r+o,c+=d>>>16,d&=65535,c+=t+a,u+=c>>>16,c&=65535,u+=e+i,u&=65535,Ut(d<<16|h,u<<16|c,this.unsigned)};Ce.subtract=function(n){return fs(n)||(n=_i(n)),this.add(n.neg())};Ce.sub=Ce.subtract;Ce.multiply=function(n){if(this.isZero())return Ys;if(fs(n)||(n=_i(n)),Hs){var e=Hs.mul(this.low,this.high,n.low,n.high);return Ut(e,Hs.get_high(),this.unsigned)}if(n.isZero())return Ys;if(this.eq(is))return n.isOdd()?is:Ys;if(n.eq(is))return this.isOdd()?is:Ys;if(this.isNegative())return n.isNegative()?this.neg().mul(n.neg()):this.neg().mul(n).neg();if(n.isNegative())return this.mul(n.neg()).neg();if(this.lt(zE)&&n.lt(zE))return Ks(this.toNumber()*n.toNumber(),this.unsigned);var t=this.high>>>16,r=this.high&65535,s=this.low>>>16,i=this.low&65535,a=n.high>>>16,o=n.high&65535,l=n.low>>>16,u=n.low&65535,c=0,d=0,h=0,p=0;return p+=i*u,h+=p>>>16,p&=65535,h+=s*u,d+=h>>>16,h&=65535,h+=i*l,d+=h>>>16,h&=65535,d+=r*u,c+=d>>>16,d&=65535,d+=s*l,c+=d>>>16,d&=65535,d+=i*o,c+=d>>>16,d&=65535,c+=t*u+r*l+s*o+i*a,c&=65535,Ut(h<<16|p,c<<16|d,this.unsigned)};Ce.mul=Ce.multiply;Ce.divide=function(n){if(fs(n)||(n=_i(n)),n.isZero())throw Error("division by zero");if(Hs){if(!this.unsigned&&this.high===-2147483648&&n.low===-1&&n.high===-1)return this;var e=(this.unsigned?Hs.div_u:Hs.div_s)(this.low,this.high,n.low,n.high);return Ut(e,Hs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?$l:Ys;var t,r,s;if(this.unsigned){if(n.unsigned||(n=n.toUnsigned()),n.gt(this))return $l;if(n.gt(this.shru(1)))return Az;s=$l}else{if(this.eq(is)){if(n.eq(Cc)||n.eq(GS))return is;if(n.eq(is))return Cc;var i=this.shr(1);return t=i.div(n).shl(1),t.eq(Ys)?n.isNegative()?Cc:GS:(r=this.sub(n.mul(t)),s=t.add(r.div(n)),s)}else if(n.eq(is))return this.unsigned?$l:Ys;if(this.isNegative())return n.isNegative()?this.neg().div(n.neg()):this.neg().div(n).neg();if(n.isNegative())return this.div(n.neg()).neg();s=Ys}for(r=this;r.gte(n);){t=Math.max(1,Math.floor(r.toNumber()/n.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),o=a<=48?1:C0(2,a-48),l=Ks(t),u=l.mul(n);u.isNegative()||u.gt(r);)t-=o,l=Ks(t,this.unsigned),u=l.mul(n);l.isZero()&&(l=Cc),s=s.add(l),r=r.sub(u)}return s};Ce.div=Ce.divide;Ce.modulo=function(n){if(fs(n)||(n=_i(n)),Hs){var e=(this.unsigned?Hs.rem_u:Hs.rem_s)(this.low,this.high,n.low,n.high);return Ut(e,Hs.get_high(),this.unsigned)}return this.sub(this.div(n).mul(n))};Ce.mod=Ce.modulo;Ce.rem=Ce.modulo;Ce.not=function(){return Ut(~this.low,~this.high,this.unsigned)};Ce.and=function(n){return fs(n)||(n=_i(n)),Ut(this.low&n.low,this.high&n.high,this.unsigned)};Ce.or=function(n){return fs(n)||(n=_i(n)),Ut(this.low|n.low,this.high|n.high,this.unsigned)};Ce.xor=function(n){return fs(n)||(n=_i(n)),Ut(this.low^n.low,this.high^n.high,this.unsigned)};Ce.shiftLeft=function(n){return fs(n)&&(n=n.toInt()),(n&=63)===0?this:n<32?Ut(this.low<<n,this.high<<n|this.low>>>32-n,this.unsigned):Ut(0,this.low<<n-32,this.unsigned)};Ce.shl=Ce.shiftLeft;Ce.shiftRight=function(n){return fs(n)&&(n=n.toInt()),(n&=63)===0?this:n<32?Ut(this.low>>>n|this.high<<32-n,this.high>>n,this.unsigned):Ut(this.high>>n-32,this.high>=0?0:-1,this.unsigned)};Ce.shr=Ce.shiftRight;Ce.shiftRightUnsigned=function(n){if(fs(n)&&(n=n.toInt()),n&=63,n===0)return this;var e=this.high;if(n<32){var t=this.low;return Ut(t>>>n|e<<32-n,e>>>n,this.unsigned)}else return n===32?Ut(e,0,this.unsigned):Ut(e>>>n-32,0,this.unsigned)};Ce.shru=Ce.shiftRightUnsigned;Ce.shr_u=Ce.shiftRightUnsigned;Ce.toSigned=function(){return this.unsigned?Ut(this.low,this.high,!1):this};Ce.toUnsigned=function(){return this.unsigned?this:Ut(this.low,this.high,!0)};Ce.toBytes=function(n){return n?this.toBytesLE():this.toBytesBE()};Ce.toBytesLE=function(){var n=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,n&255,n>>>8&255,n>>>16&255,n>>>24]};Ce.toBytesBE=function(){var n=this.high,e=this.low;return[n>>>24,n>>>16&255,n>>>8&255,n&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Xt.fromBytes=function(n,e,t){return t?Xt.fromBytesLE(n,e):Xt.fromBytesBE(n,e)};Xt.fromBytesLE=function(n,e){return new Xt(n[0]|n[1]<<8|n[2]<<16|n[3]<<24,n[4]|n[5]<<8|n[6]<<16|n[7]<<24,e)};Xt.fromBytesBE=function(n,e){return new Xt(n[4]<<24|n[5]<<16|n[6]<<8|n[7],n[0]<<24|n[1]<<16|n[2]<<8|n[3],e)};const Pz=$9(Rz),W9=f9({__proto__:null,default:Pz},[Rz]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cl=Pz||W9;function Dm(n){return Cl.fromString(n,!0,16)}const $z=Dm("c3a5c85c97cb3127"),Tl=Dm("b492b66fbe98f273"),Sr=Dm("9ae16a3b2f90404f");function OS(n){return n.xor(n.shru(47))}function Fz(n,e,t){const r=n.slice(e,e+t);return Cl.fromBytes(Array.from(r),!0,!0)}function Ft(n,e){return Fz(n,e,8)}function DE(n,e){return Fz(n,e,4)}function Pn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Lo(n,e,t=Dm("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function V9(n,e,t,r,s,i){s=s.add(n),i=Pn(i.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(t),i=i.add(Pn(s,44)),[s.add(r),i.add(a)]}function ay(n,e,t,r){return V9(Ft(n,e),Ft(n,e+8),Ft(n,e+16),Ft(n,e+24),t,r)}function B9(n,e=n.length){if(e>=8){const t=Sr.add(e*2),r=Ft(n,0).add(Sr),s=Ft(n,e-8),i=Pn(s,37).mul(t).add(r),a=Pn(r,25).add(s).mul(t);return Lo(i,a,t)}if(e>=4){const t=Sr.add(e*2),r=DE(n,0);return Lo(r.shl(3).add(e),DE(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],i=t+(r<<8),a=e+(s<<2);return OS(Sr.mul(i).xor($z.mul(a))).mul(Sr)}return Sr}function X9(n,e=n.length){const t=Sr.add(e*2),r=Ft(n,0).mul(Tl),s=Ft(n,8),i=Ft(n,e-8).mul(t),a=Ft(n,e-16).mul(Sr);return Lo(Pn(r.add(s),43).add(Pn(i,30)).add(a),r.add(Pn(s.add(Sr),18)).add(i),t)}function U9(n,e=n.length){const t=Sr.add(e*2),r=Ft(n,0).mul(Sr),s=Ft(n,8),i=Ft(n,e-8).mul(t),a=Ft(n,e-16).mul(Sr),o=Pn(r.add(s),43).add(Pn(i,30)).add(a),l=Lo(o,r.add(Pn(s.add(Sr),18)).add(i),t),u=Ft(n,16).mul(t),c=Ft(n,24),d=o.add(Ft(n,e-32)).mul(t),h=l.add(Ft(n,e-24)).mul(t);return Lo(Pn(u.add(c),43).add(Pn(d,30)).add(h),u.add(Pn(c.add(r),18)).add(d),t)}function Gz(n,e=n.length){const t=Cl.fromNumber(81,!0);if(e<=32)return e<=16?B9(n,e):X9(n,e);if(e<=64)return U9(n,e);let r=t,s=t.mul(Tl).add(113),i=OS(s.mul(Sr).add(113)).mul(Sr),a=[Cl.UZERO,Cl.UZERO],o=[Cl.UZERO,Cl.UZERO];r=r.mul(Sr).add(Ft(n,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do r=Pn(r.add(s).add(a[0]).add(Ft(n,l+8)),37).mul(Tl),s=Pn(s.add(a[1]).add(Ft(n,l+48)),42).mul(Tl),r=r.xor(o[1]),s=s.add(a[0]).add(Ft(n,l+40)),i=Pn(i.add(o[0]),33).mul(Tl),a=ay(n,l,a[1].mul(Tl),r.add(o[0])),o=ay(n,l+32,i.add(o[1]),s.add(Ft(n,l+16))),[i,r]=[r,i],l+=64;while(l!==u);const d=Tl.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=Pn(r.add(s).add(a[0]).add(Ft(n,l+8)),37).mul(d),s=Pn(s.add(a[1]).add(Ft(n,l+48)),42).mul(d),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(Ft(n,l+40))),i=Pn(i.add(o[0]),33).mul(d),a=ay(n,l,a[1].mul(d),r.add(o[0])),o=ay(n,l+32,i.add(o[1]),s.add(Ft(n,l+16))),[i,r]=[r,i],Lo(Lo(a[0],o[0],d).add(OS(s).mul($z)).add(i),Lo(a[1],o[1],d).add(r),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ha(n,e){return e==="string"?ta(n):tl([n],e)}function Z9(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function tl(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ia(n)),q().getBool("DEBUG")&&xz(n,e),Z9(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Qn(){return q().platform.now()}function Oz(n,e){return q().platform.fetch(n,e)}function ta(n,e="utf-8"){return e=e||"utf-8",q().platform.encode(n,e)}function $a(n,e="utf-8"){return e=e||"utf-8",q().platform.decode(n,e)}function Nn(n){return q().platform.isTypedArray!=null?q().platform.isTypedArray(n):Ez(n)}function ia(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Pa(n)||n==null||Nn(n)&&t)e.push(n);else if(Array.isArray(n)||Nn(n))for(let r=0;r<n.length;++r)ia(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)ia(n[s],e,t)}return e}const H9=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:ht,arraysEqualWithNull:bz,assert:M,assertNonNegativeIntegerDimensions:ps,assertNonNull:ku,assertShapesMatch:ar,bytesFromStringArray:wz,bytesPerElement:rf,checkConversionForErrors:xz,clamp:Go,computeStrides:We,convertBackendValuesAndArrayBuffer:Iz,createScalarValue:Ha,createShuffledIndices:S9,decodeString:$a,distSquared:x9,encodeString:ta,fetch:Oz,fingerPrint64:Gz,flatten:ia,getArrayFromDType:ln,getTypedArrayFromDType:Vn,hasEncodingLoss:XT,hexToLong:Dm,indexToLoc:_u,inferDtype:Cu,inferFromImplicitShape:BT,isBoolean:Sz,isFunction:Oo,isInt:su,isNumber:v0,isPromise:Pa,isScalarShape:v9,isString:Hi,isTypedArray:Nn,isValidDtype:vz,locToIndex:bi,makeOnesTypedArray:wb,makeZerosNestedTypedArray:UT,makeZerosTypedArray:sr,nearestDivisor:w0,nearestLargerEven:vb,now:Qn,parseAxisParam:lt,randUniform:b9,repeatedTry:$S,rightPad:Bl,shuffle:VT,shuffleCombo:y9,sizeFromShape:ie,sizeToSquarishShape:x0,squeezeShape:Za,sum:yz,swap:Ia,tanh:w9,toNestedArray:Ns,toTypedArray:tl},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K9{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new j9)}profileKernel(e,t,r){let s;const i=()=>{s=r()};let a;const o=Qn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(i);else{i();for(const l of s)l.dataSync();a=Promise.resolve({kernelMs:Qn()-o})}if(q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){const u=s[l];u.data().then(c=>{Y9(c,u.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:i,extraInfo:a}=e;r.forEach(o=>{Promise.all([o.data(),s,a]).then(l=>{this.logger.logKernelProfile(t,o,l[0],l[1],i,l[2])})})}}function Y9(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class j9{logKernelProfile(e,t,r,s,i,a){const o=typeof s=="number"?Bl(`${s}ms`,9):s.error,l=Bl(e,25),u=t.rank,c=t.size,d=Bl(t.shape.toString(),14);let h="";for(const p in i){const g=i[p];if(g!=null){const f=g.shape||t.shape,m=f.length;h+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${l}	%c${o}	%c${u}D ${d}	%c${c}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q9(n,e,t){const r={},s={};for(let l=0;l<e.length;l++)r[e[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const d in c){const h=c[d];let p=!1;for(let g=0;g<e.length;g++)if(r[h.id]){u.outputs.forEach(f=>r[f.id]=!0),p=!0,s[u.id]=!0;break}if(p)break}}const i={};i[t.id]=!0;const a={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let d=0;d<u.outputs.length;d++)if(i[u.outputs[d].id]){for(const h in c)i[c[h].id]=!0,a[u.id]=!0;break}}const o=[];for(let l=0;l<n.length;l++){const u=n[l];if(s[u.id]&&a[u.id]){const c={};for(const h in u.inputs){const p=u.inputs[h];r[p.id]&&(c[h]=p)}const d=Object.assign({},u);d.inputs=c,d.outputs=u.outputs,o.push(d)}}return o}function J9(n,e,t,r){for(let s=e.length-1;s>=0;s--){const i=e[s],a=[];if(i.outputs.forEach(l=>{const u=n[l.id];u!=null?a.push(u):a.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const l in i.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);const u=t(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=i.inputs[l];if(!ht(u.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(n[c.id]==null)n[c.id]=u;else{const d=n[c.id];n[c.id]=r(d,u),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE=20,Jh=3,nw=7;function q9(n,e,t,r){const s=We(e),i=e6(n,e,t,s),a=e.length,o=Fy(n,e,t,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function e6(n,e,t,r){const s=ie(e),i=r[r.length-1],a=new Array(i).fill(0),o=e.length,l=t==="complex64"?pp(n):n;if(o>1)for(let u=0;u<s/i;u++){const c=u*i;for(let d=0;d<i;d++)a[d]=Math.max(a[d],hp(l[c+d],0,t).length)}return a}function hp(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(nw))} + ${parseFloat(n[1].toFixed(nw))}j`:Hi(n)?r=`'${n}'`:t==="bool"?r=Wz(n):r=parseFloat(n.toFixed(nw)).toString(),Bl(r,e)}function Wz(n){return n===0?"false":"true"}function Fy(n,e,t,r,s,i=!0){const a=t==="complex64"?2:1,o=e[0],l=e.length;if(l===0){if(t==="complex64"){const f=pp(n);return[hp(f[0],0,t)]}return t==="bool"?[Wz(n[0])]:[n[0].toString()]}if(l===1){if(o>PE){const f=Jh*a;let m=Array.from(n.slice(0,f)),y=Array.from(n.slice((o-Jh)*a,o*a));return t==="complex64"&&(m=pp(m),y=pp(y)),["["+m.map((b,x)=>hp(b,s[x],t)).join(", ")+", ..., "+y.map((b,x)=>hp(b,s[o-Jh+x],t)).join(", ")+"]"]}return["["+(t==="complex64"?pp(n):Array.from(n)).map((f,m)=>hp(f,s[m],t)).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),d=r[0]*a,h=[];if(o>PE){for(let f=0;f<Jh;f++){const m=f*d,y=m+d;h.push(...Fy(n.slice(m,y),u,t,c,s,!1))}h.push("...");for(let f=o-Jh;f<o;f++){const m=f*d,y=m+d;h.push(...Fy(n.slice(m,y),u,t,c,s,f===o-1))}}else for(let f=0;f<o;f++){const m=f*d,y=m+d;h.push(...Fy(n.slice(m,y),u,t,c,s,f===o-1))}const p=l===2?",":"";h[0]="["+(o>0?h[0]+p:"");for(let f=1;f<h.length-1;f++)h[f]=" "+h[f]+p;let g=`,
`;for(let f=2;f<l;f++)g+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(i?"":g),h}function pp(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class In{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=ie(e),r!=null){const s=r.length;M(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||ln(t,this.size),this.strides=We(e)}set(e,...t){t.length===0&&(t=[0]),M(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return hi().makeTensor(this.values,this.shape,this.dtype)}}let hi=null,lc=null;function t6(n){hi=n}function n6(n){lc=n}class xt{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ie(e),this.strides=We(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return lc.buffer(this.shape,this.dtype,e)}bufferSync(){return lc.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ns(this.shape,e,this.dtype==="complex64")}arraySync(){return Ns(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=hi().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>$a(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),hi().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=hi().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>$a(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await hi().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),hi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return lc.print(this,e)}clone(){return this.throwIfDisposed(),lc.clone(this)}toString(e=!1){const t=this.dataSync();return q9(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),lc.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),hi().makeVariable(this,e,t,r)}}Object.defineProperty(xt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function ae(){return HT("Tensor",()=>xt)}ae();class cf extends xt{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ht(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);hi().disposeTensor(this),this.dataId=e.dataId,hi().incRef(this,null)}dispose(){hi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(cf,Symbol.hasInstance,{value:n=>n instanceof xt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var WS;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(WS||(WS={}));var VS;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(VS||(VS={}));var BS;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(BS||(BS={}));var XS;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(XS||(XS={}));var US;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(US||(US={}));const r6={float32:XS,int32:VS,bool:BS,complex64:US};function Vr(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return r6[n][e]}function _x(n){return Vr(n,"int32")}function Vz(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function Bz(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(n,e){if(n.dtype===e.dtype)return[n,e];const t=Vr(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function Xz(n,e){M(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function Mx(n,e){return e.some(t=>t.id===n.id)}function Fa(n){const e=[];return Uz(n,e,new Set),e}function Uz(n,e,t){if(n==null)return;if(n instanceof xt){e.push(n);return}if(!s6(n))return;const r=n;for(const s in r){const i=r[s];t.has(i)||(t.add(i),Uz(i,e,t))}}function s6(n){return Array.isArray(n)||typeof n=="object"}const i6=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:Xz,getTensorsInContainer:Fa,isTensorInList:Mx,makeTypesMatch:nn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rw(n){return n.kernelName!=null}class $E{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class qc{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new $E}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(ws(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new K9(this.backendInstance),!0}setupRegisteredKernels(){k0(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){k0(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof xb)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,i=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,ws(`Initialization of backend ${e} failed`),ws(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return ws(`Initialization of backend ${e} failed`),ws(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:i}=this.initializeBackend(r);if(i||s)return{name:r,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,i=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,i,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return qc.nextTensorId++}nextVariableId(){return qc.nextVariableId++}clone(e){const t=W.runKernel(Fd,{x:e}),r={x:e},s=a=>({x:()=>{const o="float32",l={x:a},u={dtype:o};return W.runKernel(kd,l,u)}}),i=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,i,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,uf(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let i=0;r.forEach(l=>{i+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-i-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l;const u=rw(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(rw(e)){const{kernelName:g,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;const y=uf(g,this.backendName);M(y!=null,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),o=()=>{const b=this.backend.numDataIds();l=y.kernelFunc({inputs:f,attrs:m,backend:this.backend});const x=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,b,x);const v=x.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(s){const w=this.getTensorsForGradient(g,f,v);r=this.saveTensorsForBackwardMode(w)}return v}}else{const{forwardFunc:g}=e,f=m=>{s&&(r=m.map(y=>this.keep(this.clone(y))))};o=()=>{const m=this.backend.numDataIds();l=this.tidy(()=>g(this.backend,f));const y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,m,y),y}}const{inputs:c,attrs:d}=e,h=rw(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(u,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(u,c,t,h,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(g=>c[g]!=null?c[g].shape:null),outputShapes:t.map(g=>g.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,r){const s=FS(e);if(s!=null){const i=s.inputsToSave||[],a=s.outputsToSave||[];let o;s.saveAllInputs?(M(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(u=>t[u])):o=i.map(u=>t[u]);const l=r.filter((u,c)=>a[c]);return o.concat(l)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let i=e;r==="string"&&Hi(e[0])&&(i=e.map(l=>ta(l)));const a=s.write(i,t,r),o=new xt(t,r,a,this.nextTensorId());if(this.trackTensor(o,s),r==="string"){const l=this.state.tensorInfo.get(a),u=wz(i);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(e,t,r,s){r=r||"float32";const i={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(i,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:i}=e,a=new xt(s,i,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const i=new cf(e,t,r,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*rf(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof cf||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*rf(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,i,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:i},l=FS(e);l!=null&&(s=l.gradFunc),s!=null&&(o.gradient=u=>(u=u.map((c,d)=>{if(c==null){const h=r[d],p=sr(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return c}),s(u.length>1?u:u[0],i,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Fa(e),r=new Set(t.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const a=this.state.activeScope.track[i];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(i=>{!i.kept&&i.scopeId===s.id&&this.track(i)})}gradients(e,t,r,s=!1){if(M(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));M(i instanceof xt,()=>"The result y returned by f() must be a tensor.");const a=Q9(this.state.activeTape,t,i);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[i.id]=r??a6(i.shape),J9(o,a,u=>this.tidy(u),o6);const l=t.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(e){return M(Oo(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{M(t.every(o=>o instanceof xt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((o,l)=>{s[l]=o});const i=(o,l)=>(r=e(...t,l),M(r.value instanceof xt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M(Oo(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(o,l)=>{const u=r.gradFunc(o,l),c=Array.isArray(u)?u:[u];M(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(c.every(h=>h instanceof xt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return c.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Qn(),r=await this.backend.time(e);return r.wallMs=Qn()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new $E;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}qc.nextTensorId=0;qc.nextVariableId=0;function a6(n){const e=wb(ie(n),"float32");return W.makeTensor(e,n,"float32")}function Zz(){const n=Cz();if(n._tfengine==null){const e=new kz(n);n._tfengine=new qc(e)}return C9(n._tfengine.ENV),t6(()=>n._tfengine),n._tfengine}const W=Zz();function o6(n,e){const t={a:n,b:e};return W.runKernel(Mu,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(){return typeof navigator<"u"&&navigator!=null}let ZS;function u6(n){ZS=n}function jT(n){if(ZS!==void 0)return ZS;if(n||l6()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function QT(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const c6=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:QT,isMobile:jT,mockIsMobile:u6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br=q();Br.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Br.registerFlag("IS_BROWSER",()=>QT());Br.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Br.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Br.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Br.registerFlag("PROD",()=>!1);Br.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Br.getBool("DEBUG"));Br.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Br.registerFlag("IS_TEST",()=>!1);Br.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Br.getBool("DEBUG"));Br.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Br.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Br.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(n,e){let t=n;if(Nn(n))return e==="string"?[]:[n.length];if(Vz(n)){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}else if(Bz(n))return[n.buffer.size/(e==null?4:rf(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||Nn(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Hz(n,r,[]),r}function Hz(n,e,t){if(t=t||[],!Array.isArray(n)&&!Nn(n)){M(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}M(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),M(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)Hz(n[s],r,t.concat(s))}function FE(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function N(n,e,t,r="numeric"){if(n instanceof ae())return FE(r,n.dtype,e,t),n;let s=Cu(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),FE(r,s,e,t),n==null||!Nn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const o=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${o}'`)}const i=aa(n,s);!Nn(n)&&!Array.isArray(n)&&(n=[n]);const a=s!=="string"?tl(n,s):ia(n,[],!0);return W.makeTensor(a,i,s)}function df(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((s,i)=>N(s,`${e}[${i}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JT="__op";function V(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+JT;const s=(...i)=>{W.startScope(t);try{const a=r(...i);return Pa(a)&&console.error("Cannot return a Promise inside of tidy."),W.endScope(a),a}catch(a){throw W.endScope(null),a}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(n,e){const t=N(n,"real","complex"),r=N(e,"imag","complex");ar(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return W.runKernel(Mb,s)}const Ga=V({complex_:d6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nl(n,e,t,r){if(r==null)r=Cu(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Bz(n)||Vz(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return W.backend.createTensorFromGPUData(n,e||t,r)}if(!Nn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){ps(e);const s=ie(e),i=ie(t);M(s===i,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${i}`);for(let a=0;a<t.length;++a){const o=t[a],l=a===t.length-1?o!==ie(e.slice(a)):!0;M(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Nn(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?tl(n,r):ia(n,[],!0),W.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kt(n,e,t){const r=aa(n,t);return nl(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iu={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Mi{static join(e){return new Mi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>Nn(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=t+s.byteLength;this.shards.push({buffer:s,start:t,end:i}),t=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,i=new ArrayBuffer(s),a=new Uint8Array(i);let o=0;for(let l=r;l<this.shards.length;l++){const u=this.shards[l],c=e+o-u.start,d=o,h=Math.min(t,u.end)-u.start,p=new Uint8Array(u.buffer,c,h-c);if(a.set(p,d),o+=p.length,t<u.end)break}return i}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(s){return e<s.start?-1:e>=s.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=h6(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function h6(n,e){let t=0,r=n.length;for(;t<=r;){const s=Math.floor((r-t)/2)+t,i=e(n[s]);if(i===0)return s;i<0?r=s:t=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(){q().set("PROD",!0)}function f6(){q().set("DEBUG",!0)}function m6(){q().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function g6(n){q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function y6(){W.disposeVariables()}function Dt(){return W}function _0(){return W.memory()}function b6(n){return W.profile(n)}function j(n,e){return W.tidy(n,e)}function Je(n){Fa(n).forEach(e=>e.dispose())}function un(n){return W.keep(n)}function x6(n){return W.time(n)}function v6(n){return W.setBackend(n)}function w6(){return W.ready()}function Kz(){return W.backendName}function S6(n){W.removeBackend(n)}function T6(n){return W.findBackend(n)}function I6(n){return W.findBackendFactory(n)}function qT(n,e,t=1){return W.registerBackend(n,e,t)}function Ki(){return W.backend}function k6(n,e){q().setPlatform(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wo=4;async function HS(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const o=s[a],l=Array.isArray(n)?n[a].tensor:n[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);const u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async d=>{const h=await l.bytes(),p=h.reduce((m,y)=>m+y.length,0)+Wo*h.length,g=new Uint8Array(p);let f=0;for(let m=0;m<h.length;m++){const y=h[m],b=new Uint8Array(new Uint32Array([y.length]).buffer);g.set(b,f),f+=Wo,g.set(y,f),f+=y.length}d(g)});r.push(c)}else r.push(l.data());e!=null&&(u.group=e),t.push(u)}const i=await Promise.all(r);return{data:M6(i),specs:t}}function eI(n,e){const t=new Mi(n),r={};let s=0;for(const i of e){const a=C6(i,(o,l)=>t.slice(s+o,s+l));r[i.name]=Yz(i,t.slice(s,s+a)),s+=a}return r}function C6(n,e){const t=ie(n.shape);let r;if("quantization"in n){const s=n.quantization;r=iu[s.dtype]}else if(n.dtype==="string"){let s=0;for(let i=0;i<t;i++)s+=Wo+new Uint32Array(e(s,s+Wo))[0];return s}else r=iu[n.dtype];return t*r}async function _6(n,e){const t=ie(n.shape);let r;if("quantization"in n){const s=n.quantization;r=iu[s.dtype]}else if(n.dtype==="string"){let s=0;for(let i=0;i<t;i++)s+=Wo+new Uint32Array(await e(s,s+Wo))[0];return s}else r=iu[n.dtype];return t*r}function Yz(n,e){const t=n.name,r=n.dtype,s=n.shape,i=ie(s);let a,o=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=iu[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){a=new Float32Array(c.length);for(let d=0;d<c.length;d++){const h=c[d];a[d]=h*l.scale+l.min}}else if(l.dtype==="float16")a=z6()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(r==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);a=new Int32Array(c.length);for(let d=0;d<c.length;d++){const h=c[d];a[d]=Math.round(h*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);o+=i*u}else if(r==="string"){const l=ie(n.shape);a=[];for(let u=0;u<l;u++){const c=new Uint32Array(e.slice(o,o+Wo))[0];o+=Wo;const d=new Uint8Array(e.slice(o,o+c));a.push(d),o+=c}}else{const l=iu[r];if(r==="float32")a=new Float32Array(e);else if(r==="int32")a=new Int32Array(e);else if(r==="bool")a=new Uint8Array(e);else if(r==="complex64"){a=new Float32Array(e);const u=new Float32Array(a.length/2),c=new Float32Array(a.length/2);for(let g=0;g<u.length;g++)u[g]=a[g*2],c[g]=a[g*2+1];const d=Kt(u,s,"float32"),h=Kt(c,s,"float32"),p=Ga(d,h);return d.dispose(),h.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);o+=i*l}return Kt(a,s,r)}async function GE(n,e,t){let r=new Uint8Array(e);for(;r.byteLength<t;){const{done:s,value:i}=await n.read();if(s&&i==null){const o=t-r.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}const a=new Uint8Array(r.length+i.byteLength);a.set(r,0),a.set(new Uint8Array(i),r.length),r=a}return r.buffer}async function jz(n,e){const t={},r=n.getReader();let s=new ArrayBuffer(0);for(const i of e){const a=await _6(i,async(u,c)=>(s=await GE(r,s,c),s.slice(u,c)));s=await GE(r,s,a);const o=s.slice(0,a);s=s.slice(a);const l=Yz(i,o);if(t[i.name]=l,Kz()==="webgpu"){const u=Ki();"uploadToGPU"in u&&ie(l.shape)>=q().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return t}function M6(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(i=>{if(e+=i.byteLength,t.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(i=>{r.set(new Uint8Array(i.buffer),s),s+=i.byteLength}),r.buffer}const tI=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function OE(n){return tI?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function N6(n){if(tI)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function E6(n){if(tI){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function Qz(n){return Mi.join(n)}function WE(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function Jz(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function nI(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}async function rI(n,e){let t,r;return n.weightsManifest!=null&&([t,r]=await e(n.weightsManifest)),nI(n,t,r)}function Pm(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:OE(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:OE(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Mi(n.weightData).byteLength}}function M0(n){const e=[];for(const t of n)e.push(...t.weights);return e}function R6(){const n=t=>{let r=t<<13,s=0;for(;!(r&8388608);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function L6(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function A6(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function z6(){const n=R6(),e=L6(),t=A6();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let a=0;a<r.length;a++){const o=r[a],l=n[t[o>>10]+(o&1023)]+e[o>>10];i[a]=l}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Jt.instance==null&&(Jt.instance=new Jt),Jt.instance}static registerSaveRouter(e){Jt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Jt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Jt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Jt.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?Jt.getInstance().loadRouters:Jt.getInstance().saveRouters).forEach(i=>{const a=i(e,r);a!==null&&s.push(a)}),s}}const D6=n=>Jt.registerSaveRouter(n),P6=n=>Jt.registerLoadRouter(n),qz=n=>Jt.getSaveHandlers(n),eD=(n,e)=>Jt.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KS="tensorflowjs",YS=1,Fl="models_store",xo="model_info_store";function tD(){if(!q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function jS(n){const e=n.result;e.createObjectStore(Fl,{keyPath:"modelPath"}),e.createObjectStore(xo,{keyPath:"modelPath"})}class au{constructor(e){if(this.indexedDB=tD(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const i=this.indexedDB.open(KS,YS);i.onupgradeneeded=()=>jS(i),i.onsuccess=()=>{const a=i.result;if(t==null){const o=a.transaction(Fl,"readonly"),l=o.objectStore(Fl).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(l.result.modelArtifacts)},l.onerror=u=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{t.weightData=Mi.join(t.weightData);const o=Pm(t),l=a.transaction(xo,"readwrite");let u=l.objectStore(xo),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(h){return s(h)}let d;c.onsuccess=()=>{d=a.transaction(Fl,"readwrite");const h=d.objectStore(Fl);let p;try{p=h.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o})}catch(g){return s(g)}p.onsuccess=()=>r({modelArtifactsInfo:o}),p.onerror=g=>{u=l.objectStore(xo);const f=u.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(p.error)),f.onerror=m=>(a.close(),s(p.error))}},c.onerror=h=>(a.close(),s(c.error)),l.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},i.onerror=a=>s(i.error)})}}au.URL_SCHEME="indexeddb://";const nD=n=>q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(au.URL_SCHEME)?$6(n.slice(au.URL_SCHEME.length)):null;Jt.registerSaveRouter(nD);Jt.registerLoadRouter(nD);function $6(n){return new au(n)}function F6(n){return n.startsWith(au.URL_SCHEME)?n.slice(au.URL_SCHEME.length):n}class G6{constructor(){this.indexedDB=tD()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(KS,YS);r.onupgradeneeded=()=>jS(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(xo,"readonly"),a=i.objectStore(xo).getAll();a.onsuccess=()=>{const o={};for(const l of a.result)o[l.modelPath]=l.modelArtifactsInfo;e(o)},a.onerror=o=>(s.close(),t(a.error)),i.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=F6(e),new Promise((t,r)=>{const s=this.indexedDB.open(KS,YS);s.onupgradeneeded=()=>jS(s),s.onsuccess=()=>{const i=s.result,a=i.transaction(xo,"readwrite"),o=a.objectStore(xo),l=o.get(e);let u;l.onsuccess=()=>{if(l.result==null)return i.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=o.delete(e),d=()=>{u=i.transaction(Fl,"readwrite");const h=u.objectStore(Fl).delete(e);h.onsuccess=()=>t(l.result.modelArtifactsInfo),h.onerror=p=>r(l.error)};c.onsuccess=d,c.onerror=h=>(d(),i.close(),r(l.error))}},l.onerror=c=>(i.close(),r(l.error)),a.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},s.onerror=i=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka="/",uc="tensorflowjs_models",rD="info",O6="model_topology",W6="weight_specs",V6="weight_data",B6="model_metadata";function sD(n){return{info:[uc,n,rD].join(ka),topology:[uc,n,O6].join(ka),weightSpecs:[uc,n,W6].join(ka),weightData:[uc,n,V6].join(ka),modelMetadata:[uc,n,B6].join(ka)}}function iD(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function X6(n){const e=n.split(ka);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(ka)}function U6(n){return n.startsWith(ou.URL_SCHEME)?n.slice(ou.URL_SCHEME.length):n}class ou{constructor(e){if(!q().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=sD(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Pm(e),i=Mi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,N6(i));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw iD(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const o=JSON.parse(i);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(t.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=E6(a),t}}ou.URL_SCHEME="localstorage://";const aD=n=>q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ou.URL_SCHEME)?Z6(n.slice(ou.URL_SCHEME.length)):null;Jt.registerSaveRouter(aD);Jt.registerLoadRouter(aD);function Z6(n){return new ou(n)}class H6{constructor(){M(q().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=uc+ka,r=ka+rD;for(let s=0;s<this.LS.length;++s){const i=this.LS.key(s);if(i.startsWith(t)&&i.endsWith(r)){const a=X6(i);e[a]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=U6(e);const t=sD(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return iD(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pc="://";let Vo=class ao{constructor(){this.managers={}}static getInstance(){return ao.instance==null&&(ao.instance=new ao),ao.instance}static registerManager(e,t){M(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Pc)&&(e=e.slice(0,e.indexOf(Pc))),M(e.length>0,()=>"scheme must not be an empty string.");const r=ao.getInstance();M(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=ao.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ao.getInstance().managers)}};function Gy(n){if(n.indexOf(Pc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Vo.getSchemes().join(",")}`);return{scheme:n.split(Pc)[0],path:n.split(Pc)[1]}}async function oD(n,e,t=!1){M(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=Jt.getLoadHandlers(n);M(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),M(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],i=Jt.getSaveHandlers(e);M(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),M(i.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=i[0],o=Gy(n).scheme,l=Gy(n).path,u=o===Gy(n).scheme,c=await s.load();t&&u&&await Vo.getManager(o).removeModel(l);const d=await a.save(c);return t&&!u&&await Vo.getManager(o).removeModel(l),d.modelArtifactsInfo}async function K6(){const n=Vo.getSchemes(),e={};for(const t of n){const r=await Vo.getManager(t).listModels();for(const s in r){const i=t+Pc+s;e[i]=r[s]}}return e}async function Y6(n){const e=Gy(n);return Vo.getManager(e.scheme).removeModel(e.path)}async function j6(n,e){return oD(n,e,!1)}async function Q6(n,e){return oD(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J6{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!q().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return Ez(e)}}if(q().get("IS_BROWSER")){q().setPlatform("browser",new J6);try{Vo.registerManager(ou.URL_SCHEME,new H6)}catch{}try{Vo.registerManager(au.URL_SCHEME,new G6)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6={importFetch:()=>require("node-fetch")};let sw;class eY{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return q().global.fetch!=null?q().global.fetch(e,t):(sw==null&&(sw=q6.importFetch()),sw(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}q().get("IS_NODE")&&!q().get("IS_BROWSER")&&q().setPlatform("node",new eY);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rt(n,e="float32",t){return e=e||"float32",ps(n),new In(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(n,e){const t=N(n,"x","cast");if(!vz(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return W.runKernel(kd,r,s)}const Te=V({cast_:tY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nY(n){const e={x:N(n,"x","clone","string_or_numeric")};return W.runKernel(Fd,e)}const na=V({clone_:nY});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sI(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Zz();const rY={buffer:rt,cast:Te,clone:na,print:sI};n6(rY);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n,e){let t=N(n,"a","add"),r=N(e,"b","add");[t,r]=nn(t,r);const s={a:t,b:r};return W.runKernel(Mu,s)}const me=V({add_:sY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n,e){let t=N(n,"a","floorDiv"),r=N(e,"b","floorDiv");[t,r]=nn(t,r);const s={a:t,b:r};return W.runKernel(Pd,s)}const Nx=V({floorDiv_:iY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(n,e){let t=N(n,"a","div"),r=N(e,"b","div");if([t,r]=nn(t,r),t.dtype==="int32"&&r.dtype==="int32")return Nx(t,r);const s={a:t,b:r},i={};return W.runKernel(Ed,s,i)}const Fe=V({div_:aY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(n,e){let t=N(n,"a","mul"),r=N(e,"b","mul");[t,r]=nn(t,r);const s={a:t,b:r};return W.runKernel(Hd,s)}const Z=V({mul_:oY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(n){const e=N(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return W.runKernel(Wf,t)}else{const t={x:e};return W.runKernel(Lf,t)}}const vn=V({abs_:lY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(n){const e={x:N(n,"x","acos")};return W.runKernel(bd,e)}const iI=V({acos_:uY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cY(n){const e={x:N(n,"x","acosh")};return W.runKernel(xd,e)}const aI=V({acosh_:cY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(n,e=null,t=!1){const r={x:N(n,"x","all","bool")},s={axis:e,keepDims:t};return W.runKernel(Sb,r,s)}const Ex=V({all_:dY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY(n,e=null,t=!1){const r={x:N(n,"x","any","bool")},s={axis:e,keepDims:t};return W.runKernel(Tb,r,s)}const hf=V({any_:hY});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY(n,e=0){const t={x:N(n,"x","argMax")},r={axis:e};return W.runKernel(zf,t,r)}const lu=V({argMax_:pY});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(n,e=0){const t={x:N(n,"x","argMin")},r={axis:e};return W.runKernel(Df,t,r)}const oI=V({argMin_:fY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(n){const e={x:N(n,"x","asin")};return W.runKernel(vd,e)}const lI=V({asin_:mY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gY(n){const e={x:N(n,"x","asinh")};return W.runKernel(wd,e)}const uI=V({asinh_:gY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(n){const e={x:N(n,"x","atan")};return W.runKernel(Sd,e)}const cI=V({atan_:yY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bY(n,e){let t=N(n,"a","atan2"),r=N(e,"b","atan2");[t,r]=nn(t,r);const s={a:t,b:r};return W.runKernel(Id,s)}const dI=V({atan2_:bY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xY(n){const e={x:N(n,"x","atanh")};return W.runKernel(Td,e)}const hI=V({atanh_:xY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $m(n,e,t,r,s="NHWC",i){const a=n[3],o=[...e,a],l=Ya(s);return Xn(n,o,t,i,r,null,null,l)}function ti(n,e,t,r,s,i,a="channelsLast"){const[o,l]=pf(e);let u;if(a==="channelsLast")u=[o,l,n[3],n[3]];else if(a==="channelsFirst")u=[o,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Xn(n,u,t,r,s,i,!1,a)}function Ka(n,e,t,r,s,i,a="NDHWC"){const[o,l,u]=QS(e);let c,d;if(a==="NDHWC")d="channelsLast",c=[o,l,u,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",c=[o,l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return rl(n,c,t,r,s,!1,d,i)}function Xn(n,e,t,r,s,i,a=!1,o="channelsLast"){let[l,u,c,d]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,d]=n;else if(o==="channelsFirst")[l,d,u,c]=n;else throw new Error(`Unknown dataFormat ${o}`);const[h,p,,g]=e,[f,m]=pf(t),[y,b]=pf(r),x=$c(h,y),v=$c(p,b),{padInfo:w,outHeight:T,outWidth:k}=SY(s,u,c,f,m,x,v,i,o),S=a?g*d:g;let C;return o==="channelsFirst"?C=[l,S,T,k]:o==="channelsLast"&&(C=[l,T,k,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:d,outHeight:T,outWidth:k,outChannels:S,padInfo:w,strideHeight:f,strideWidth:m,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:n,outShape:C,filterShape:e}}function rl(n,e,t,r,s,i=!1,a="channelsLast",o){let[l,u,c,d,h]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,d,h]=n;else if(a==="channelsFirst")[l,h,u,c,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,g,f,,m]=e,[y,b,x]=QS(t),[v,w,T]=QS(r),k=$c(p,v),S=$c(g,w),C=$c(f,T),{padInfo:_,outDepth:z,outHeight:P,outWidth:R}=TY(s,u,c,d,y,b,x,k,S,C,o),A=i?m*h:m;let F;return a==="channelsFirst"?F=[l,A,z,P,R]:a==="channelsLast"&&(F=[l,z,P,R,A]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:d,inChannels:h,outDepth:z,outHeight:P,outWidth:R,outChannels:A,padInfo:_,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:g,filterWidth:f,effectiveFilterDepth:k,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:T,inShape:n,outShape:F,filterShape:e}}function vY(n,e,t,r,s){r==null&&(r=pI(n,e,t));const i=n[0],a=n[1],o=ff((i-e+2*r)/t+1,s),l=ff((a-e+2*r)/t+1,s);return[o,l]}function wY(n,e,t,r,s,i){s==null&&(s=pI(n,e[0],r[0]));const a=[0,0,0,t];for(let o=0;o<3;o++)n[o]+2*s>=e[o]&&(a[o]=ff((n[o]-e[o]+2*s)/r[o]+1,i));return a}function pI(n,e,t,r=1){const s=$c(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function pf(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function QS(n){return typeof n=="number"?[n,n,n]:n}function $c(n,e){return e<=1?n:n+(n-1)*(e-1)}function SY(n,e,t,r,s,i,a,o,l){let u,c,d;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const h=vY([e,t],i,r,n,o);c=h[0],d=h[1]}else if(n==="same"){c=Math.ceil(e/r),d=Math.ceil(t/s);const h=Math.max(0,(c-1)*r+i-e),p=Math.max(0,(d-1)*s+a-t),g=Math.floor(h/2),f=h-g,m=Math.floor(p/2),y=p-m;u={top:g,bottom:f,left:m,right:y,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),d=Math.ceil((t-a+1)/s);else if(typeof n=="object"){const h=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],g=l==="channelsLast"?n[2][0]:n[3][0],f=l==="channelsLast"?n[2][1]:n[3][1];u={top:h,bottom:p,left:g,right:f,type:h===0&&p===0&&g===0&&f===0?"VALID":"EXPLICIT"},c=ff((e-i+h+p)/r+1,o),d=ff((t-a+g+f)/s+1,o)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:c,outWidth:d}}function TY(n,e,t,r,s,i,a,o,l,u,c){let d,h,p,g;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const f=wY([e,t,r,1],[o,l,u],1,[s,i,a],n,c);h=f[0],p=f[1],g=f[2]}else if(n==="same"){h=Math.ceil(e/s),p=Math.ceil(t/i),g=Math.ceil(r/a);const f=(h-1)*s+o-e,m=(p-1)*i+l-t,y=(g-1)*a+u-r,b=Math.floor(f/2),x=f-b,v=Math.floor(m/2),w=m-v,T=Math.floor(y/2),k=y-T;d={top:v,bottom:w,left:T,right:k,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:g}}function ff(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Bo(n){const[e,t,r]=pf(n);return e===1&&t===1&&r===1}function or(n,e){return Bo(n)||Bo(e)}function uu(n){return pf(n).every(e=>e>0)}function Ya(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Mr(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")M(su(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{M(su(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IY(n,e){const t={x:N(n,"x","reshape","string_or_numeric")},r={shape:e};return W.runKernel(wm,t,r)}const H=V({reshape_:IY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kY(n,e,t,r,s){const i=N(n,"x","avgPool","float32"),a=1;M(or(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let o=i,l=!1;i.rank===3&&(l=!0,o=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Mr("avgPool",r,s);const u={x:o},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let d=W.runKernel(Pf,u,c);return d=Te(d,i.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Fm=V({avgPool_:kY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n,e,t,r,s,i="NDHWC"){const a=N(n,"x","avgPool3d","float32");let o=a,l=!1;a.rank===4&&(l=!0,o=H(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),M(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),M(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),M(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Mr("avgPool3d",r,s);const u={x:o},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:i};let d=W.runKernel($f,u,c);return d=Te(d,o.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const fI=V({avgPool3d_:CY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(n,e=0){M(n.length>=1,()=>"Pass at least one tensor to concat");const t=df(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),t.length===1)return na(t[0]);const r=t,s={axis:e};return W.runKernel(Vf,r,s)}const pn=V({concat_:_Y});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MY(n,e,t=!1,r=!1){let s=N(n,"a","matMul"),i=N(e,"b","matMul");[s,i]=nn(s,i);const a={a:s,b:i},o={transposeA:t,transposeB:r};return W.runKernel(Ff,a,o)}const ot=V({matMul_:MY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NY(n){const e={x:N(n,"x","sigmoid","float32")};return W.runKernel(sh,e)}const xi=V({sigmoid_:NY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EY(n,e,t){const r=N(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:t};return W.runKernel(Cm,s,i)}const gt=V({slice_:EY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RY(n){const e={x:N(n,"x","tanh","float32")};return W.runKernel(ch,e)}const cu=V({tanh_:RY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(n,e,t){const r=N(n,"x","batchToSpaceND"),s=e.reduce((o,l)=>o*l);M(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),M(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),M(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const i={x:r},a={blockShape:e,crops:t};return W.runKernel(Gf,i,a)}const Gm=V({batchToSpaceND_:LY});function AY(n){let e;return n.rank===0||n.rank===1?e=H(n,[1,1,1,n.size]):n.rank===2?e=H(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=H(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(n,e,t,r,s,i){i==null&&(i=.001);const a=N(n,"x","batchNorm"),o=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let u;s!=null&&(u=N(s,"scale","batchNorm"));let c;r!=null&&(c=N(r,"offset","batchNorm")),M(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:AY(a),scale:u,offset:c,mean:o,variance:l},h={varianceEpsilon:i},p=W.runKernel(Qf,d,h);return H(p,a.shape)}const ph=V({batchNorm_:zY});function DY(n,e,t,r,s,i){const a=N(n,"x","batchNorm"),o=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let u;s!=null&&(u=N(s,"scale","batchNorm"));let c;return r!=null&&(c=N(r,"offset","batchNorm")),M(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),M(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),M(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&M(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&M(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),ph(a,o,l,c,u,i)}const mI=V({batchNorm2d_:DY});function PY(n,e,t,r,s,i){const a=N(n,"x","batchNorm"),o=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let u;s!=null&&(u=N(s,"scale","batchNorm"));let c;return r!=null&&(c=N(r,"offset","batchNorm")),M(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),M(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),M(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&M(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&M(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),ph(a,o,l,c,u,i)}const gI=V({batchNorm3d_:PY});function $Y(n,e,t,r,s,i){const a=N(n,"x","batchNorm"),o=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let u;s!=null&&(u=N(s,"scale","batchNorm"));let c;return r!=null&&(c=N(r,"offset","batchNorm")),M(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),M(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),M(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&M(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&M(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),ph(a,o,l,c,u,i)}const yI=V({batchNorm4d_:$Y});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(n,e,t){const r=N(n,"x","bincount"),s=N(e,"weights","bincount");M(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),M(t>=0,()=>`size must be non-negative, but got ${t}.`),M(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const i={x:r,weights:s},a={size:t};return W.runKernel(Cb,i,a)}const bI=V({bincount_:FY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(n,e){let t=N(n,"broadcastTo","x");const r=t.shape;if(ps(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=H(t,l)}const s=t.shape,i=Array.from(e);for(let l=e.length-1;l>=0;l--)if(s[l]===e[l])i[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(i.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return na(t);const a={x:t},o={reps:i};return W.runKernel(dh,a,o)}const Ul=V({broadcastTo_:GY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OY(n){const e={x:N(n,"x","ceil","float32")};return W.runKernel(Cd,e)}const xI=V({ceil_:OY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ru(n,e,t){ps(n),t=t||Cu(e);const r={shape:n,value:e,dtype:t};return W.runKernel(Bb,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(n,e,t){const r=N(n,"x","clipByValue");if(M(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Ru(r.shape,e,r.dtype);const s={x:r},i={clipValueMin:e,clipValueMax:t};return W.runKernel(_d,s,i)}const Xr=V({clipByValue_:WY});function VY(n){return pn(n,0)}const vI=V({concat1d_:VY});function BY(n,e){return pn(n,e)}const wI=V({concat2d_:BY});function XY(n,e){return pn(n,e)}const SI=V({concat3d_:XY});function UY(n,e){return pn(n,e)}const TI=V({concat4d_:UY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(n,e,t,r,s="NHWC",i=[1,1],a){const o=N(n,"x","conv2d","float32"),l=N(e,"filter","conv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),M(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Mr("conv2d",r,a);const d=s==="NHWC"?u.shape[3]:u.shape[1];M(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),M(or(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),M(uu(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),M(uu(t),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:u,filter:l},p={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},g=W.runKernel(Bf,h,p);return c?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Oa=V({conv2d_:ZY});function HY(n,e,t,r,s="NWC",i=1,a){const o=N(n,"x","conv1d"),l=N(e,"filter","conv1d");let u=o,c=!1;o.rank===2&&(c=!0,u=H(o,[1,o.shape[0],o.shape[1]])),M(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),M(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Mr("conv1d",r,a),M(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),M(or(t,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${i}'`),M(uu(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),M(uu(t),()=>"Error in conv1D: Stride should be larger than 0."),M(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const d=H(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=H(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Oa(h,d,[1,t],r,"NHWC",[1,i],a);return c?H(p,[p.shape[2],p.shape[3]]):H(p,[p.shape[0],p.shape[2],p.shape[3]])}const Rx=V({conv1d_:HY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n,e,t,r,s,i="NHWC",a){M(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,l=e,u=!1;e.rank===3&&(u=!0,l=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,n[0],n[1],n[2]]),M(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),M(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),M(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const c=i==="NHWC"?o[3]:o[1],d=i==="NHWC"?l.shape[3]:l.shape[1];M(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),M(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),Mr("conv2dDerInput",s,a);const h={dy:l,filter:t},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},g=W.runKernel(Xf,h,p);return u?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const II=V({conv2DBackpropInput_:KY});function YY(n,e,t,r,s,i){const a=N(n,"x","conv2dTranspose"),o=N(e,"filter","conv2dTranspose");return II(t,a,o,r,s,"NHWC",i)}const Lx=V({conv2dTranspose_:YY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jY(n,e,t,r,s="NDHWC",i=[1,1,1]){const a=N(n,"x","conv3d"),o=N(e,"filter","conv3d");let l=a,u=!1;a.rank===4&&(u=!0,l=H(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),M(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),M(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),M(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),M(or(t,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),M(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),M(uu(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),M(uu(t),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:o},d={strides:t,pad:r,dataFormat:s,dilations:i},h=W.runKernel(Uf,c,d);return u?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const kI=V({conv3d_:jY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QY(n,e,t,r,s){M(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,a=e,o=!1;e.rank===4&&(o=!0,a=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],u=a.shape[4];M(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),M(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),M(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),M(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),M(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const c={dy:a,filter:t},d={pad:s,strides:r,inputShape:i},h=W.runKernel(Rb,c,d);return o?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const lD=V({conv3DBackpropInput_:QY});function JY(n,e,t,r,s){const i=N(n,"x","conv3dTranspose"),a=N(e,"filter","conv3dTranspose");return lD(t,i,a,r,s)}const CI=V({conv3dTranspose_:JY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qY(n){const e={x:N(n,"x","cos","float32")};return W.runKernel(Md,e)}const Om=V({cos_:qY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ej(n){const e={x:N(n,"x","cosh","float32")};return W.runKernel(Nd,e)}const Ax=V({cosh_:ej});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tj(n,e=0,t=!1,r=!1){const s={x:N(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:r};return W.runKernel(Lb,s,i)}const mf=V({cumprod_:tj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(n,e=0,t=!1,r=!1){const s={x:N(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:r};return W.runKernel(Zf,s,i)}const zx=V({cumsum_:nj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rj(n,e,t,r=!1){const s=N(n,"x","denseBincount"),i=N(e,"weights","denseBincount");M(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),M(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),M(t>=0,()=>`size must be non-negative, but got ${t}.`),M(i.size===s.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`);const a={x:s,weights:i},o={size:t,binaryOutput:r};return W.runKernel(zb,a,o)}const N0=V({denseBincount_:rj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sj(n,e,t="NHWC"){const r=N(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],i=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];M(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),M(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),M(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${r.shape}`),M(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const o={x:r},l={blockSize:e,dataFormat:t};return W.runKernel(Db,o,l)}const _I=V({depthToSpace_:sj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ij(n,e,t,r,s="NHWC",i=[1,1],a){const o=N(n,"x","depthwiseConv2d","float32"),l=N(e,"filter","depthwiseConv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),M(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const d=s==="NHWC"?u.shape[3]:u.shape[1];M(d===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`),Mr("depthwiseConv2d",r,a);const h={x:u,filter:l},p={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},g=W.runKernel(Hf,h,p);return c?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const fh=V({depthwiseConv2d_:ij});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aj(n,e,t,r,s=[1,1],i="NHWC"){const a=N(n,"x","dilation2d"),o=N(e,"filter","dilation2d");M(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),M(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),M(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=a,u=!1;a.rank===3&&(l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),M(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const c={x:l,filter:o},d={strides:t,pad:r,dilations:s},h=W.runKernel(Kf,c,d);return u?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const MI=V({dilation2d_:aj});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function du(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const i=t-1-s,a=n[i]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(i)}return r}function kn(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],i=e.length-r-1,a=e[i];(s==null||s===1&&a>1)&&t.unshift(i)}return t}function qe(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let s=0;s<t;s++){let i=n[n.length-s-1];i==null&&(i=1);let a=e[e.length-s-1];if(a==null&&(a=1),i===1)r[t-s-1]=a;else if(a===1)r[t-s-1]=i;else if(i!==a){const o=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(o)}else r[t-s-1]=i}return r}const oj=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:qe,getBroadcastDims:du,getReductionAxes:kn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lj(n,e){let t=N(n,"a","equal","string_or_numeric"),r=N(e,"b","equal","string_or_numeric");[t,r]=nn(t,r),qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(Yf,s)}const us=V({equal_:lj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uj(n,e,t){const r=N(e,"a","where"),s=N(t,"b","where"),i=N(n,"condition","where","bool"),a=qe(qe(i.shape,r.shape),s.shape),o=Ul(i,a),l=Ul(r,a),u=Ul(s,a),c={condition:o,t:l,e:u};return W.runKernel(km,c)}const Gn=V({where_:uj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cj(n){const e={x:N(n,"x","zerosLike")};return W.runKernel(zm,e)}const yt=V({zerosLike_:cj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dj(n,e){let t=N(n,"a","div"),r=N(e,"b","div");[t,r]=nn(t,r);const s=Fe(t,r),i=yt(s),a=us(r,i);return Gn(a,i,s)}const NI=V({divNoNan_:dj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hj(n,e){const t=N(n,"t1","dot"),r=N(e,"t2","dot");M((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],i=r.rank===1?r.size:r.shape[0];if(M(s===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`),t.rank===1&&r.rank===1){const a=H(t,[1,-1]),o=H(r,[-1,1]),l=ot(a,o);return H(l,[])}else if(t.rank===1&&r.rank===2){const a=H(t,[1,-1]),o=H(r,[r.shape[0],r.shape[1]]),l=ot(a,o);return H(l,[l.size])}else if(t.rank===2&&r.rank===1){const a=H(r,[-1,1]),o=ot(t,a);return H(o,[o.size])}else{const a=H(r,[r.shape[0],r.shape[1]]);return ot(t,a)}}const EI=V({dot_:hj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pj(n,...e){const t=e.map((s,i)=>N(s,`tensors${i}`,"einsum")),r={equation:n};return W.runKernel(Ob,t,r)}const _l=V({einsum_:pj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fj(n){const e={x:N(n,"x","elu","float32")};return W.runKernel(Rd,e)}const mh=V({elu_:fj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mj(n){let e=N(n,"x","erf");M(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Te(e,"float32"));const t={x:e};return W.runKernel(Ld,t)}const RI=V({erf_:mj});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LI(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function uD(n,e,t){const r=n.length+e.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)t.indexOf(o)===-1?s.push(n[i++]):s.push(e[a++]);return s}function Un(n,e){const t=[],r=n.length;for(let i=0;i<r;i++)e.indexOf(i)===-1&&t.push(n[i]);const s=e.map(i=>n[i]);return[t,s]}function fn(n,e){const t=e.map(r=>1);return uD(n,t,e)}function lr(n,e,t){M(LI(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function rn(n,e){if(LI(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function sl(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function mn(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gj(n,e=null,t=!1){const r={x:N(n,"x","max")},s={reductionIndices:e,keepDims:t};return W.runKernel(om,r,s)}const Es=V({max_:gj});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yj(n,e=null,t=!1){const r={x:N(n,"x","min")},s={axis:e,keepDims:t};return W.runKernel(dm,r,s)}const ed=V({min_:yj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bj(n,e){let t=N(n,"base","pow"),r=N(e,"exp","pow");[t,r]=nn(t,r);const s={a:t,b:r};return W.runKernel(Kd,s)}const Wa=V({pow_:bj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(n,e){if((Nn(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Nn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return nl(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xj(n){const e={x:N(n,"x","sqrt","float32")};return W.runKernel(ah,e)}const ir=V({sqrt_:xj});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(n){const e=N(n,"x","square"),t={};return W.runKernel("Square",{x:e},t)}const Lt=V({square_:vj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wj(n,e=null,t=!1){let r=N(n,"x","sum");r.dtype==="bool"&&(r=Te(r,"int32"));const s={x:r},i={axis:e,keepDims:t};return W.runKernel(_m,s,i)}const Ae=V({sum_:wj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sj(n,e="euclidean",t=null,r=!1){n=N(n,"x","norm");const s=cD(n,e,t);let i=s.shape;if(r){const a=lt(t,n.shape);i=fn(s.shape,a)}return H(s,i)}function cD(n,e,t=null){if(n.rank===0)return vn(n);if(n.rank!==1&&t===null)return cD(H(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ae(vn(n),t);if(e===1/0)return Es(vn(n),t);if(e===-1/0)return ed(vn(n),t);if(e==="euclidean"||e===2)return ir(Ae(Wa(vn(n),Ve(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Es(Ae(vn(n),t[0]),t[1]-1);if(e===1/0)return Es(Ae(vn(n),t[1]),t[0]);if(e===-1/0)return ed(Ae(vn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return ir(Ae(Lt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const gh=V({norm_:Sj});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tj(n,e=null,t=!1){return gh(n,"euclidean",e,t)}const AI=V({euclideanNorm_:Tj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ij(n){const e={x:N(n,"x","exp")};return W.runKernel(Ad,e)}const Ur=V({exp_:Ij});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kj(n,e=0){const t=N(n,"x","expandDims","string_or_numeric");M(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return W.runKernel(jf,r,s)}const Jn=V({expandDims_:kj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cj(n){const e={x:N(n,"x","expm1")};return W.runKernel(zd,e)}const zI=V({expm1_:Cj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _j(n,e){const t=N(n,"x","tile","string_or_numeric");M(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return W.runKernel(dh,r,s)}const Ts=V({tile_:_j});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mj(n,e,t,r="float32"){e==null&&(e=n);const s=rt([n,e],r),i=n<=e?n:e;for(let o=0;o<i;++o)s.set(1,o,o);const a=H(s.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return Ts(Jn(a,0),[t[0],1,1]);if(t.length===2)return Ts(Jn(Jn(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Ts(Jn(Jn(Jn(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Dx=V({eye_:Mj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(n){const e={x:N(n,"x","floor","float32")};return W.runKernel(Dd,e)}const yh=V({floor_:Nj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ej(n,e,t=0,r=0){const s=N(n,"x","gather"),i=N(e,"indices","gather","int32"),a={x:s,indices:i},o={axis:t,batchDims:r};return W.runKernel(Jf,a,o)}const bh=V({gather_:Ej});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(n,e){let t=N(n,"a","greater","string_or_numeric"),r=N(e,"b","greater","string_or_numeric");[t,r]=nn(t,r),qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(qf,s)}const Nr=V({greater_:Rj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lj(n,e){let t=N(n,"a","greaterEqual","string_or_numeric"),r=N(e,"b","greaterEqual","string_or_numeric");[t,r]=nn(t,r),qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel($d,s)}const ja=V({greaterEqual_:Lj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aj(n){const e={input:N(n,"input","imag")};return W.runKernel(Hb,e)}const Wm=V({imag_:Aj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zj(n){const e={x:N(n,"x","isFinite")};return W.runKernel(Gd,e)}const DI=V({isFinite_:zj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dj(n){const e={x:N(n,"x","isInf")};return W.runKernel(Od,e)}const PI=V({isInf_:Dj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n){const e={x:N(n,"x","isNaN")};return W.runKernel(Wd,e)}const $I=V({isNaN_:Pj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(n,e=.2){const t={x:N(n,"x","leakyRelu")},r={alpha:e};return W.runKernel(em,t,r)}const Vm=V({leakyRelu_:$j});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fj(n,e){let t=N(n,"a","less","string_or_numeric"),r=N(e,"b","less","string_or_numeric");[t,r]=nn(t,r),qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(tm,s)}const td=V({less_:Fj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(n,e){let t=N(n,"a","lessEqual","string_or_numeric"),r=N(e,"b","lessEqual","string_or_numeric");[t,r]=nn(t,r),qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(nm,s)}const il=V({lessEqual_:Gj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oj(n,e=5,t=1,r=1,s=.5){const i=N(n,"x","localResponseNormalization");M(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),M(su(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=i,o=!1;i.rank===3&&(o=!0,a=H(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:t,alpha:r,beta:s},c=W.runKernel(am,l,u);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const FI=V({localResponseNormalization_:Oj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wj(n){const e={x:N(n,"x","log","float32")};return W.runKernel(Vd,e)}const cs=V({log_:Wj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(n){const e={x:N(n,"x","log1p")};return W.runKernel(Bd,e)}const Bm=V({log1p_:Vj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bj(n){return M(Oo(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const r=N(e,"x","tf.grad","string_or_numeric"),s=t!=null?N(t,"dy","tf.grad"):null;return W.tidy(()=>{const{value:i,grads:a}=W.gradients(()=>n(r),[r],s);return s!=null&&ar(i.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Px(a),a[0]})}}function Xj(n){return M(Oo(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{M(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=df(e,"args","tf.grads","string_or_numeric"),s=t!=null?N(t,"dy","tf.grads"):null;return W.tidy(()=>{const{value:i,grads:a}=W.gradients(()=>n(...r),r,s);return s!=null&&ar(i.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Px(a),a})}}function Uj(n){return M(Oo(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{M(e instanceof xt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),M(t==null||t instanceof xt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=W.gradients(()=>n(e),[e],t);return Px(r),{grad:r[0],value:s}}}function Zj(n){return M(Oo(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{M(Array.isArray(e)&&e.every(s=>s instanceof xt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),M(t==null||t instanceof xt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=W.gradients(()=>n(...e),e,t);return t!=null&&ar(r.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Px(r.grads),r}}function dD(n,e){M(Oo(n),()=>"The f passed in variableGrads(f) must be a function"),M(e==null||Array.isArray(e)&&e.every(u=>u instanceof cf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in W.registeredVariables)e.push(W.registeredVariables[u])}const r=t?e.filter(u=>!u.trainable):null,s=e.length;e=e.filter(u=>u.trainable),M(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const i=!0,{value:a,grads:o}=W.gradients(n,e,null,i);M(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return e.forEach((u,c)=>{o[c]!=null&&(l[u.name]=o[c])}),r!=null&&r.forEach(u=>l[u.name]=null),{value:a,grads:l}}function oa(n){return W.customGrad(n)}function Px(n){if(n.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hj(n){const e={x:N(n,"x","neg")};return W.runKernel(pm,e)}const Gt=V({neg_:Hj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(n){const e={x:N(n,"x","softplus")};return W.runKernel(ih,e)}const Lu=V({softplus_:Kj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yj(n){const e=N(n,"x","logSigmoid");return oa(t=>({value:Gt(Lu(Gt(t))),gradFunc:r=>Z(r,xi(Gt(t)))}))(e)}const GI=V({logSigmoid_:Yj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(n,e){let t=N(n,"a","sub"),r=N(e,"b","sub");[t,r]=nn(t,r);const s={a:t,b:r};return W.runKernel(lh,s)}const Ee=V({sub_:jj});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qj(n,e=-1){const t=N(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return oa((r,s)=>{const i=Es(r,e,!0),a=Ee(r,i),o=Ee(Te(a,"float32"),cs(Ae(Ur(a),e,!0)));return s([o]),{value:o,gradFunc:(l,u)=>{const[c]=u,d=!0,h=Ur(c);return Ee(l,Z(Ae(l,e,d),h))}}})(t)}const $x=V({logSoftmax_:Qj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(n,e=null,t=!1){const r=N(n,"x","logSumExp"),s=lt(e,r.shape),i=Es(r,s,!0),a=Ee(r,i),o=Ur(a),l=Ae(o,s),u=cs(l),c=me(H(i,u.shape),u);if(t){const d=fn(c.shape,s);return H(c,d)}return c}const Xm=V({logSumExp_:Jj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qj(n,e){const t=N(n,"a","logicalAnd","bool"),r=N(e,"b","logicalAnd","bool");qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(rm,s)}const ei=V({logicalAnd_:qj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(n){const e={x:N(n,"x","logicalNot","bool")};return W.runKernel(sm,e)}const Um=V({logicalNot_:e8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(n,e){const t=N(n,"a","logicalOr","bool"),r=N(e,"b","logicalOr","bool");qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(im,s)}const Fx=V({logicalOr_:t8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n,e){const t=N(n,"a","logicalXor","bool"),r=N(e,"b","logicalXor","bool");return qe(t.shape,r.shape),ei(Fx(n,e),Um(ei(n,e)))}const OI=V({logicalXor_:n8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8(n,e,t,r,s){const i=N(n,"x","maxPool"),a=1;let o=i,l=!1;i.rank===3&&(l=!0,o=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),M(or(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Mr("maxPool",r,s);const u={x:o},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s},d=W.runKernel(lm,u,c);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Zm=V({maxPool_:r8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s8(n,e=[1,1,1],t,r,s,i="NDHWC"){const a=N(n,"x","maxPool3d");let o=a,l=!1;a.rank===4&&(l=!0,o=H(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),M(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),M(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Mr("maxPool3d",r,s);const u={x:o},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:i},d=W.runKernel(um,u,c);return l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const WI=V({maxPool3d_:s8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n,e){let t=N(n,"a","maximum"),r=N(e,"b","maximum");[t,r]=nn(t,r),t.dtype==="bool"&&(t=Te(t,"int32"),r=Te(r,"int32")),qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(Xd,s)}const ca=V({maximum_:i8});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(n,e=null,t=!1){const r={x:N(n,"x","mean")},s={axis:e,keepDims:t};return W.runKernel(cm,r,s)}const en=V({mean_:a8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(n,e="float32"){if(ps(n),e==="complex64"){const r=Sn(n,"float32"),s=Sn(n,"float32");return Ga(r,s)}const t=sr(ie(n),e);return W.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gr(n,e="float32"){if(ps(n),e==="complex64"){const r=Gr(n,"float32"),s=Sn(n,"float32");return Ga(r,s)}const t=wb(ie(n),e);return W.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8(n,e){let t=N(n,"a","minimum"),r=N(e,"b","minimum");[t,r]=nn(t,r),t.dtype==="bool"&&(t=Te(t,"int32"),r=Te(r,"int32")),qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(Ud,s)}const Xo=V({minimum_:o8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(n,e,t){M(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=N(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let o=0;o<r.rank;o++)M(e[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),M(e[o][0]>=0&&e[o][0]<=r.shape[o]-s&&e[o][1]>=0&&e[o][1]<=r.shape[o]-s,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`);const i={paddings:e,mode:t},a={x:r};return W.runKernel(hm,a,i)}const VI=V({mirrorPad_:l8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u8(n,e){let t=N(n,"a","mod"),r=N(e,"b","mod");[t,r]=nn(t,r);const s={a:t,b:r};return W.runKernel(Zd,s)}const BI=V({mod_:u8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c8(n,e=null,t=!1){n=N(n,"x","moments");const r=lt(e,n.shape),s=en(n,r,t);let i=s.shape;t||(i=fn(s.shape,r));const a=Lt(Ee(Te(n,"float32"),H(s,i))),o=en(a,r,t);return{mean:s,variance:o}}const Hm=V({moments_:c8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d8(n,e){let t=N(n,"a","notEqual","string_or_numeric"),r=N(e,"b","notEqual","string_or_numeric");[t,r]=nn(t,r),qe(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(fm,s)}const hu=V({notEqual_:d8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:N(n,"indices","oneHot","int32")},a={dtype:s,depth:e,onValue:t,offValue:r};return W.runKernel(gm,i,a)}const nd=V({oneHot_:h8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p8(n){const e={x:N(n,"x","onesLike")};return W.runKernel(mm,e)}const ds=V({onesLike_:p8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f8(n,e,t=0){const r=N(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},i={x:r};return W.runKernel(bm,i,s)}const Qa=V({pad_:f8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(n,e,t){const r=N(n,"x","spaceToBatchND");M(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),M(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),M(r.shape.reduce((a,o,l)=>l>0&&l<=e.length?a&&(o+t[l-1][0]+t[l-1][1])%e[l-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},i={blockShape:e,paddings:t};return W.runKernel(Mm,s,i)}const Km=V({spaceToBatchND_:m8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g8(n,e,t,r,s,i,a){s==null&&(s=[1,1]),i==null&&(i=1),r===0&&(r="valid");const o=N(n,"x","maxPool");let l=o,u=!1;o.rank===3&&(u=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),M(or(i,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`);const c=ti(l.shape,e,i,s,r),d=[c.dilationHeight,c.dilationWidth];let h;r==="same"?h=b8([c.filterHeight,c.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[g,f]=y8([c.inHeight,c.inWidth],d,h),m=p?r:"valid",y=p?l:Km(l,d,g),b=(t==="avg"?()=>Fm(y,e,i,m,a):()=>Zm(y,e,i,m,a))(),x=p?b:Gm(b,d,f);return u?H(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function y8(n,e,t){const r=t.map(c=>c[0]),s=t.map(c=>c[1]),i=n.concat(r,s),a=e.map((c,d)=>(c-i[d]%c)%c),o=s.map((c,d)=>c+a[d]),l=e.map((c,d)=>[r[d],o[d]]),u=e.map((c,d)=>[0,a[d]]);return[l,u]}function b8(n,e){const t=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),r=t.map(i=>Math.floor(i/2)),s=t.map((i,a)=>i-r[a]);return t.map((i,a)=>[r[a],s[a]])}const XI=V({pool_:g8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x8(n,e){const t=N(n,"x","prelu"),r=N(e,"alpha","prelu"),s={x:t,alpha:r};return W.runKernel(xm,s)}const Ym=V({prelu_:x8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(n,e=null,t=!1){let r=N(n,"x","prod");r.dtype==="bool"&&(r=Te(r,"int32"));const s={x:r},i={axis:e,keepDims:t};return W.runKernel(vm,s,i)}const UI=V({prod_:v8});var hD={exports:{}};(function(n){(function(e,t,r){function s(l){var u=this,c=o();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function i(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function a(l,u){var c=new s(l),d=u&&u.state,h=c.next;return h.int32=function(){return c.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,c),h.state=function(){return i(c,{})}),h}function o(){var l=4022871197,u=function(c){c=String(c);for(var d=0;d<c.length;d++){l+=c.charCodeAt(d);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=a:this.alea=a})(Nu,n)})(hD);var w8=hD.exports,pD={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var d=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^d^d>>>8},o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l}function a(o,l){var u=new s(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,g=(h+p)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,c&&(typeof c=="object"&&i(c,u),d.state=function(){return i(u,{})}),d}t&&t.exports?t.exports=a:this.xor128=a})(Nu,n)})(pD);var S8=pD.exports,fD={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this,u="";l.next=function(){var d=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(d^d<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l.v=o.v,l.d=o.d,l}function a(o,l){var u=new s(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,g=(h+p)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,c&&(typeof c=="object"&&i(c,u),d.state=function(){return i(u,{})}),d}t&&t.exports?t.exports=a:this.xorwow=a})(Nu,n)})(fD);var T8=fD.exports,mD={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this;l.next=function(){var c=l.x,d=l.i,h,p;return h=c[d],h^=h>>>7,p=h^h<<24,h=c[d+1&7],p^=h^h>>>10,h=c[d+3&7],p^=h^h>>>3,h=c[d+4&7],p^=h^h<<7,h=c[d+7&7],h=h^h<<13,p^=h^h<<9,c[d]=p,l.i=d+1&7,p};function u(c,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],c.x=p,c.i=0,h=256;h>0;--h)c.next()}u(l,o)}function i(o,l){return l.x=o.x.slice(),l.i=o.i,l}function a(o,l){o==null&&(o=+new Date);var u=new s(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,g=(h+p)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,c&&(c.x&&i(c,u),d.state=function(){return i(u,{})}),d}t&&t.exports?t.exports=a:this.xorshift7=a})(Nu,n)})(mD);var I8=mD.exports,gD={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this;l.next=function(){var c=l.w,d=l.X,h=l.i,p,g;return l.w=c=c+1640531527|0,g=d[h+34&127],p=d[h=h+1&127],g^=g<<13,p^=p<<17,g^=g>>>15,p^=p>>>12,g=d[h]=g^p,l.i=h,g+(c^c>>>16)|0};function u(c,d){var h,p,g,f,m,y=[],b=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,b=Math.max(b,d.length)),g=0,f=-32;f<b;++f)d&&(p^=d.charCodeAt((f+32)%d.length)),f===0&&(m=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,f>=0&&(m=m+1640531527|0,h=y[f&127]^=p+m,g=h==0?g+1:0);for(g>=128&&(y[(d&&d.length||0)&127]=-1),g=127,f=4*128;f>0;--f)p=y[g+34&127],h=y[g=g+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,y[g]=p^h;c.w=m,c.X=y,c.i=g}u(l,o)}function i(o,l){return l.i=o.i,l.w=o.w,l.X=o.X.slice(),l}function a(o,l){o==null&&(o=+new Date);var u=new s(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,g=(h+p)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,c&&(c.X&&i(c,u),d.state=function(){return i(u,{})}),d}t&&t.exports?t.exports=a:this.xor4096=a})(Nu,n)})(gD);var k8=gD.exports,yD={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this,u="";l.next=function(){var d=l.b,h=l.c,p=l.d,g=l.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^g,g=g-d|0,l.b=d=d<<20^d>>>12^h,l.c=h=h-p|0,l.d=p<<16^h>>>16^g,l.a=g-d|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,o===Math.floor(o)?(l.a=o/4294967296|0,l.b=o|0):u+=o;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function i(o,l){return l.a=o.a,l.b=o.b,l.c=o.c,l.d=o.d,l}function a(o,l){var u=new s(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,g=(h+p)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,c&&(typeof c=="object"&&i(c,u),d.state=function(){return i(u,{})}),d}t&&t.exports?t.exports=a:this.tychei=a})(Nu,n)})(yD);var C8=yD.exports,bD={exports:{}};const _8={},M8=Object.freeze(Object.defineProperty({__proto__:null,default:_8},Symbol.toStringTag,{value:"Module"})),N8=F9(M8);(function(n){(function(e,t,r){var s=256,i=6,a=52,o="random",l=r.pow(s,i),u=r.pow(2,a),c=u*2,d=s-1,h;function p(v,w,T){var k=[];w=w==!0?{entropy:!0}:w||{};var S=y(m(w.entropy?[v,x(t)]:v??b(),3),k),C=new g(k),_=function(){for(var z=C.g(i),P=l,R=0;z<u;)z=(z+R)*s,P*=s,R=C.g(1);for(;z>=c;)z/=2,P/=2,R>>>=1;return(z+R)/P};return _.int32=function(){return C.g(4)|0},_.quick=function(){return C.g(4)/4294967296},_.double=_,y(x(C.S),t),(w.pass||T||function(z,P,R,A){return A&&(A.S&&f(A,C),z.state=function(){return f(C,{})}),R?(r[o]=z,P):z})(_,S,"global"in w?w.global:this==r,w.state)}function g(v){var w,T=v.length,k=this,S=0,C=k.i=k.j=0,_=k.S=[];for(T||(v=[T++]);S<s;)_[S]=S++;for(S=0;S<s;S++)_[S]=_[C=d&C+v[S%T]+(w=_[S])],_[C]=w;(k.g=function(z){for(var P,R=0,A=k.i,F=k.j,B=k.S;z--;)P=B[A=d&A+1],R=R*s+B[d&(B[A]=B[F=d&F+P])+(B[F]=P)];return k.i=A,k.j=F,R})(s)}function f(v,w){return w.i=v.i,w.j=v.j,w.S=v.S.slice(),w}function m(v,w){var T=[],k=typeof v,S;if(w&&k=="object")for(S in v)try{T.push(m(v[S],w-1))}catch{}return T.length?T:k=="string"?v:v+"\0"}function y(v,w){for(var T=v+"",k,S=0;S<T.length;)w[d&S]=d&(k^=w[d&S]*19)+T.charCodeAt(S++);return x(w)}function b(){try{var v;return h&&(v=h.randomBytes)?v=v(s):(v=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(v)),x(v)}catch{var w=e.navigator,T=w&&w.plugins;return[+new Date,e,T,e.screen,x(t)]}}function x(v){return String.fromCharCode.apply(0,v)}if(y(r.random(),t),n.exports){n.exports=p;try{h=N8}catch{}}else r["seed"+o]=p})(typeof self<"u"?self:Nu,[],Math)})(bD);var E8=bD.exports,R8=w8,L8=S8,A8=T8,z8=I8,D8=k8,P8=C8,Au=E8;Au.alea=R8;Au.xor128=L8;Au.xorwow=A8;Au.xorshift7=z8;Au.xor4096=D8;Au.tychei=P8;var xh=Au;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZI{constructor(e,t,r,s,i){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=i||Math.random();this.random=xh.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,i,a;do s=2*this.random()-1,i=2*this.random()-1,a=s*s+i*i;while(a>=1||a===0);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*i*o,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class $8{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;const i=s||Math.random();this.randu=xh.alea(i.toString()),this.randn=new ZI(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,s,i,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),i=this.randu(),i<t||Math.log(i)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class F8{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=xh.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G8(n,e=0,t=1,r,s){if(ps(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const i=new ZI(e,t,r,!1,s),a=rt(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const Gx=V({randomNormal_:G8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(n,e=0,t=1,r="float32",s){ps(n);const i=rt(n,r),a=new F8(e,t,null,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const al=V({randomUniform_:O8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pu(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return W.runKernel(ax,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W8(n){const e={input:N(n,"input","real")};return W.runKernel(ox,e)}const rd=V({real_:W8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n){const e={x:N(n,"x","reciprocal")};return W.runKernel(Yd,e)}const HI=V({reciprocal_:V8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(n){const e={x:N(n,"x","relu")};return W.runKernel(jd,e)}const Ni=V({relu_:B8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(n){const e={x:N(n,"x","relu6")};return W.runKernel(Qd,e)}const Ox=V({relu6_:X8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(n,e){const t={x:N(n,"x","reverse")},r={dims:e};return W.runKernel(Im,t,r)}const Ls=V({reverse_:U8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z8(n){const e={x:N(n,"x","round")};return W.runKernel(Jd,e)}const Wx=V({round_:Z8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H8(n){const e={x:N(n,"x","rsqrt","float32")};return W.runKernel(qd,e)}const Vx=V({rsqrt_:H8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K8(n){const e={x:N(n,"x","selu")};return W.runKernel(eh,e)}const Bx=V({selu_:K8});function Y8(n,e,t,r,s,i=[1,1],a="NHWC"){const o=N(n,"x","separableConv2d"),l=N(e,"depthwiseFilter","separableConv2d"),u=N(t,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(o.rank===3&&(d=!0,c=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),M(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),M(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),M(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const h=l.shape[2],p=l.shape[3];M(u.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${u.shape[2]}.`);const g=fh(c,l,r,s,a,i),f=Oa(g,u,1,"valid",a);return d?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Xx=V({separableConv2d_:Y8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j8(n){const e={x:N(n,"x","sign")};return W.runKernel(rh,e)}const KI=V({sign_:j8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q8(n){const e={x:N(n,"x","sin","float32")};return W.runKernel(th,e)}const Ux=V({sin_:Q8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J8(n){const e={x:N(n,"x","sinh")};return W.runKernel(nh,e)}const Zx=V({sinh_:J8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q8(n,e,t){const r=N(n,"x","slice1d");return M(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),gt(r,[e],[t])}const jm=V({slice1d_:q8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e7(n,e,t){const r=N(n,"x","slice2d");return M(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),gt(r,e,t)}const Hx=V({slice2d_:e7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t7(n,e,t){const r=N(n,"x","slice3d");return M(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),gt(r,e,t)}const Qm=V({slice3d_:t7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n7(n,e,t){const r=N(n,"x","slice4d");return M(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),gt(r,e,t)}const sd=V({slice4d_:n7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r7(n,e=-1){const t=N(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return W.runKernel(Em,r,s)}const Jm=V({softmax_:r7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s7(n){M(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return W.runKernel(Vb,e)}const qm=V({fft_:s7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(n){M(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return W.runKernel(Zb,e)}const id=V({ifft_:i7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a7(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=H(n,[t,e]);r=id(s)}else{const s=[t,2*(e-1)],i=H(rd(n),[t,e]),a=H(Wm(n),[t,e]),o=Ls(gt(i,[0,1],[t,e-2]),1),l=Z(Ls(gt(a,[0,1],[t,e-2]),1),Ve(-1)),u=pn([i,o],1),c=pn([a,l],1),d=H(Ga(u,c),[s[0],s[1]]);r=id(d)}if(r=rd(r),n.rank===3&&n.shape[0]!==0){const s=r,i=n.shape[0];r=H(r,[i,r.shape[0]/i,r.shape[1]]),s.dispose()}return r}const Kx=V({irfft_:a7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o7(n,e,t=0){const r={x:N(n,"x","split")},s={numOrSizeSplits:e,axis:t};return W.runKernel(Nm,r,s)}const Wr=V({split_:o7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l7(n,e){M(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const g=n.shape.map(m=>0),f=n.shape.map(m=>m);f[n.shape.length-1]=e,s=gt(n,g,f),t=e}else if(e!=null&&e>t){const g=n.shape.map(f=>f);g[n.shape.length-1]=e-t,s=pn([n,Sn(g)],n.shape.length-1),t=e}else s=n;const i=yt(s),a=H(Ga(s,i),[r,t]),o=qm(a),l=Math.floor(t/2)+1,u=rd(o),c=Wm(o),d=Wr(u,[l,t-l],u.shape.length-1),h=Wr(c,[l,t-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,H(Ga(d[0],h[0]),p)}const eg=V({rfft_:l7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(n,e){let t=N(n,"a","squaredDifference"),r=N(e,"b","squaredDifference");[t,r]=nn(t,r),qe(t.shape,r.shape);const s={a:t,b:r},i={};return W.runKernel(oh,s,i)}const Yx=V({squaredDifference_:u7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(n,e){const t=N(n,"x","squeeze","string_or_numeric");return H(t,Za(t.shape,e).newShape)}const ol=V({squeeze_:c7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d7(n,e=0){const t=df(n,"tensors","stack","string_or_numeric");M(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&M(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return W.runKernel(ym,r,s)}const fr=V({stack_:d7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n,e=0){const t={x:N(n,"x","step")},r={alpha:e};return W.runKernel(hh,t,r)}const zu=V({step_:h7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p7(n,e,t,r,s=0,i=0,a=0,o=0,l=0){const u={x:N(n,"x","stridedSlice","string_or_numeric")},c={begin:e,end:t,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return W.runKernel(xx,u,c)}const YI=V({stridedSlice_:p7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const e={x:N(n,"x","tan","float32")};return W.runKernel(uh,e)}const jI=V({tan_:f7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(n,e){ku(n);const t=aa(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return nl(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(n,e,t){if(ku(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=aa(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return nl(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QI(n,e,t){if(ku(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=aa(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return nl(n,e,r,t)}function JI(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(i+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(i+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(i+` update.rank != ${s+n.length-r}`);for(let a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(i+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(i+` updates.shape[${a+s}] (${t.shape[a+s]}) != shape[${a+s}] (${n[a+s]})`)}function jx(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}JI(t,e,n)}function ll(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=t.length;let a=1;for(let d=s;d<i;++d)a*=t[d];const o=s<1?1:s,l=ie(e.shape)/o,u=[...We(t.slice(0,s)),1],c=ie(t);return{sliceRank:s,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}const m7=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:ll,validateInput:jx,validateUpdateShape:JI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n,e=1,t=!0){const r=N(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},a={k:e,sorted:t},[o,l]=W.runKernel(Tx,i,a);return{values:o,indices:l}}const qI=V({topk_:g7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n,e=0,t=1,r,s){if(ps(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new ZI(e,t,r,!0,s),a=rt(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const Qx=V({truncatedNormal_:y7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(n,e=0){const t=N(n,"x","unique","string_or_numeric");M(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[i,a]=W.runKernel(kx,r,s);return{values:i,indices:a}}const ek=V({unique_:b7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n,e,t){const r=N(n,"x","unsortedSegmentSum"),s=N(e,"segmentIds","unsortedSegmentSum","int32");M(su(t),()=>"numSegments must be of dtype int");const i={x:r,segmentIds:s},a={numSegments:t};return W.runKernel(Am,i,a)}const Jx=V({unsortedSegmentSum_:x7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v7(n,e=0){const t=N(n,"x","unstack","string_or_numeric");M(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return W.runKernel(Lm,r,s)}const As=V({unstack_:v7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n,e=!0,t,r){return W.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qx(n,e){const t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(i);const r=rt(n,"int32"),s=rt([t.length,n.length],"int32");for(let i=0;i<t.length;i++){const a=r.indexToLoc(t[i]),o=i*n.length;s.values.set(a,o)}return s.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(n,e,t){const r=N(n,"x","transpose");if(e==null&&(e=r.shape.map((a,o)=>o).reverse()),M(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{M(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},i={perm:e};return r.dtype==="complex64"?j(()=>{let a=rd(r),o=Wm(r);return a=W.runKernel(Xl,{x:a},i),o=W.runKernel(Xl,{x:o},i),t&&(o=Gt(o)),Ga(a,o)}):W.runKernel(Xl,s,i)}const ft=V({transpose_:w7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S7(n,e){if(e==null)return n.shape.slice();if(ht(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T7(n,e,t,r){const s=N(n,"x","dropout");if(M(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),M(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof xt?s.clone():s;const i=S7(s,t),a=1-e,o=Fe(yh(me(al(i,0,1,"float32",r),a)),a);return Z(s,o)}const nk=V({dropout_:T7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function ev(n,e,t){const r=1-n%2,s=new Float32Array(n);for(let i=0;i<n;++i){const a=2*Math.PI*i/(n+r-1);s[i]=e-t*Math.cos(a)}return nr(s,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(n,e,t,r,s,i="NHWC",a){let o=n;n.rank===3&&(o=H(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=H(e,[1,e.shape[0],e.shape[1],e.shape[2]])),M(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),M(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),M(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=i==="NHWC"?o.shape[3]:o.shape[1],c=i==="NHWC"?l.shape[3]:l.shape[1];M(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),M(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),Mr("conv2dDerFilter",s,a);const d={x:o,dy:l},h={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:t};return W.runKernel(Nb,d,h)}const sk=V({conv2DBackpropFilter_:I7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tv(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return Z(n,zu(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function nv(n,e){let t=e;const r=kn(n.shape,e.shape);return r.length>0&&(t=Ae(t,r)),H(t,n.shape)}function rv(n,e,t,r){if(e==="linear")return n;if(e==="relu")return Ni(n);if(e==="elu")return mh(n);if(e==="relu6")return Ox(n);if(e==="prelu")return Ym(n,t);if(e==="leakyrelu")return Vm(n,r);if(e==="sigmoid")return xi(n);throw new Error(`Unknown fused activation ${e}.`)}const sv=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",sv(W.state.gradientDepth,l)===!1){M(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let T=Oa(n,e,t,r,s,i,a);return o!=null&&(T=me(T,o)),rv(T,l,u,c)}const d=N(n,"x","conv2d","float32"),h=N(e,"filter","conv2d","float32");let p=d,g=!1;d.rank===3&&(g=!0,p=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),M(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Mr("fused conv2d",r,a);const f=s==="NHWC"?p.shape[3]:p.shape[1];M(h.shape[2]===f,()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${h.shape[2]}.`),M(or(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const m=Xn(p.shape,h.shape,t,i,r,a);let y;o!=null&&(y=N(o,"bias","fused conv2d"),[y]=nn(y,d),s==="NHWC"?qe(m.outShape,y.shape):(M(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),M(y.shape.length===0||y.shape[0]===m.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${m.outChannels})`)));let b;if(u!=null){const T=u.shape;if(M(T.length<=1||T.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${T.length}.`),T.length===1)M(T[0]===1||T[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the number of output channels (${m.outChannels}).`);else if(T.length===3)try{qe(T,m.outShape)}catch{const k=`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(k)}b=N(u,"prelu weights","fused conv2d")}const x=(T,k)=>{M(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[S,C,_,z]=k,P=tv(T,_,l);M(Bo(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const R=II(C.shape,P,S,t,r),A=sk(C,P,S.shape,t,r),F=[R,A];if(z!=null){const B=nv(z,P);F.push(B)}return F},v={x:p,filter:h,bias:y,preluActivationWeights:b},w={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return o==null?oa((T,k,S)=>{let C=W.runKernel(af,v,w);return S([k,T,C]),g&&(C=H(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:x}})(p,h):oa((T,k,S,C)=>{let _=W.runKernel(af,v,w);return C([k,T,_,S]),g&&(_=H(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:x}})(p,h,y)}const xD=V({fusedConv2d_:k7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n,e,t,r,s,i=[1,1],a){let o=n;n.rank===3&&(o=H(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:t};return W.runKernel(Pb,u,c)}const vD=V({depthwiseConv2dNativeBackpropFilter_:C7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(n,e,t,r,s,i=[1,1],a){let o=e,l=!1;e.rank===3&&(l=!0,o=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:t},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:n},d=W.runKernel($b,u,c);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const wD=V({depthwiseConv2dNativeBackpropInput_:_7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(sv(W.state.gradientDepth,i)===!1){let _=ot(n,e,t,r);return s!=null&&(_=me(_,s)),rv(_,i,a,o)}let l=N(n,"a","fused matMul"),u=N(e,"b","fused matMul");[l,u]=nn(l,u);const c=t?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=t?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],g=l.shape.slice(0,-2),f=u.shape.slice(0,-2),m=ie(g),y=ie(f);M(c===d,()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${r} must match.`);const b=qe(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,p]),x=t?H(l,[m,c,h]):H(l,[m,h,c]),v=r?H(u,[y,p,d]):H(u,[y,d,p]);let w;s!=null&&(w=N(s,"bias","fused matMul"),[w]=nn(w,l),qe(b,w.shape));let T;a!=null&&(T=N(a,"prelu weights","fused matMul"));const k=(_,z)=>{const[P,R,A,F]=z,B=tv(H(_,A.shape),A,i);let K,L;if(!t&&!r?(K=ot(B,R,!1,!0),L=ot(P,B,!0,!1)):!t&&r?(K=ot(B,R,!1,!1),L=ot(B,P,!0,!1)):t&&!r?(K=ot(R,B,!1,!0),L=ot(P,B,!1,!1)):(K=ot(R,B,!0,!0),L=ot(B,P,!0,!0)),s!=null){const O=nv(F,B);return[K,L,O]}else return[K,L]},S={a:x,b:v,bias:w,preluActivationWeights:T},C={transposeA:t,transposeB:r,activation:i,leakyreluAlpha:o};return s==null?oa((_,z,P)=>{const R=W.runKernel(sf,S,C);return P([_,z,R]),{value:H(R,b),gradFunc:k}})(x,v):oa((_,z,P,R)=>{const A=W.runKernel(sf,S,C);return R([_,z,A,P]),{value:H(A,b),gradFunc:k}})(x,v,w)}const JS=V({fusedMatMul_:M7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(n){return ev(n,.54,.46)}const E7=V({hammingWindow_:N7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(n){return ev(n,.5,.5)}const SD=V({hannWindow_:R7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(n,e,t,r=!1,s=0){let i=0;const a=[];for(;i+e<=n.size;)a.push(gt(n,i,e)),i+=t;if(r)for(;i<n.size;){const o=i+e-n.size,l=pn([gt(n,i,e-o),Ru([o],s)]);a.push(l),i+=t}return a.length===0?Ao([],[0,e]):H(pn(a),[a.length,e])}const TD=V({frame_:L7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(n,e,t,r,s=SD){r==null&&(r=rk(e));const i=TD(n,e,t),a=Z(i,s(e));return eg(a,r)}const z7=V({stft_:A7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n,e,t,r,s="bilinear",i=0){const a=N(n,"image","cropAndResize"),o=N(e,"boxes","cropAndResize","float32"),l=N(t,"boxInd","cropAndResize","int32"),u=o.shape[0];M(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),M(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),M(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),M(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),M(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),M(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const c={image:a,boxes:o,boxInd:l},d={method:s,extrapolationValue:i,cropSize:r};return W.runKernel(Ab,c,d)}const P7=V({cropAndResize_:D7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(n){const e=N(n,"image","flipLeftRight","float32");M(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return W.runKernel(Xb,t,{})}const F7=V({flipLeftRight_:$7});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G7(n){const e=N(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];M(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),M(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,Ts(e,s)}const O7=V({grayscaleToRGB_:G7});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(n){const e=N(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];M(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),M(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,i=Te(e,"float32"),a=nr([.2989,.587,.114]);let o;switch(e.rank){case 2:o=_l("ij,j->i",i,a);break;case 3:o=_l("ijk,k->ij",i,a);break;case 4:o=_l("ijkl,l->ijk",i,a);break;case 5:o=_l("ijklm,m->ijkl",i,a);break;case 6:o=_l("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=Jn(o,-1),Te(o,s)}const V7=V({rgbToGrayscale_:W7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(n,e,t=0,r=.5){const s=N(n,"image","rotateWithOffset","float32");M(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const i={image:s},a={radians:e,fillValue:t,center:r};return W.runKernel(Cx,i,a)}const X7=V({rotateWithOffset_:B7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vh(n,e,t,r,s,i){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),i==null&&(i=0);const a=n.shape[0];return t=Math.min(t,a),M(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),M(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),M(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),M(e.rank===1,()=>"scores must be a 1D tensor"),M(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),M(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const i=N(n,"boxes","nonMaxSuppression","float32"),a=N(e,"scores","nonMaxSuppression","float32"),o=vh(i,a,t,r,s);t=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return W.runKernel(ex,{boxes:i,scores:a},l)}const Z7=V({nonMaxSuppression_:U7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H7(n,e,t){const r=K7(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function K7(n,e,t){return j7(n,e,t||Y7)}function Y7(n,e){return n>e?1:n<e?-1:0}function j7(n,e,t){let r=0,s=n.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=t(e,n[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iv(n,e,t,r,s){return ik(n,e,t,r,s,0)}function av(n,e,t,r,s,i){return ik(n,e,t,r,s,0,!1,i,!0)}function ov(n,e,t,r,s,i){return ik(n,e,t,r,s,i,!0)}function ik(n,e,t,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let m=0;m<e.length;m++)e[m]>s&&u.push({score:e[m],boxIndex:m,suppressBeginIndex:0});u.sort(VE);const c=i>0?-.5/i:0,d=[],h=[];for(;d.length<t&&u.length>0;){const m=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=m;if(y<s)break;let v=!1;for(let w=d.length-1;w>=x;--w){const T=Q7(n,b,d[w]);if(T>=r){v=!0;break}if(m.score=m.score*J7(r,c,T),m.score<=s)break}m.suppressBeginIndex=d.length,v||(m.score===y?(d.push(b),h.push(m.score)):m.score>s&&H7(u,m,VE))}const p=d.length,g=t-p;o&&g>0&&(d.push(...new Array(g).fill(0)),h.push(...new Array(g).fill(0)));const f={selectedIndices:d};return a&&(f.selectedScores=h),l&&(f.validOutputs=p),f}function Q7(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),p=(o-i)*(l-a),g=(d-u)*(h-c);if(p<=0||g<=0)return 0;const f=Math.max(i,u),m=Math.max(a,c),y=Math.min(o,d),b=Math.min(l,h),x=Math.max(y-f,0)*Math.max(b-m,0);return x/(p+g-x)}function J7(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function VE(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function q7(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const i=N(n,"boxes","nonMaxSuppressionAsync"),a=N(e,"scores","nonMaxSuppressionAsync"),o=vh(i,a,t,r,s);t=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:d}=iv(u,c,t,r,s);return i!==n&&i.dispose(),a!==e&&a.dispose(),nr(d,"int32")}const eQ=q7;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tQ(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=N(n,"boxes","nonMaxSuppression"),o=N(e,"scores","nonMaxSuppression"),l=vh(a,o,t,r,s,i);t=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:a,scores:o},c={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:i},d=W.runKernel(nx,u,c);return{selectedIndices:d[0],selectedScores:d[1]}}const nQ=V({nonMaxSuppressionWithScore_:tQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function rQ(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=N(n,"boxes","nonMaxSuppressionAsync"),o=N(e,"scores","nonMaxSuppressionAsync"),l=vh(a,o,t,r,s,i);t=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],d=u[1],{selectedIndices:h,selectedScores:p}=ov(c,d,t,r,s,i);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:nr(h,"int32"),selectedScores:nr(p)}}const sQ=rQ;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iQ(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=N(n,"boxes","nonMaxSuppression"),o=N(e,"scores","nonMaxSuppression"),l=vh(a,o,t,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,h={boxes:a,scores:o},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:i},g=W.runKernel(tx,h,p);return{selectedIndices:g[0],validOutputs:g[1]}}const aQ=V({nonMaxSuppressionPadded_:iQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function oQ(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=N(n,"boxes","nonMaxSuppressionAsync"),o=N(e,"scores","nonMaxSuppressionAsync"),l=vh(a,o,t,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,[h,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:g,validOutputs:f}=av(h,p,u,c,d,i);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:nr(g,"int32"),validOutputs:Ve(f,"int32")}}const lQ=oQ;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uQ(n,e,t=!1,r=!1){const s=N(n,"images","resizeBilinear");M(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),M(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),M(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=s,a=!1;s.rank===3&&(a=!0,i=H(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const o={images:i},l={alignCorners:t,halfPixelCenters:r,size:e},u=W.runKernel(Tm,o,l);return a?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const ID=V({resizeBilinear_:uQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cQ(n,e,t=!1,r=!1){const s=N(n,"images","resizeNearestNeighbor");M(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),M(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),M(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),M(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=s,a=!1;s.rank===3&&(a=!0,i=H(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const o={images:i},l={alignCorners:t,halfPixelCenters:r,size:e},u=W.runKernel(Sm,o,l);return a?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const kD=V({resizeNearestNeighbor_:cQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dQ(n,e="binary",t=!1,r=.5){const s=N(n,"image","threshold"),i=.2989,a=.587,o=.114,l=s.shape[0]*s.shape[1];let u=Z(nr([r]),255),c,d,h,p;if(M(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),M(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),M(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),M(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[c,d,h]=Wr(s,[1,1,1],-1);const f=Z(c,i),m=Z(d,a),y=Z(h,o);p=me(me(f,m),y)}else p=n;if(e==="otsu"){const f=bI(Te(Wx(p),"int32"),Kt([]),256);u=hQ(f,l)}const g=t?il(p,u):Nr(p,u);return Te(Z(g,255),"int32")}function hQ(n,e){let t=nr([-1]),r=nr([0]),s=nr([0]),i,a,o,l,u,c;for(let d=0;d<n.size-1;d++){i=gt(n,0,d+1),a=gt(n,d+1),u=Fe(Ae(i),e),c=Fe(Ae(a),e);const h=Ae(Z(i,pu(0,i.size)));o=Fe(h,Ae(i));const p=Ru(a.shape,i.size),g=me(pu(0,a.size),p),f=Z(a,g);l=Fe(Ae(f),Ae(a));const m=Ee(o,l),y=Ee(o,l),b=Z(u,c);s=Z(Z(b,m),y);const x=Nr(s,r);r=Gn(x,s,r),t=Gn(x,nr([d]),t)}return t}const pQ=V({threshold_:dQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fQ(n,e,t="nearest",r="constant",s=0,i){const a=N(n,"image","transform","float32"),o=N(e,"transforms","transform","float32");M(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),M(o.rank===2&&(o.shape[0]===a.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),M(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:a,transforms:o},u={interpolation:t,fillMode:r,fillValue:s,outputShape:i};return W.runKernel(Ix,l,u)}const mQ=V({transform_:fQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gQ(n,e,t){const r=N(n,"a","bandPart");M(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[i,a]=r.shape.slice(-2);let o,l;typeof e=="number"?(M(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),M(e<=i,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`),o=N(e<0?i:e,"numLower","bandPart")):(M(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=Gn(td(e,0),i,Xo(e,i))),typeof t=="number"?(M(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),M(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),l=N(t<0?a:t,"numUpper","bandPart")):(M(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Gn(td(t,0),a,Xo(t,a)));const u=H(pu(0,i,1,"int32"),[-1,1]),c=pu(0,a,1,"int32"),d=Ee(u,c),h=ei(il(d,o),ja(d,Gt(l))),p=Sn([i,a],r.dtype);return H(fr(As(H(r,[-1,i,a])).map(g=>Gn(h,g,p))),s)}const yQ=V({bandPart_:gQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bQ(n){let e;if(Array.isArray(n)){e=!1,M(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let i=1;i<n.length;++i)M(n[i].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${s})`)}else e=!0,n=Wr(n,n.shape[0],0).map(s=>ol(s,[0]));M(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(W.tidy(()=>{let i=r[s];if(s>0)for(let a=0;a<s;++a){const o=Z(Ae(Z(t[a],i)),t[a]);i=Ee(i,o)}return Fe(i,gh(i,"euclidean"))}));return e?fr(t,0):t}const xQ=V({gramSchmidt_:bQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vQ(n,e=!1){if(M(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return BE(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),r=As(H(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],i=[];r.forEach(l=>{const[u,c]=BE(l,e);s.push(u),i.push(c)});const a=H(fr(s,0),n.shape),o=H(fr(i,0),n.shape);return[a,o]}}function BE(n,e=!1){return W.tidy(()=>{M(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=Dx(t),i=na(n);const a=Ao([[1]],[1,1]);let o=na(a);const l=t>=r?r:t;for(let u=0;u<l;++u){const c=i,d=o,h=s;[o,i,s]=W.tidy(()=>{const p=gt(i,[u,u],[t-u,1]),g=gh(p),f=gt(i,[u,u],[1,1]),m=Gn(Nr(f,0),Ao([[-1]]),Ao([[1]])),y=Ee(f,Z(m,g)),b=Fe(p,y);b.shape[0]===1?o=na(a):o=pn([a,gt(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const x=Gt(Fe(ot(m,y),g)),v=gt(i,[u,0],[t-u,r]),w=Z(x,o),T=ft(o);if(u===0)i=Ee(v,ot(w,ot(T,v)));else{const C=Ee(v,ot(w,ot(T,v)));i=pn([gt(i,[0,0],[u,r]),C],0)}const k=ft(w),S=gt(s,[0,u],[t,s.shape[1]-u]);if(u===0)s=Ee(S,ot(ot(S,o),k));else{const C=Ee(S,ot(ot(S,o),k));s=pn([gt(s,[0,0],[t,u]),C],1)}return[o,i,s]}),Je([c,d,h])}return!e&&t>r&&(s=gt(s,[0,0],[t,r]),i=gt(i,[0,0],[r,r])),[s,i]})}const wQ=V({qr_:vQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tr;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Tr||(Tr={}));function SQ(n,e,t=Tr.SUM_BY_NONZERO_WEIGHTS){const r=N(n,"losses","computeWeightedLoss");let s=null;e!=null&&(s=N(e,"weights","computeWeightedLoss"));const i=s==null?r:Z(r,s);if(t===Tr.NONE)return i;if(t===Tr.SUM)return Ae(i);if(t===Tr.MEAN){if(s==null)return en(i);{const a=r.size/s.size,o=Fe(Ae(i),Ae(s));return a>1?Fe(o,Ve(a)):o}}if(t===Tr.SUM_BY_NONZERO_WEIGHTS){if(s==null)return Fe(Ae(i),Ve(r.size));{const a=Z(s,Gr(r.shape)),o=Te(Ae(hu(a,Ve(0))),"float32");return Fe(Ae(i),o)}}throw Error(`Unknown reduction: ${t}`)}const Ja=V({computeWeightedLoss_:SQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TQ(n,e,t,r=Tr.SUM_BY_NONZERO_WEIGHTS){const s=N(n,"labels","absoluteDifference"),i=N(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=N(t,"weights","absoluteDifference")),ar(s.shape,i.shape,"Error in absoluteDifference: ");const o=vn(Ee(s,i));return Ja(o,a,r)}const IQ=V({absoluteDifference_:TQ});function kQ(n,e,t,r,s=Tr.SUM_BY_NONZERO_WEIGHTS){const i=N(n,"labels","cosineDistance"),a=N(e,"predictions","cosineDistance");let o=null;r!=null&&(o=N(r,"weights","cosineDistance")),ar(i.shape,a.shape,"Error in cosineDistance: ");const l=Ve(1),u=Ee(l,Ae(Z(i,a),t,!0));return Ja(u,o,s)}const CQ=V({cosineDistance_:kQ});function _Q(n,e,t,r=Tr.SUM_BY_NONZERO_WEIGHTS){let s=N(n,"labels","hingeLoss");const i=N(e,"predictions","hingeLoss");let a=null;t!=null&&(a=N(t,"weights","hingeLoss")),ar(s.shape,i.shape,"Error in hingeLoss: ");const o=Ve(1);s=Ee(Z(Ve(2),s),o);const l=Ni(Ee(o,Z(s,i)));return Ja(l,a,r)}const MQ=V({hingeLoss_:_Q});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NQ(n,e,t,r=1,s=Tr.SUM_BY_NONZERO_WEIGHTS){const i=N(n,"labels","huberLoss"),a=N(e,"predictions","huberLoss");let o=null;t!=null&&(o=N(t,"weights","huberLoss")),ar(i.shape,a.shape,"Error in huberLoss: ");const l=Ve(r),u=vn(Ee(a,i)),c=Xo(u,l),d=Ee(u,c),h=me(Z(Ve(.5),Lt(c)),Z(l,d));return Ja(h,o,s)}const EQ=V({huberLoss_:NQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RQ(n,e,t,r=1e-7,s=Tr.SUM_BY_NONZERO_WEIGHTS){const i=N(n,"labels","logLoss"),a=N(e,"predictions","logLoss");let o=null;t!=null&&(o=N(t,"weights","logLoss")),ar(i.shape,a.shape,"Error in logLoss: ");const l=Ve(1),u=Ve(r),c=Gt(Z(i,cs(me(a,u)))),d=Z(Ee(l,i),cs(me(Ee(l,a),u))),h=Ee(c,d);return Ja(h,o,s)}const LQ=V({logLoss_:RQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AQ(n,e,t,r=Tr.SUM_BY_NONZERO_WEIGHTS){const s=N(n,"labels","meanSquaredError"),i=N(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=N(t,"weights","meanSquaredError")),ar(s.shape,i.shape,"Error in meanSquaredError: ");const o=Yx(s,i);return Ja(o,a,r)}const zQ=V({meanSquaredError_:AQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(n,e){const t=N(n,"labels","sigmoidCrossEntropyWithLogits"),r=N(e,"logits","sigmoidCrossEntropyWithLogits");ar(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ni(r),i=Z(r,t),a=Bm(Ur(Gt(vn(r))));return me(Ee(s,i),a)}function PQ(n,e,t,r=0,s=Tr.SUM_BY_NONZERO_WEIGHTS){let i=N(n,"multiClassLabels","sigmoidCrossEntropy");const a=N(e,"logits","sigmoidCrossEntropy");let o=null;if(t!=null&&(o=N(t,"weights","sigmoidCrossEntropy")),ar(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const u=Ve(r),c=Ve(1),d=Ve(.5);i=me(Z(i,Ee(c,u)),Z(d,u))}const l=DQ(i,a);return Ja(l,o,s)}const $Q=V({sigmoidCrossEntropy_:PQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FQ(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return oa((r,s,i)=>{const a=Xm(s,[t],!0),o=Ee(Te(s,"float32"),a);i([r,o]);const l=Gt(Z(o,r));return{value:Ae(l,[t]),gradFunc:(u,c)=>{const[d,h]=c,p=fn(u.shape,[t]);return[Z(H(u,p),Ee(Te(d,"float32"),Ur(h))),Z(H(u,p),Ee(Ur(h),Te(d,"float32")))]}}})(n,e)}function GQ(n,e,t,r=0,s=Tr.SUM_BY_NONZERO_WEIGHTS){let i=N(n,"onehotLabels","softmaxCrossEntropy");const a=N(e,"logits","softmaxCrossEntropy");let o=null;if(t!=null&&(o=N(t,"weights","softmaxCrossEntropy")),ar(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const u=Ve(r),c=Ve(1),d=Ve(i.shape[1]);i=me(Z(i,Ee(c,u)),Fe(u,d))}const l=FQ(i,a);return Ja(l,o,s)}const OQ=V({softmaxCrossEntropy_:GQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(n,e,t,r){const s=N(n,"indices","sparseFillEmptyRows","int32"),i=N(e,"values","sparseFillEmptyRows"),a=N(t,"denseShape","sparseFillEmptyRows","int32"),o=N(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:i,denseShape:a,defaultValue:o},u=W.runKernel(px,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const VQ=V({sparseFillEmptyRows_:WQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BQ(n,e,t){const r=N(n,"inputIndices","sparseReshape","int32"),s=N(e,"inputShape","sparseReshape","int32"),i=N(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:r,inputShape:s,newShape:i},o=W.runKernel(fx,a);return{outputIndices:o[0],outputShape:o[1]}}const XQ=V({sparseReshape_:BQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(n,e,t){const r=N(n,"data","sparseSegmentMean"),s=N(e,"indices","sparseSegmentMean","int32"),i=N(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return W.runKernel(mx,a)}const ZQ=V({sparseSegmentMean_:UQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HQ(n,e,t){const r=N(n,"data","sparseSegmentSum"),s=N(e,"indices","sparseSegmentSum","int32"),i=N(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return W.runKernel(gx,a)}const KQ=V({sparseSegmentSum_:HQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YQ(n,e,t,r,s,i,a,o){const l=N(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=N(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:t,nGramWidths:r,leftPad:s,rightPad:i,padWidth:a,preserveShortSequences:o},d={data:l,dataSplits:u},h=W.runKernel(vx,d,c);return{nGrams:h[0],nGramsSplits:h[1]}}const jQ=V({stringNGrams_:YQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QQ(n,e,t=!0){const r=N(n,"input","stringSplit","string"),s=N(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:t},a={input:r,delimiter:s},o=W.runKernel(wx,a,i);return{indices:o[0],values:o[1],shape:o[2]}}const JQ=V({stringSplit_:QQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qQ(n,e){const t=N(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:t};return W.runKernel(Sx,s,r)}const eJ=V({stringToHashBucketFast_:qQ});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tJ(n,e,t,r=!0){const s=N(n,"input","staticRegexReplace","string"),i={pattern:e,rewrite:t,replaceGlobal:r};return W.runKernel(Rm,{x:s},i)}const nJ=V({staticRegexReplace_:tJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CD={fft:qm,ifft:id,rfft:eg,irfft:Kx},_D={hammingWindow:E7,hannWindow:SD,frame:TD,stft:z7},js={flipLeftRight:F7,grayscaleToRGB:O7,resizeNearestNeighbor:kD,resizeBilinear:ID,rgbToGrayscale:V7,rotateWithOffset:X7,cropAndResize:P7,nonMaxSuppression:Z7,nonMaxSuppressionAsync:eQ,nonMaxSuppressionWithScore:nQ,nonMaxSuppressionWithScoreAsync:sQ,nonMaxSuppressionPadded:aQ,nonMaxSuppressionPaddedAsync:lQ,threshold:pQ,transform:mQ},ak={bandPart:yQ,gramSchmidt:xQ,qr:wQ},MD={absoluteDifference:IQ,computeWeightedLoss:Ja,cosineDistance:CQ,hingeLoss:MQ,huberLoss:EQ,logLoss:LQ,meanSquaredError:zQ,sigmoidCrossEntropy:$Q,softmaxCrossEntropy:OQ},ND={sparseFillEmptyRows:VQ,sparseReshape:XQ,sparseSegmentMean:ZQ,sparseSegmentSum:KQ},ED={stringNGrams:jQ,stringSplit:JQ,stringToHashBucketFast:eJ,staticRegexReplace:nJ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rJ=new Map,qS=new Map;class Du{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}let Pu=class cc{constructor(){this.classNameMap={}}static getMap(){return cc.instance==null&&(cc.instance=new cc),cc.instance}static register(e){cc.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function ye(n,e,t){M(n.className!=null,()=>"Class being registered does not have the static className property defined."),M(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),M(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,s=e+">"+r;return Pu.register(n),rJ.set(s,n),qS.set(n,s),n}function sJ(n){return qS.has(n)?qS.get(n):n.className}const iJ=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Du,SerializationMap:Pu,getRegisteredName:sJ,registerClass:ye},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qa extends Du{minimize(e,t=!1,r){const{value:s,grads:i}=this.computeGradients(e,r);if(r!=null){const a=r.map(o=>({name:o.name,tensor:i[o.name]}));this.applyGradients(a)}else this.applyGradients(i);return Je(i),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return dD(e,t)}dispose(){this.iterations_!=null&&Je(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ve(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(qa,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ok extends qa{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=W.registeredVariables[t],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${t}/accum_grad`,variable:j(()=>yt(s).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${t}/accum_var`,variable:j(()=>yt(s).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[t];if(a==null)return;const o=this.accumulatedGrads[r].variable,l=this.accumulatedUpdates[r].variable;j(()=>{const u=me(Z(o,this.rho),Z(Lt(a),1-this.rho)),c=Z(Fe(ir(me(l,this.epsilon)),ir(me(o,this.epsilon))),a),d=me(Z(l,this.rho),Z(Lt(c),1-this.rho));o.assign(u),l.assign(d);const h=me(Z(c,-this.learningRate),s);s.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Je(this.accumulatedGrads.map(e=>e.variable)),Je(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lk extends qa{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=W.registeredVariables[t];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${t}/accumulator`,variable:j(()=>Ru(s.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[t];if(i==null)return;const a=this.accumulatedGrads[r].variable;j(()=>{const o=me(a,Lt(i));a.assign(o);const l=me(Z(Fe(i,ir(me(o,W.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Je(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uk extends qa{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],j(()=>{this.accBeta1=Ve(t).variable(),this.accBeta2=Ve(r).variable()}),s==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);j(()=>{const r=Ee(1,this.accBeta1),s=Ee(1,this.accBeta2);t.forEach((i,a)=>{const o=W.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:j(()=>yt(o).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${i}/v`,variable:j(()=>yt(o).variable(l))});const u=Array.isArray(e)?e[a].tensor:e[i];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,h=me(Z(c,this.beta1),Z(u,1-this.beta1)),p=me(Z(d,this.beta2),Z(Lt(u),1-this.beta2)),g=Fe(h,r),f=Fe(p,s);c.assign(h),d.assign(p);const m=me(Z(Fe(g,me(ir(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(Z(this.accBeta1,this.beta1)),this.accBeta2.assign(Z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Je(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Je(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),j(()=>{this.accBeta1.assign(Wa(this.beta1,this.iterations_+1)),this.accBeta2.assign(Wa(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ck extends qa{static get className(){return"Adamax"}constructor(e,t,r,s=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],j(()=>{this.iteration=Ve(0).variable(),this.accBeta1=Ve(t).variable()}),s==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);j(()=>{const r=Ee(1,this.accBeta1),s=Fe(-this.learningRate,me(Z(this.iteration,this.decay),1));t.forEach((i,a)=>{const o=W.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:yt(o).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${i}/v`,variable:yt(o).variable(l)});const u=Array.isArray(e)?e[a].tensor:e[i];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,h=me(Z(c,this.beta1),Z(u,1-this.beta1)),p=Z(d,this.beta2),g=vn(u),f=ca(p,g);c.assign(h),d.assign(f);const m=me(Z(Fe(s,r),Fe(h,me(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(me(this.iteration,1)),this.accBeta1.assign(Z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Je(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Je(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lv extends qa{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=Array.isArray(e)?e[r].tensor:e[t];if(s==null)return;const i=W.registeredVariables[t];j(()=>{const a=me(Z(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=un(Ve(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dk extends lv{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=Ve(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=W.registeredVariables[t];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${t}/momentum`,variable:j(()=>yt(s).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[t];a!=null&&j(()=>{let o;const l=me(Z(this.m,i),a);this.useNesterov?o=me(Z(this.c,me(a,Z(l,this.m))),s):o=me(Z(this.c,l),s),i.assign(l),s.assign(o)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Je(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hk extends qa{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,s=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,s==null&&(this.epsilon=W.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=W.registeredVariables[t],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${t}/rms`,variable:j(()=>yt(s).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${t}/momentum`,variable:j(()=>yt(s).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${t}/mg`,variable:j(()=>yt(s).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[t];if(a==null)return;const o=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;j(()=>{const u=me(Z(o,this.decay),Z(Lt(a),1-this.decay));if(this.centered){const c=this.accumulatedMeanGrads[r].variable,d=me(Z(c,this.decay),Z(a,1-this.decay)),h=Fe(Z(a,this.learningRate),ir(Ee(u,me(Lt(d),this.epsilon)))),p=me(Z(l,this.momentum),h);o.assign(u),c.assign(d),l.assign(p);const g=Ee(s,p);s.assign(g)}else{const c=me(Z(o,this.decay),Z(Lt(a),1-this.decay)),d=me(Z(l,this.momentum),Fe(Z(a,this.learningRate),ir(me(c,this.epsilon))));o.assign(c),l.assign(d);const h=Ee(s,d);s.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Je(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Je(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Je(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ=[ok,lk,uk,ck,dk,hk,lv];function oJ(){for(const n of aJ)ye(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(n,e,t,r){a(n),t=t??0,r=r??1,o(t,r);let s=0;const i=l=>(l.then(u=>{const c=t+ ++s/n.length*(r-t);return e(c),u}),l);function a(l){M(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){M(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),M(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),M(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function RD(n,e){e==null&&(e={});const t=e.fetchFunc==null?q().platform.fetch:e.fetchFunc,r=n.map(i=>t(i,e.requestInit,{isBinary:!0})),s=(e.onProgress==null?await Promise.all(r):await XE(r,e.onProgress,0,.5)).map(i=>i.arrayBuffer());return e.onProgress==null?await Promise.all(s):await XE(s,e.onProgress,.5,1)}function lJ(n,e){var t;const r=e.fetchFunc==null?q().platform.fetch:e.fetchFunc;let s=0,i;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async a=>{for(var o;s<n.length;){i||(i=(await r(n[s],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await i.read();if(l){s++,i=void 0,(o=e.onProgress)===null||o===void 0||o.call(e,s/n.length);continue}a.enqueue(u);return}a.close()}})}async function LD(n,e="",t,r){return AD(s=>RD(s,{requestInit:r}))(n,e,t)}function AD(n){return async(e,t="",r)=>{const s=e.map(()=>!1),i={},a=r!=null?r.map(()=>!1):[],o=[];if(e.forEach((p,g)=>{let f=0;p.weights.forEach(m=>{const y="quantization"in m?m.quantization.dtype:m.dtype,b=iu[y]*ie(m.shape),x=()=>{s[g]=!0,i[g]==null&&(i[g]=[]),i[g].push({manifestEntry:m,groupOffset:f,sizeBytes:b})};r!=null?r.forEach((v,w)=>{v===m.name&&(x(),a[w]=!0)}):x(),o.push(m.name),f+=b})}),!a.every(p=>p)){const p=r.filter((g,f)=>!a[f]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce((p,g,f)=>(g&&p.push(f),p),[]),u=[];l.forEach(p=>{e[p].paths.forEach(g=>{const f=t+(t.endsWith("/")?"":"/")+g;u.push(f)})});const c=await n(u),d={};let h=0;return l.forEach(p=>{const g=e[p].paths.length,f=new Mi(c.slice(h,h+g));i[p].forEach(m=>{const y=f.slice(m.groupOffset,m.groupOffset+m.sizeBytes),b=eI(y,[m.manifestEntry]);for(const x in b)d[x]=b[x]}),h+=g}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uJ="application/octet-stream",cJ="application/json";class pk{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(M(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=q().platform.fetch,M(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&M(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=Jz(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(s)],{type:cJ}),"model.json"),e.weightData!=null){const a=Mi.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:uJ}),"model.weights.bin")}const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:Pm(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const r=t.modelTopology,s=t.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return rI(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=M0(e.weightsManifest),s=()=>lJ(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:s})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=dJ(t),i=this.weightPathPrefix||r,a=[],o=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):a.push(i+u+s);return this.weightUrlConverter&&a.push(...await Promise.all(o)),a}async loadWeights(e){const t=await this.getWeightUrls(e),r=M0(e),s=await RD(t,this.loadOptions);return[r,s]}}pk.URL_SCHEME_REGEX=/^https?:\/\//;function dJ(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),s=t>e?n.substring(t):"";return[r+"/",s]}function e2(n){return n.match(pk.URL_SCHEME_REGEX)!=null}const zD=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>e2(r)):t=e2(n),t)return fk(n,e)}return null};Jt.registerSaveRouter(zD);Jt.registerLoadRouter(zD);function fk(n,e){return new pk(n,e)}function DD(n,e){return fk(n,e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yl,UE=!1;function PD(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,s=!1,i=!1,a=!1,o=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)i=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(uf(I0,W.backendName)!=null){const h={pixels:n},p={numChannels:e};return W.runKernel(I0,h,p)}const[l,u]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let c;if(a)c=n.getContext("2d").getImageData(0,0,l,u).data;else if(r||t)c=n.data;else if(i||s||o){if(yl==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")yl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else yl=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});yl.canvas.width=l,yl.canvas.height=u,yl.drawImage(n,0,0,l,u),c=yl.getImageData(0,0,l,u).data}let d;if(e===4)d=new Int32Array(c);else{const h=l*u;d=new Int32Array(h*e);for(let p=0;p<h;p++)for(let g=0;g<e;++g)d[p*e+g]=c[p*4+g]}return QI(d,[u,l,e],"int32")}function hJ(n){return n!=null&&n.data instanceof Uint8Array}function pJ(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function fJ(n){return n!=null&&n.width!==0&&n.height!==0}function mJ(n){return pJ()&&!(n instanceof ImageBitmap)&&fJ(n)&&!hJ(n)}async function gJ(n,e=3){let t=null;if(q().getBool("WRAP_TO_IMAGEBITMAP")&&mJ(n)){let r;try{r=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===n.width&&r.height===n.height?t=r:t=n}else t=n;return PD(t,e)}function $D(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function yJ(n){const e=(n==null?void 0:n.alpha)||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function bJ(n,e){let t=N(n,"img","toPixels");if(!(n instanceof xt)){const u=t;t=Te(u,"int32"),u.dispose()}$D(t);const[r,s]=t.shape.slice(0,2),i=t.rank===2?1:t.shape[2],a=await t.data(),o=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const c=[0,0,0,255];for(let h=0;h<i;h++){const p=a[u*i+h];if(t.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(t.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);i===1?(c[0]=p*o,c[1]=p*o,c[2]=p*o):c[h]=p*o}const d=u*4;l[d+0]=Math.round(c[0]),l[d+1]=Math.round(c[1]),l[d+2]=Math.round(c[2]),l[d+3]=Math.round(c[3])}if(e!=null){UE||uf(Gb,W.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),UE=!0),e.width=s,e.height=r;const u=e.getContext("2d"),c=new ImageData(l,s,r);u.putImageData(c,0,0)}return t!==n&&t.dispose(),l}function xJ(n,e,t){let r=N(n,"img","draw");if(!(n instanceof xt)){const a=r;r=Te(a,"int32"),a.dispose()}$D(r),yJ(t==null?void 0:t.imageOptions);const s={image:r},i={canvas:e,options:t};W.runKernel(Gb,s,i)}const mk=V({fromPixels_:PD}),vJ=Object.freeze(Object.defineProperty({__proto__:null,draw:xJ,fromPixels:mk,fromPixelsAsync:gJ,toPixels:bJ},Symbol.toStringTag,{value:"Module"}));function uv(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(ie(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,i=s[s.length-1];let a=1;for(let d=0;d<s.length-1;++d)a*=s[d];const o=n.shape,l=s.slice();l.pop();let u=1;for(let d=i;d<t;++d)u*=o[d],l.push(o[d]);const c=[...We(n.shape).map(d=>d/u),1].slice(0,i);return[l,a,u,c]}const wJ=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:uv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t2=-2,SJ=-1;function gk(n,e,t){const r=n.shape.length;M(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),M(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)M(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function TJ(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function yk(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function FD(n,e,t,r){const s=[...n];for(let i=s.length;i<r.length;i++)s.push(1);for(let i=0;i<t;i++)i===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function GD(n,e,t){return t<=n?t:t-(e-1)}function OD(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function IJ(n,e,t,r,s,i,a,o,l){const u=n.length;let c=new Array(u),d=new Array(u),h=new Array(u);if(e.length&&t>0){const p=e[0],g=t+1;c=WD(a,p,g,r,n),d=VD(o,p,g,s,n),h=FD(i,p,g,n)}else for(let p=0;p<u;p++)c[p]=XD(a,r,i,n,p,l),d[p]=UD(o,s,i,n,p,l),h[p]=BD(i,p,l);return{begin:c,end:d,strides:h}}function WD(n,e,t,r,s){const i=[...s],a=OD(t,e);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const l=GD(e,t,o);let u=r[l];n&1<<l&&(u=0),i[o]=u}return i}function VD(n,e,t,r,s){const i=[...s],a=OD(t,e);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const l=GD(e,t,o);let u=r[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[o]=u}for(let o=0;o<i.length;o++){const l=s[o];i[o]<0&&(i[o]+=l),i[o]=Go(0,i[o],s[o])}return i}function BD(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function XD(n,e,t,r,s,i){let a=e[s];const o=t[s]||1;(n&1<<s||i&1<<s||a==null)&&(o>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=Go(0,a,l-1),a}function UD(n,e,t,r,s,i){let a=e[s];const o=t[s]||1;(n&1<<s||i&1<<s||a==null)&&(o>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),o>0?a=Go(0,a,l):a=Go(-1,a,l-1),a}function bk(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function xk(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function cv(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{M(a!==-1,()=>"slice() does not support negative begin indexing.")});let i;return t==null?i=new Array(s).fill(-1):typeof t=="number"?i=[t,...new Array(s-1).fill(-1)]:t.length<s?i=t.concat(new Array(s-t.length).fill(-1)):i=t,i=i.map((a,o)=>a>=0?a:(M(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${o}.`),n.shape[o]-r[o])),[r,i]}function vk(n,e,t,r,s,i,a,o,l){let u;if(r==null?(u=new Array(e.length),u.fill(1)):u=r,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<d.dims;b++)c&&1<<b&o&&d.numAddAxisAfterEllipsis++,1<<b&a&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};kJ(d,h);let p=!0,g=!0,f=!0;const m=[],y=[];for(let b=0;b<n.length;++b){if(h.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const x=!!(h.shrinkAxisMask&1<<b),v=n[b];if(v===-1){m.push(x?1:-1);continue}const w=[h.beginMask&1<<b,h.endMask&1<<b],T=[h.strides[b]>0?0:-1,h.strides[b]>0?v:v-1];if(x&&h.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&h.strides[b]===1;const k=!!(h.beginMask&1<<b&&h.endMask&1<<b);if(h.beginValid&&h.endValid){if(x){const z=h.begin[b]<0?v+h.begin[b]:h.begin[b];if(h.begin[b]=z,h.end[b]=h.begin[b]+1,z<0||z>=v)throw Error(`slice index ${h.begin[b]} of dimension ${b} out of bounds.`)}else h.begin[b]=ZE(h.begin[b],0,h.strides[b],v,w,T),h.end[b]=ZE(h.end[b],1,h.strides[b],v,w,T);const _=h.strides[b]===1&&h.begin[b]===0&&h.end[b]===v;p=p&&_,g=g&&(b===0&&h.strides[b]===1||_)}else p=p&&h.strides[b]===1&&k,g=g&&(b===0&&h.strides[b]===1||k);let S,C=!1;if(h.beginValid&&h.endValid?(S=h.end[b]-h.begin[b],C=!0):x?(S=1,C=!0):k&&v>=0&&(h.strides[b]<0?S=-v:S=v,C=!0),C){let _;S===0||S<0!=h.strides[b]<0?_=0:_=Math.trunc(S/h.strides[b])+(S%h.strides[b]!==0?1:0),m.push(_)}else m.push(-1)}for(let b=0;b<h.finalShapeGatherIndices.length;++b){const x=h.finalShapeGatherIndices[b];x>=0?y.push(m[x]):x===t2&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>h.finalShapeGatherIndices[x]!==t2),finalShape:y,isIdentity:p,sliceDim0:g,isSimpleSlice:f,begin:h.begin,end:h.end,strides:h.strides}}function kJ(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(t2),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(SJ),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function ZE(n,e,t,r,s,i){if(s[e])return t>0?i[e]:i[e+1&1];{const a=n<0?r+n:n;return a<i[0]?i[0]:a>i[1]?i[1]:a}}const ZD=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:gk,computeFlatOffset:xk,computeOutShape:yk,getNormalizedAxes:IJ,isSliceContinous:bk,maskToAxes:TJ,parseSliceParams:cv,sliceInfo:vk,startForAxis:XD,startIndicesWithElidedDims:WD,stopForAxis:UD,stopIndicesWithElidedDims:VD,stridesForAxis:BD,stridesWithElidedDims:FD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HD{static sgd(e){return new lv(e)}static momentum(e,t,r=!1){return new dk(e,t,r)}static rmsprop(e,t=.9,r=0,s=null,i=!1){return new hk(e,t,r,s,i)}static adam(e=.001,t=.9,r=.999,s=null){return new uk(e,t,r,s)}static adadelta(e=.001,t=.95,r=null){return new ok(e,t,r)}static adamax(e=.002,t=.9,r=.999,s=null,i=0){return new ck(e,t,r,s,i)}static adagrad(e,t=.1){return new lk(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Il=HD;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CJ=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function tg(){return new Promise(n=>CJ(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(n,e){const t=n[0].length;n.forEach((s,i)=>{M(s.length===t,()=>`Error in concat${t}D: rank of tensors[${i}] must be the same as the rank of the rest (${t})`)}),M(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,i)=>{for(let a=0;a<t;a++)M(a===e||s[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${i}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`)})}function ra(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var pi;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(pi||(pi={}));function KD(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const i=t[s],a=r[r.length-t.length+s],o=r[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${i} but shape[${s+n}] = ${o}`)}else r[a]=i}return r}function YD(n){const e={FIRST_DIM_SIZE:pi.FIRST_DIM_SIZE,VALUE_ROWIDS:pi.VALUE_ROWIDS,ROW_LENGTHS:pi.ROW_LENGTHS,ROW_SPLITS:pi.ROW_SPLITS,ROW_LIMITS:pi.ROW_LIMITS,ROW_STARTS:pi.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function jD(n){return n.length===0?0:n[0]===pi.FIRST_DIM_SIZE?n.length-1:n.length}function QD(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const i=n[s],a=e[s+1];if(i>=0&&a>=0&&i!==1&&i!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${i} but ragged tensor input.flatValues.shape[${s-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk=30;function dv(n){return n<=Sk?n:w0(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ng(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const i=e.length;for(let a=0;a<i;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(i+1))}return s}function rg(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],i=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?i.push(a):s.push(a);r.push(...s),r.push(0),r.push(...i)}return r}function sg(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let i=1;i<n.length;++i)i<=e.length?r?s.push(e[i-1]*n[i]):s.push(n[i]/e[i-1]):s.push(n[i]);return s}function Ik(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function kk(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hv=1.7580993408473768,pv=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck=.3275911,_k=.254829592,Mk=-.284496736,Nk=1.421413741,Ek=-1.453152027,Rk=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function JD(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function qD(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function eP(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function Lk(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function tP(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function nP(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const i=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:t,imag:r}}function rP(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),i=Math.sin(r);return{real:s,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iw="->",_J=/->/g,HE=",",KE="...";function Ak(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(_J,"").length)/iw.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${iw}").`);const[r,s]=n.split(iw);M(r.indexOf(KE)===-1,()=>`The ellipsis notation ("${KE}") is not supported yet.`);const i=r.split(HE),a=i.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<s.length;++h){const p=s[h];if(!i.some(g=>g.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);o.indexOf(p)===-1&&o.push(p)}for(let h=0;h<r.length;++h){const p=r[h];o.indexOf(p)===-1&&p!==HE&&o.push(p)}const l=new Array(i.length);for(let h=0;h<a;++h){if(new Set(i[h].split("")).size!==i[h].length)throw new Error(`Found duplicate axes in input component ${i[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let p=0;p<i[h].length;++p)l[h].push(o.indexOf(i[h][p]))}const u=o.length,c=s.length,d=[];for(let h=c;h<u;++h)d.push(h);return{allDims:o,summedDims:d,idDims:l}}function zk(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function Dk(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const i=t[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=i[a]:M(r[e[s][a]]===i[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(i)}, but got dimension ${i[a]}`)}}function Pk(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let a=0;a<s;++a)r.push([]);const i=[];for(let a=0;a<t.length;++a){const o=t[a],l=MJ(e,o);for(const u of l)i.indexOf(u)===-1&&(r[a].push(u),i.push(u))}return{path:t,steps:r}}function $k(n){return n.every((e,t)=>e===t)}function MJ(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function Fk(n,e,t=0){let r=[];if(typeof e=="number")M(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((a,o)=>(o===-1&&(a+=1),a),0);M(s<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const a=e.reduce((o,l)=>l>0?o+l:o);e[i]=n.shape[t]-a}M(n.shape[t]===e.reduce((a,o)=>a+o),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function iP(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function aP(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function lP(n,e){return`size ${n} must be non-negative, not ${e}`}function uP(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function cP(n,e){const t=ie(n),r=ie(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function dP(n,e){const t=ie(n),r=ie(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(){return"segment ids must be >= 0"}function hP(){return"segment ids are not increasing"}function pP(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function fP(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(n,e){let t=!1,r;for(n<=Sk?(r=n,t=!0):r=w0(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=w0(n,r+1);return r}function gP(n,e,t){const r=[],s=n.length;for(let i=0;i<s;i++)i!==e?r.push(n[i]):r.push(t);return r}function Gk(n,e,t,r){const s=e.shape.length,i=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${i}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let d=0;d<r;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const a=n.shape[t],o=[];let l=1,u=1,c=1;for(let d=0;d<r;++d)o.push(n.shape[d]),l*=n.shape[d];for(let d=r;d<t;d++)o.push(n.shape[d]),u*=n.shape[d];for(let d=r;d<s;d++)o.push(e.shape[d]);for(let d=t+1;d<i;d++)o.push(n.shape[d]),c*=n.shape[d];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}const NJ=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Gk,computeOutShape:gP,segOpComputeOptimalWindowSize:mP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(n){try{return n.map(e=>$a(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function yP(n){return n.map(e=>ta(e))}const bP=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:_k,ERF_A2:Mk,ERF_A3:Nk,ERF_A4:Ek,ERF_A5:Rk,ERF_P:Ck,PARALLELIZE_THRESHOLD:Sk,get RowPartitionType(){return pi},SELU_SCALE:pv,SELU_SCALEALPHA:hv,applyActivation:rv,assertAndGetBroadcastShape:qe,assertAxesAreInnerMostDims:lr,assertParamsConsistent:wk,assignToTypedArray:tP,axesAreInnerMostDims:LI,calculateShapes:ll,checkEinsumDimSizes:Dk,checkPadOnDimRoundingMode:Mr,combineLocations:uD,combineRaggedTensorToTensorShapes:KD,complexWithEvenIndex:qD,complexWithOddIndex:eP,computeConv2DInfo:Xn,computeConv3DInfo:rl,computeDefaultPad:pI,computeDilation2DInfo:$m,computeOptimalWindowSize:dv,computeOutAndReduceShapes:Un,computeOutShape:ra,computePool2DInfo:ti,computePool3DInfo:Ka,convertConv2DDataFormat:Ya,decodeEinsumEquation:Ak,eitherStridesOrDilationsAreOne:or,expandShapeToKeepDim:fn,exponent:rP,exponents:nP,fromStringArrayToUint8:yP,fromUint8ToStringArray:Ba,getAxesPermutation:rn,getBroadcastDims:du,getComplexWithIndex:Lk,getEinsumComputePath:Pk,getEinsumPermutation:zk,getFusedBiasGradient:nv,getFusedDyActivation:tv,getImageCenter:Tk,getInnerMostAxes:mn,getPermuted:rg,getRaggedRank:jD,getReductionAxes:kn,getReshaped:ng,getReshapedPermuted:sg,getRowPartitionTypesHelper:YD,getSliceBeginCoords:Ik,getSliceSize:kk,getSparseFillEmptyRowsIndicesDenseShapeMismatch:sP,getSparseFillEmptyRowsNegativeIndexErrorMessage:iP,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:aP,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:uP,getSparseReshapeInputOutputMismatchErrorMessage:dP,getSparseReshapeInputOutputMultipleErrorMessage:cP,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:oP,getSparseReshapeNegativeOutputDimErrorMessage:lP,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:fP,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:n2,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:hP,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:pP,getUndoAxesPermutation:sl,isIdentityPermutation:$k,log:A9,mergeRealAndImagArrays:Va,prepareAndValidate:uv,prepareSplitSize:Fk,segment_util:NJ,shouldFuse:sv,slice_util:ZD,splitRealAndImagArrays:JD,stridesOrDilationsArePositive:uu,tupleValuesAreOne:Bo,upcastType:Vr,validateDefaultValueShape:QD,validateInput:jx,validateUpdateShape:JI,warn:ws},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oJ();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xP={kernelName:Lf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,zu(Te(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EJ={kernelName:bd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=Lt(Te(t,"float32")),s=ir(Ee(Ve(1),r));return Gt(Fe(n,s))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RJ={kernelName:xd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=ir(Ee(Lt(Te(t,"float32")),1));return Fe(n,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ={kernelName:Mu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=qe(t.shape,r.shape);return{a:()=>{let i=n;const a=kn(t.shape,s);return a.length>0&&(i=Ae(i,a)),H(i,t.shape)},b:()=>{let i=n;const a=kn(r.shape,s);return a.length>0&&(i=Ae(i,a)),H(i,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AJ={kernelName:Af,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((r,s)=>{t[s]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zJ={kernelName:zf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>yt(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DJ={kernelName:Df,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>yt(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PJ={kernelName:vd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Fe(n,ir(Ee(Ve(1),Lt(Te(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $J={kernelName:wd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=ir(me(Ve(1),Lt(Te(t,"float32"))));return Fe(n,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FJ={kernelName:Id,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=qe(t.shape,r.shape);return{a:()=>{const i=me(Lt(t),Lt(r));let a=Z(n,Fe(r,i));const o=kn(t.shape,s);return o.length>0&&(a=Ae(a,o)),H(a,t.shape)},b:()=>{const i=me(Lt(t),Lt(r));let a=Gt(Z(n,Fe(t,i)));const o=kn(r.shape,s);return o.length>0&&(a=Ae(a,o)),H(a,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GJ={kernelName:Sd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Fe(n,me(Lt(Te(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OJ={kernelName:Td,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Fe(n,Ee(Ve(1),Lt(Te(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WJ(n,e,t,r,s,i){const a=N(n,"dy","avgPool3dGrad"),o=N(e,"input","avgPool3dGrad");let l=a,u=o,c=!1;o.rank===4&&(c=!0,l=H(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Mr("avgPool3dGrad",s,i);const d={dy:l,input:u},h={filterSize:t,strides:r,pad:s,dimRoundingMode:i},p=W.runKernel(kb,d,h);return c?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const VJ=V({avgPool3dGrad_:WJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ={kernelName:$f,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=t;return{x:()=>VJ(n,r,s,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XJ(n,e,t,r,s){const i=N(n,"dy","avgPoolGrad"),a=N(e,"input","avgPoolGrad");M(a.rank===i.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`);let o=a,l=i,u=!1;a.rank===3&&(u=!0,o=H(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),M(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:l,input:o},d={filterSize:t,strides:r,pad:s},h=W.runKernel(Ib,c,d);return u?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const UJ=V({avgPoolGrad_:XJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZJ={kernelName:Pf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{filterSize:s,strides:i,pad:a}=t;return{x:()=>UJ(n,r,s,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HJ={kernelName:Ff,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[r,s]=e,{transposeA:i,transposeB:a}=t;return!i&&!a?{a:()=>ot(n,s,!1,!0),b:()=>ot(r,n,!0,!1)}:!i&&a?{a:()=>ot(n,s,!1,!1),b:()=>ot(n,r,!0,!1)}:i&&!a?{a:()=>ot(s,n,!1,!0),b:()=>ot(r,n,!1,!1)}:{a:()=>ot(s,n,!0,!0),b:()=>ot(n,r,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KJ={kernelName:Gf,gradFunc:(n,e,t)=>{const{blockShape:r,crops:s}=t;return{x:()=>Km(n,r,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YJ={kernelName:_z,gradFunc:(n,e,t)=>{const r=t,s=r.inputShape,i=r.shape,a=Array.from(i);for(let l=s.length-1;l>=0;l--)if(s[l]===i[l])a[l]=1;else if(s[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>Ae(n,o,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jJ={kernelName:kd,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QJ={kernelName:Cd,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JJ={kernelName:_d,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=t;return{x:()=>Gn(ei(ja(r,s),il(r,i)),n,yt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qJ={kernelName:Wf,inputsToSave:["x"],gradFunc:xP.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq={kernelName:Vf,saveAllInputs:!0,gradFunc:(n,e,t)=>{const r=e.map(o=>o.shape),{axis:s}=t,i=lt(s,e[0].shape)[0],a=r.map(o=>o[i]);return Wr(n,a,i).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tq={kernelName:Bf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=t;return M(Bo(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>II(r.shape,n,s,a,o,l),filter:()=>sk(r,n,s.shape,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nq={kernelName:Xf,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=t;return{dy:()=>Oa(n,s,i,a,o,1,l),filter:()=>sk(n,r,s.shape,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rq(n,e,t,r,s){let i=n;n.rank===4&&(i=H(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),M(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),M(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),M(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),M(i.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${t[3]}.`),M(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const o={x:i,dy:a},l={strides:r,pad:s,filterShape:t};return W.runKernel(Eb,o,l)}const sq=V({conv3DBackpropFilter_:rq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq={kernelName:Uf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:r,strides:s,pad:i}=t;M(Bo(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[a,o]=e;return{x:()=>lD(a.shape,n,o,s,i),filter:()=>sq(a,n,o.shape,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq={kernelName:Md,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(Gt(Ux(Te(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq={kernelName:Nd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(Zx(Te(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lq={kernelName:Zf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s,exclusive:i,reverse:a}=t;return{x:()=>{const o=rn([s],r.rank);let l=zx(n,s,i,!a);return o!=null&&(l=ft(l,o)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq={kernelName:Hf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=t,o=r??[1,1];M(Bo(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;return M(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),M(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),M(or(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),Mr("depthwiseConv2d",i,a),{x:()=>wD(l.shape,n,u,s,i,o,a),filter:()=>vD(l,n,u.shape,s,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cq={kernelName:Kf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,i={x:r,filter:s,dy:n},a={x:r,filter:s,dy:n};return{x:()=>W.runKernel(S0,i,t),filter:()=>W.runKernel(T0,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dq={kernelName:Rd,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,r={dy:n,y:t};return{x:()=>W.runKernel(Wb,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hq={kernelName:Ld,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,r=Z(Ur(Gt(Lt(t))),2/Math.sqrt(Math.PI));return{x:()=>Z(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq={kernelName:Ad,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fq={kernelName:jf,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>H(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mq={kernelName:zd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,Ur(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq={kernelName:Dd,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq={kernelName:Pd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=qe(t.shape,r.shape);return{a:()=>{const i=Fe(n,Te(r,"float32")),a=kn(t.shape,s);return a.length>0?H(Ae(i,a),t.shape):i},b:()=>{let i=Z(n,Te(t,"float32"));const a=kn(r.shape,s);a.length>0&&(i=H(Ae(i,a),r.shape));const o=Lt(r);return Gt(Fe(i,Te(o,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq={kernelName:Qf,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:r}=t,[s,i,a,o]=e,l=o??Ve(1),u=kn(i.shape,s.shape),c=[];if(i.rank===1){for(let f=0;f<s.shape.length-1;++f)c.push(s.shape[f]);c.push(1)}const d=Ee(s,i),h=Z(n,l),p=Vx(me(a,Ve(r))),g=Z(Z(Z(p,p),p),Ve(-.5));return{x:()=>i.rank===1?H(Z(Z(n,Ts(H(p,[1,1,1,i.shape[0]]),c)),l),s.shape):H(Z(Z(n,p),l),s.shape),mean:()=>{let f=Z(Z(p,Ve(-1)),h);return i.rank===1&&(f=Ae(f,u)),H(f,i.shape)},variance:()=>{let f=Z(Z(g,d),h);return i.rank===1&&(f=Ae(f,u)),H(f,i.shape)},scale:()=>{const f=Z(d,p);let m=Z(n,f);return i.rank===1&&(m=Ae(m,u)),H(m,i.shape)},offset:()=>{let f=n;return i.rank===1&&(f=Ae(f,u)),H(f,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xq={kernelName:Jf,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[r,s]=e,{axis:i,batchDims:a}=t,o=lt(i,r.shape)[0],l=(u,c,d)=>()=>{const h=u.shape,p=c.size,g=h.slice(0,o),f=g.length,m=h.slice(i,h.length).slice(1),y=m.length,b=YE(0,f),x=YE(f+1,f+1+y),v=jE([g,[p],m]),w=H(d,v),T=H(c,[p]),k=jE([[f],b,x]),S=ft(w,k);let C=Jx(S,T,u.shape[o]);const _=sl(k);return C=ft(C,_),C};if(a===1){const u=r.shape[0],c=r.split(u,0);return{x:()=>fr(c.map((d,h)=>l(d,s.slice(h,1),n.slice(h,1))())).reshape(r.shape),indices:()=>s}}else return{x:l(r,s,n),indices:()=>s}}};function YE(n,e){const t=[];for(let r=n;r<e;++r)t.push(r);return t}function jE(n){const e=[];for(let t=0;t<n.length;++t)for(let r=0;r<n[t].length;++r)e.push(n[t][r]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq={kernelName:$d,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>yt(t),b:()=>yt(r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wq={kernelName:Fd,gradFunc:n=>({x:()=>Te(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sq={kernelName:Gd,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tq={kernelName:Od,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq={kernelName:Wd,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq={kernelName:em,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{alpha:s}=t,i=Nr(r,0);return{x:()=>Gn(i,n,Z(n,s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq={kernelName:Bd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Fe(n,me(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q={kernelName:Vd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Fe(n,Te(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq={kernelName:Mz,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t;return{logits:()=>{const i=Ur(r);return Ee(n,Z(Ae(n,s,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nq(n,e,t,r=5,s=1,i=1,a=.5){const o={x:n,y:e,dy:t},l={depthRadius:r,bias:s,alpha:i,beta:a};return W.runKernel(Yb,o,l)}const Eq=V({localResponseNormalizationBackprop_:Nq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rq={kernelName:am,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=t;return{x:()=>Eq(r,s,n,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vP(n,e,t,r){return e.rank<t.rank&&(e=H(e,fn(e.shape,r))),n.rank<t.rank&&(n=H(n,fn(n.shape,r))),{x:()=>Z(n,Te(us(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QE={kernelName:om,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const r=t,{reductionIndices:s}=r,i=e[0],a=e[1],o=lt(s,i.shape),l=vP(n,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq={kernelName:Xd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>Z(n,Te(ja(t,r),"float32")),b:()=>Z(n,Te(td(t,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(n,e,t,r,s,i,a){const o=N(n,"dy","maxPool3dGrad"),l=N(e,"input","maxPool3dGrad"),u=N(t,"output","maxPool3dGrad");let c=o,d=l,h=u,p=!1;l.rank===4&&(p=!0,c=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=H(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=H(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),M(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),M(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),M(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),Mr("maxPool3dGrad",i,a);const g={dy:c,input:d,output:h},f={filterSize:r,strides:s,pad:i,dimRoundingMode:a},m=W.runKernel(Qb,g,f);return p?H(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const zq=V({maxPool3dGrad_:Aq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dq={kernelName:um,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=t;return{x:()=>zq(n,r,s,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pq(n,e,t,r,s,i,a){const o=N(n,"dy","maxPoolGrad"),l=N(e,"input","maxPoolGrad"),u=N(t,"output","maxPoolGrad");M(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),M(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),M(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Mr("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},d={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return W.runKernel(jb,c,d)}const $q=V({maxPoolGrad_:Pq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq={kernelName:lm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o}=t;return{x:()=>$q(n,r,s,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gq={kernelName:cm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t,i=lt(s,r.shape),a=Un(r.shape,i)[1],o=ie(a);return{x:()=>{const l=r.shape.slice();i.forEach(c=>{l[c]=1});const u=H(n,l);return Fe(Z(u,Gr(r.shape,"float32")),o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq={kernelName:dm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const r=t,{axis:s}=r,[i,a]=e,o=lt(s,i.shape),l=vP(n,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq={kernelName:Ud,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>Z(n,Te(il(t,r),"float32")),b:()=>Z(n,Te(Nr(t,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq={kernelName:hm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const r=e[0],{paddings:s}=t,i=s.map(a=>a[0]);return{x:()=>gt(n,i,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bq={kernelName:Zd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=qe(t.shape,r.shape);return{a:()=>{const i=kn(t.shape,s);return i.length>0?H(Ae(n,i),t.shape):n},b:()=>{const i=Z(n,Gt(yh(Fe(t,r)))),a=kn(r.shape,s);return a.length>0?H(Ae(i,a),r.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq={kernelName:Hd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=qe(t.shape,r.shape);return{a:()=>{const i=Z(n,Te(r,"float32")),a=kn(t.shape,s);return a.length>0?H(Ae(i,a),t.shape):i},b:()=>{const i=Z(n,Te(t,"float32")),a=kn(r.shape,s);return a.length>0?H(Ae(i,a),r.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq={kernelName:pm,gradFunc:n=>({x:()=>Gt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zq={kernelName:gm,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Sn(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq={kernelName:mm,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kq={kernelName:ym,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:r}=t;return As(n,r).map(s=>()=>s)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JE={kernelName:bm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const r=e[0],{paddings:s}=t,i=s.map(a=>a[0]);return{x:()=>gt(n,i,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yq={kernelName:Kd,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,r,s]=e,i=t,a=r,o=qe(i.shape,a.shape);return{a:()=>{const l=Te(a,"float32");let u=Z(n,Z(l,Wa(i,Ee(l,Ve(1)))));const c=kn(i.shape,o);return c.length>0&&(u=Ae(u,c)),H(u,i.shape)},b:()=>{const l=Nr(i,0),u=Gn(l,cs(i),yt(i));let c=Z(n,Z(s,u));const d=kn(a.shape,o);return d.length>0&&(c=Ae(c,d)),H(c,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jq={kernelName:xm,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,r]=e,s=Nr(t,0);return{x:()=>Gn(s,n,Z(n,r)),alpha:()=>{let i=Gn(s,yt(n),Z(n,t));const a=kn(r.shape,n.shape);return a.length>0&&(i=Ae(i,a)),H(i,r.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qq(n,e,t){const r=n.shape.slice();r[t]=1;const s=H(e,r),i=mf(n,t,!0,!1),a=mf(n,t,!0,!0),o=Z(i,a);return Z(s,o)}function Jq(n,e,t){const r=n.shape.length,s=r-t.length,i=rn(t,r);let a=n;i!=null&&(a=ft(n,i));const o=a.shape.slice(),l=o.splice(r-t.length,t.length).reduce((d,h)=>d*h,1);o.push(l);const u=a.reshape(o);let c=Qq(u,e,s);if(c=c.reshape(a.shape),i!=null){const d=sl(i);c=ft(c,d)}return c}const qq={kernelName:vm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t;let i=[];return s==null?i=r.shape.map((a,o)=>o):typeof s=="number"?i=[s]:i=s,{x:()=>Jq(r,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eee={kernelName:Ed,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=qe(t.shape,r.shape);return{a:()=>{const i=Fe(n,Te(r,"float32")),a=kn(t.shape,s);return a.length>0?H(Ae(i,a),t.shape):i},b:()=>{let i=Z(n,Te(t,"float32"));const a=kn(r.shape,s);a.length>0&&(i=H(Ae(i,a),r.shape));const o=Lt(r);return Gt(Fe(i,Te(o,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tee={kernelName:Yd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Fe(n,Gt(Lt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nee={kernelName:Qd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,r=Z(il(t,6),zu(t));return{x:()=>Z(n,Te(r,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ree={kernelName:jd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,Te(zu(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const see={kernelName:wm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>H(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iee={kernelName:Tm,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[r]=e,s={dy:n,images:r};return{images:()=>W.runKernel(ux,s,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aee={kernelName:Sm,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[r]=e,s={dy:n,images:r};return{images:()=>W.runKernel(lx,s,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oee={kernelName:Im,gradFunc:(n,e,t)=>{const{dims:r}=t,s=lt(r,n.shape);return{x:()=>Ls(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lee={kernelName:Jd,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uee={kernelName:qd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Gt(Fe(n,Z(Wa(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cee={kernelName:km,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>Te(yt(t),"float32"),t:()=>Z(n,Te(t,n.dtype)),e:()=>Z(n,Te(Um(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dee={kernelName:eh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=Nr(t,Ve(0)),s=Ve(hv),i=Ve(pv),a=Z(n,i),o=Z(Z(n,s),Ur(Te(t,"float32")));return Gn(r,a,o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hee={kernelName:sh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,Z(t,Ee(Ve(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pee={kernelName:rh,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fee={kernelName:th,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(Om(Te(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mee={kernelName:nh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(Ax(Te(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gee={kernelName:Cm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{begin:s,size:i}=t,a=r.shape,[o,l]=cv(r,s,i),u=[];for(let c=0;c<n.rank;c++)u.push([o[c],a[c]-o[c]-l[c]]);return{x:()=>Qa(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yee={kernelName:Em,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r]=e,{dim:s}=t,i=!0,a=Z(n,r);return{logits:()=>Ee(a,Z(Ae(a,[s],i),r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bee={kernelName:ih,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,xi(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qE={kernelName:Mm,gradFunc:(n,e,t)=>{const{blockShape:r,paddings:s}=t;return{x:()=>Gm(n,r,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e3={kernelName:Nm,gradFunc:(n,e,t)=>{const{axis:r}=t;return{x:()=>pn(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xee={kernelName:ah,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Fe(n,Z(ir(Te(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vee={kernelName:bx,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(n,Z(Te(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wee={kernelName:oh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Ve(2);return{a:()=>Z(n,Z(s,Ee(t,r))),b:()=>Z(n,Z(s,Ee(r,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const See={kernelName:hh,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tee={kernelName:lh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=qe(t.shape,r.shape);return{a:()=>{let i=n;const a=kn(t.shape,s);return a.length>0&&(i=Ae(i,a)),H(i,t.shape)},b:()=>{let i=n;const a=kn(r.shape,s);return a.length>0&&(i=Ae(i,a)),H(Gt(i),r.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iee={kernelName:_m,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,s=r.shape.slice(),{axis:i}=t;lt(i,r.shape).forEach(l=>{s[l]=1});const a=H(n,s),o=Z(a,Gr(r.shape,"float32"));return{x:()=>o}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kee={kernelName:uh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Fe(n,Lt(Om(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cee={kernelName:ch,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Z(Ee(Ve(1),Lt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ee={kernelName:dh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{reps:s}=t;return{x:()=>{let i=yt(r);if(r.rank===1)for(let a=0;a<s[0];++a)i=me(i,gt(n,[a*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let a=0;a<s[0];++a)for(let o=0;o<s[1];++o)i=me(i,gt(n,[a*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let a=0;a<s[0];++a)for(let o=0;o<s[1];++o)for(let l=0;l<s[2];++l)i=me(i,gt(n,[a*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let a=0;a<s[0];++a)for(let o=0;o<s[1];++o)for(let l=0;l<s[2];++l)for(let u=0;u<s[3];++u)i=me(i,gt(n,[a*r.shape[0],o*r.shape[1],l*r.shape[2],u*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mee={kernelName:Xl,gradFunc:(n,e,t)=>{const r=t,{perm:s}=r,i=sl(s);return{x:()=>ft(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nee={kernelName:Lm,gradFunc:(n,e,t)=>{const r=t,{axis:s}=r;return{value:()=>fr(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eee={kernelName:Am,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ree(n,t)}}};function Ree(n,e){const t=ca(e,yt(e)),r=bh(n,t);let s=ja(e,Ve(0,"int32"));const i=r.rank-s.rank;for(let o=0;o<i;++o)s=Jn(s,o+1);s=ei(s,Gr(r.shape,"bool"));const a=yt(r);return Gn(s,r,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lee={kernelName:zm,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aee=[xP,EJ,RJ,LJ,AJ,zJ,DJ,PJ,$J,FJ,GJ,OJ,BJ,ZJ,HJ,KJ,YJ,jJ,QJ,JJ,qJ,eq,nq,tq,iq,aq,oq,lq,uq,cq,eee,dq,hq,pq,fq,mq,yq,gq,bq,xq,vq,wq,Sq,Tq,Iq,kq,Cq,_q,Mq,Rq,QE,QE,Lq,Dq,Fq,Gq,Oq,Wq,Vq,Bq,Xq,Uq,Zq,Hq,Kq,JE,JE,Yq,jq,qq,tee,nee,ree,see,iee,aee,oee,lee,uee,cee,dee,hee,pee,fee,mee,gee,yee,bee,qE,qE,e3,e3,xee,wee,vee,See,Tee,Iee,kee,Cee,_ee,Mee,Nee,Eee,Lee];for(const n of Aee)Nz(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.abs=function(){return this.throwIfDisposed(),vn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.acos=function(){return this.throwIfDisposed(),iI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.acosh=function(){return this.throwIfDisposed(),aI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.add=function(n){return this.throwIfDisposed(),me(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.all=function(n,e){return this.throwIfDisposed(),Ex(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.any=function(n,e){return this.throwIfDisposed(),hf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.argMax=function(n){return this.throwIfDisposed(),lu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.argMin=function(n){return this.throwIfDisposed(),oI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.asScalar=function(){return this.throwIfDisposed(),M(this.size===1,()=>"The array must have only 1 element."),H(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.asType=function(n){return this.throwIfDisposed(),Te(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as1D=function(){return this.throwIfDisposed(),H(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as2D=function(n,e){return this.throwIfDisposed(),H(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),H(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as4D=function(n,e,t,r){return this.throwIfDisposed(),H(this,[n,e,t,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.as5D=function(n,e,t,r,s){return this.throwIfDisposed(),H(this,[n,e,t,r,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.asin=function(){return this.throwIfDisposed(),lI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.asinh=function(){return this.throwIfDisposed(),uI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.atan=function(){return this.throwIfDisposed(),cI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.atan2=function(n){return this.throwIfDisposed(),dI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.atanh=function(){return this.throwIfDisposed(),hI(this)};ae().prototype.avgPool=function(n,e,t,r){return this.throwIfDisposed(),Fm(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Gm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.batchNorm=function(n,e,t,r,s){return this.throwIfDisposed(),ph(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Ul(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cast=function(n){return this.throwIfDisposed(),Te(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.ceil=function(){return this.throwIfDisposed(),xI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),Xr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof xt&&(n=[n]),pn([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.conv1d=function(n,e,t,r,s,i){return this.throwIfDisposed(),Rx(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.conv2dTranspose=function(n,e,t,r,s){return this.throwIfDisposed(),Lx(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.conv2d=function(n,e,t,r,s,i){return this.throwIfDisposed(),Oa(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cos=function(){return this.throwIfDisposed(),Om(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cosh=function(){return this.throwIfDisposed(),Ax(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),mf(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),zx(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),_I(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.depthwiseConv2d=function(n,e,t,r,s,i){return this.throwIfDisposed(),fh(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.dilation2d=function(n,e,t,r,s){return this.throwIfDisposed(),MI(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.divNoNan=function(n){return this.throwIfDisposed(),NI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.div=function(n){return this.throwIfDisposed(),Fe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.dot=function(n){return this.throwIfDisposed(),EI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.elu=function(){return this.throwIfDisposed(),mh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.equal=function(n){return this.throwIfDisposed(),us(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.erf=function(){return this.throwIfDisposed(),RI(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),AI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.exp=function(){return this.throwIfDisposed(),Ur(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.expandDims=function(n){return this.throwIfDisposed(),Jn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.expm1=function(){return this.throwIfDisposed(),zI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.fft=function(){return this.throwIfDisposed(),qm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.flatten=function(){return this.throwIfDisposed(),H(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.floor=function(){return this.throwIfDisposed(),yh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.floorDiv=function(n){return this.throwIfDisposed(),Nx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.gather=function(n,e,t){return this.throwIfDisposed(),bh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.greaterEqual=function(n){return this.throwIfDisposed(),ja(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.greater=function(n){return this.throwIfDisposed(),Nr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.ifft=function(){return this.throwIfDisposed(),id(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.irfft=function(){return this.throwIfDisposed(),Kx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.isFinite=function(){return this.throwIfDisposed(),DI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.isInf=function(){return this.throwIfDisposed(),PI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.isNaN=function(){return this.throwIfDisposed(),$I(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Vm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.lessEqual=function(n){return this.throwIfDisposed(),il(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.less=function(n){return this.throwIfDisposed(),td(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.localResponseNormalization=function(n,e,t,r){return this.throwIfDisposed(),FI(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logSigmoid=function(){return this.throwIfDisposed(),GI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logSoftmax=function(n){return this.throwIfDisposed(),$x(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),Xm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.log=function(){return this.throwIfDisposed(),cs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.log1p=function(){return this.throwIfDisposed(),Bm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logicalAnd=function(n){return this.throwIfDisposed(),ei(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logicalNot=function(){return this.throwIfDisposed(),Um(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logicalOr=function(n){return this.throwIfDisposed(),Fx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.logicalXor=function(n){return this.throwIfDisposed(),OI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),ot(this,n,e,t)};ae().prototype.maxPool=function(n,e,t,r){return this.throwIfDisposed(),Zm(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.max=function(n,e){return this.throwIfDisposed(),Es(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.maximum=function(n){return this.throwIfDisposed(),ca(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.mean=function(n,e){return this.throwIfDisposed(),en(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.min=function(n,e){return this.throwIfDisposed(),ed(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.minimum=function(n){return this.throwIfDisposed(),Xo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),VI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.mod=function(n){return this.throwIfDisposed(),BI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.mul=function(n){return this.throwIfDisposed(),Z(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.neg=function(){return this.throwIfDisposed(),Gt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.norm=function(n,e,t){return this.throwIfDisposed(),gh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.notEqual=function(n){return this.throwIfDisposed(),hu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),nd(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.onesLike=function(){return this.throwIfDisposed(),ds(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.pad=function(n,e){return this.throwIfDisposed(),Qa(this,n,e)};ae().prototype.pool=function(n,e,t,r,s,i){return this.throwIfDisposed(),XI(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.pow=function(n){return this.throwIfDisposed(),Wa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.prelu=function(n){return this.throwIfDisposed(),Ym(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.prod=function(n,e){return this.throwIfDisposed(),UI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.reciprocal=function(){return this.throwIfDisposed(),HI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.relu=function(){return this.throwIfDisposed(),Ni(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.relu6=function(){return this.throwIfDisposed(),Ox(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.reshapeAs=function(n){return this.throwIfDisposed(),H(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.reshape=function(n){return this.throwIfDisposed(),H(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),ID(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),kD(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.reverse=function(n){return this.throwIfDisposed(),Ls(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.rfft=function(){return this.throwIfDisposed(),eg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.round=function(){return this.throwIfDisposed(),Wx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.rsqrt=function(){return this.throwIfDisposed(),Vx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.selu=function(){return this.throwIfDisposed(),Bx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.separableConv2d=function(n,e,t,r,s,i){return this.throwIfDisposed(),Xx(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sigmoid=function(){return this.throwIfDisposed(),xi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sign=function(){return this.throwIfDisposed(),KI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sin=function(){return this.throwIfDisposed(),Ux(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sinh=function(){return this.throwIfDisposed(),Zx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.slice=function(n,e){return this.throwIfDisposed(),gt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.softmax=function(n){return this.throwIfDisposed(),Jm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.softplus=function(){return this.throwIfDisposed(),Lu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Km(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.split=function(n,e){return this.throwIfDisposed(),Wr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sqrt=function(){return this.throwIfDisposed(),ir(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.square=function(){return this.throwIfDisposed(),Lt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Yx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.squeeze=function(n){return this.throwIfDisposed(),ol(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof xt?[this,n]:[this,...n];return fr(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.step=function(n){return this.throwIfDisposed(),zu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.stridedSlice=function(n,e,t,r,s,i,a,o){return this.throwIfDisposed(),YI(this,n,e,t,r,s,i,a,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sub=function(n){return this.throwIfDisposed(),Ee(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.sum=function(n,e){return this.throwIfDisposed(),Ae(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.tan=function(){return this.throwIfDisposed(),jI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.tanh=function(){return this.throwIfDisposed(),cu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.tile=function(n){return this.throwIfDisposed(),Ts(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.toBool=function(){return this.throwIfDisposed(),Te(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.toFloat=function(){return this.throwIfDisposed(),Te(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.toInt=function(){return this.throwIfDisposed(),Te(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.topk=function(n,e){return this.throwIfDisposed(),qI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.transpose=function(n){return this.throwIfDisposed(),ft(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.unique=function(n){return this.throwIfDisposed(),ek(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Jx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.unstack=function(n){return this.throwIfDisposed(),As(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.where=function(n,e){return this.throwIfDisposed(),Gn(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ae().prototype.zerosLike=function(){return this.throwIfDisposed(),yt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let co=class wP extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wP.prototype)}},Yi=class SP extends Error{constructor(e){super(e),Object.setPrototypeOf(this,SP.prototype)}},Y=class TP extends Error{constructor(e){super(e),Object.setPrototypeOf(this,TP.prototype)}};class nt extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nt.prototype)}}let zee=class IP extends Error{constructor(e){super(e),Object.setPrototypeOf(this,IP.prototype)}};/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kP{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const r=this.cache.keys().next().value;this.cache.delete(r)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const r=this.cache.keys().next().value;this.cache.delete(r)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fu(n,e){if(Array.isArray(n)){let t=[];for(let r=0;r<e;r++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Xi(n,e){if(!n)throw new zee(e)}function t3(n,e){let t=0;for(const r of n)r===e&&t++;return t}function $r(n){return n.length===1?n[0]:n}function Nt(n){return Array.isArray(n)?n:[n]}function va(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Ml(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let Gs={};function Ok(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function r2(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>r2(e));else{const e=Object.keys(n);for(const t of e){const r=n[t];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?n[t]=r.value:r2(r))}}}function ig(n,e={},t={},r="object",s=!1){if(typeof n=="string"){const i=n;let a;if(i in t)a=t[i];else if(i in Gs)a=Gs[i];else if(a=e[i],a==null)throw new Y(`Unknown ${r}: ${n}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const i=n;if(i.className==null||i.config==null)throw new Y(`${r}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const a=i.className;let o,l;if(a in t?[o,l]=t[a]:a in Gs?[o,l]=Gs.className:a in e&&([o,l]=e[a]),o==null)throw new Y(`Unknown ${r}: ${a}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(Gs))u[p]=Gs[p];for(const p of Object.keys(t))u[p]=t[p];const c=i.config;c.customObjects=u;const d=Object.assign({},Gs);for(const p of Object.keys(t))Gs[p]=t[p];r2(i.config);const h=l(o,i.config,t,s);return Gs=Object.assign({},d),h}else{const u=Object.assign({},Gs);for(const d of Object.keys(t))Gs[d]=t[d];const c=new o(i.config);return Gs=Object.assign({},u),c}}}function Dee(n,e){return n<e?-1:n>e?1:0}function oy(n,e){return-1*Dee(n,e)}function zo(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function Pee(n){if(n==null)throw new Y(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function $u(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new Y(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Wk(n,e,t=0,r=1/0){return Xi(t>=0),Xi(r>=t),Array.isArray(n)&&n.length>=t&&n.length<=r&&n.every(s=>typeof s===e)}function Fn(n,e){Array.isArray(n)?(M(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,r)=>Fn(t,`element ${r+1} of ${e}`))):M(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${CP(n)}.`)}function CP(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>CP(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function $ee(n,e,t){let r=t!=null?t():Qn(),s;return(...i)=>{const a=t!=null?t():Qn();return a-r<e||(r=a,s=n(...i)),s}}function _P(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Fee=0;function MP(){return Fee++}const ly={};function fv(n=""){return n in ly||(ly[n]=0),ly[n]+=1,n+ly[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Gee=["channelsFirst","channelsLast"],Oee=["nearest","bilinear"],Wee=["valid","same","causal"],Vee=["max","avg"],Bee=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sc=new Map;function gn(n){$u(Gee,"DataFormat",n)}function Xee(n){$u(Oee,"InterpolationFormat",n)}function Ps(n){$u(Wee,"PaddingMode",n)}function NP(n){$u(Vee,"PoolMode",n)}const Ap=[],n3="/";function Zl(n,e){Ap.push(n);try{const t=e();return Ap.pop(),t}catch(t){throw Ap.pop(),t}}function Uee(){return Ap.length===0?"":Ap.join(n3)+n3}function EP(n){if(!LP(n))throw new Error("Not a valid tensor name: '"+n+"'");return Uee()+n}function RP(n){if(!LP(n))throw new Error("Not a valid tensor name: '"+n+"'");sc.has(n)||sc.set(n,0);const e=sc.get(n);if(sc.set(n,sc.get(n)+1),e>0){const t=`${n}_${e}`;return sc.set(t,1),t}else return n}const Zee=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function LP(n){return!!n.match(Zee)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hee(n){return n===parseInt(n.toString(),10)}function Do(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let r=1;for(let s=e;s<t;++s)r*=n[s];return r}function ad(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const r=n[t];r<e&&(e=r)}return e}function Uo(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const r=n[t];r>e&&(e=r)}return e}function Ti(n,e){if(e<n)throw new Y(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let r=n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let aw;function Rn(){return aw==null&&(aw=Ki().epsilon()),aw}function Ii(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xa(n,e){return Te(n,e)}function ag(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),H(n,t)}function Kee(n,e){return j(()=>{if(n.shape.length!==2)throw new Y(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=ag(n,1);return s2(t,[1,e,1])})}function Yee(n){const e=[Do(n.shape)];return H(n,e)}function jee(n){if(n.rank<=1)throw new Y(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Do(n.shape,1)];return H(n,e)}function Hl(n,e,t){return j(()=>{switch(n.rank){case 1:return jm(n,e,t);case 2:return Hx(n,[e,0],[t,n.shape[1]]);case 3:return Qm(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return sd(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return gt(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return gt(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new Y(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function ow(n,e,t){return j(()=>{switch(n.rank){case 1:return jm(n,e,t);case 2:return Hx(n,[0,e],[n.shape[0],t]);case 3:return Qm(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return sd(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new Y(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function uy(n,e,t,r){return j(()=>{switch(n.rank){case 1:return jm(n,e,t);case 2:switch(r){case 1:return Hl(n,e,t);case 2:return ow(n,e,t);default:throw new Y(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Hl(n,e,t);case 2:return Qm(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return ow(n,e,t);default:throw new Y(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Hl(n,e,t);case 2:return sd(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return sd(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return ow(n,e,t);default:throw new Y(`The axis is not within the rank of the tensor ${r}`)}default:throw new Y(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Vk(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),pn(n,e)}function r3(n,e){switch(n.rank){case 1:return vI([n,e]);case 2:return wI([n,e],0);case 3:return SI([n,e],0);case 4:return TI([n,e],0);default:throw new Y(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function s2(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new Y(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Ts(n,e)}function mv(n,e=0,t=1,r,s){return Gx(n,e,t,r,s)}function sa(n,e,t,r){if(n.rank<2||e.rank<2)throw new nt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const s=n.shape.slice(-1)[0],i=e.shape.slice(-2)[0];if(s!==i)throw new nt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return JS({a:n,b:e,transposeA:!1,transposeB:!1,bias:r?i2(n.rank,r,Ii()):null,activation:t});{const s=n.shape.slice(),i=s.pop();n=H(n,[-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},(h,p)=>p===0?e.rank-2:p<=e.rank-2?p-1:p);e=H(ft(e,c),[l,-1]);const d=[...s,...u];return H(JS({a:n,b:e,transposeA:!1,transposeB:!1,bias:r?i2(n.rank,r,Ii()):null,activation:t}),d)}}function AP(n,e,t){return j(()=>(Array.isArray(e)?e=nr(e,"int32"):e=Te(e,"int32"),bh(n,e,t)))}function og(n){return Z(n,n)}function i2(n,e,t){const r=e.shape;if(e.rank!==1&&e.rank!==n)throw new Y(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return r.length===1?H(e,[1,r[0],1,1,1]):H(e,[1,r[3],r[0],r[1],r[2]]);if(t==="channelsLast")return r.length===1?H(e,[1,1,1,1,r[0]]):H(e,[1].concat(r))}else if(n===4){if(t==="channelsFirst")return r.length===1?H(e,[1,r[0],1,1]):H(e,[1,r[2],r[0],r[1]]);if(t==="channelsLast")return r.length===1?H(e,[1,1,1,r[0]]):H(e,[1].concat(r))}else if(n===3){if(t==="channelsFirst")return r.length===1?H(e,[1,r[0],1]):H(e,[1,r[1],r[0]]);if(t==="channelsLast")return r.length===1?H(e,[1,1,r[0]]):H(e,[1].concat(r))}else if(n<3)return e;throw new Y(`Unsupported input rank by biasAdd: ${e.rank}`)}function Ei(n,e,t){return j(()=>(t==null&&(t=Ii()),gn(t),me(n,i2(n.rank,e,t))))}function Qee(n,e=1){if(e!==1)throw new nt(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return mh(n)}function Jee(n){return j(()=>Fe(n,me(vn(n),1)))}function zP(n,e,t,r){return j(()=>nk(n,e,t,r))}function qee(n){return j(()=>{const e=me(.5,Z(.2,n));return Xr(e,0,1)})}function lg(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ete=["fanIn","fanOut","fanAvg"],tte=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nte(n){$u(ete,"FanMode",n)}function rte(n){$u(tte,"Distribution",n)}let ni=class extends Du{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}};class Bk extends ni{apply(e,t){return Sn(e,t)}}Bk.className="Zeros";ye(Bk);let gv=class extends ni{apply(e,t){return Gr(e,t)}};gv.className="Ones";ye(gv);class Xk extends ni{constructor(e){if(super(),typeof e!="object")throw new Y(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new Y(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return j(()=>Z(Ve(this.value),Gr(e,t)))}getConfig(){return{value:this.value}}}Xk.className="Constant";ye(Xk);class Uk extends ni{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return al(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Uk.className="RandomUniform";ye(Uk);class Zk extends ni{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new nt(`randomNormal does not support dType ${t}.`);return mv(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Zk.className="RandomNormal";ye(Zk);class Hk extends ni{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new nt(`truncatedNormal does not support dType ${t}.`);return Qx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Hk.className="TruncatedNormal";ye(Hk);class Kk extends ni{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return j(()=>{if(e.length!==2||e[0]!==e[1])throw new Y("Identity matrix initializer can only be used for 2D square matrices.");return Z(this.gain,Dx(e[0]))})}getConfig(){return{gain:this.gain}}}Kk.className="Identity";ye(Kk);function ste(n,e="channelsLast"){let t,r;if(gn(e),n.length===2)t=n[0],r=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const s=Do(n,2);t=n[1]*s,r=n[0]*s}else if(e==="channelsLast"){const s=Do(n,0,n.length-2);t=n[n.length-2]*s,r=n[n.length-1]*s}}else{const s=Do(n);t=Math.sqrt(s),r=Math.sqrt(s)}return[t,r]}class Zr extends ni{constructor(e){if(super(),e.scale<0)throw new Y(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,nte(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,rte(this.distribution),this.seed=e.seed}apply(e,t){const r=ste(e),s=r[0],i=r[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,i):a/=Math.max(1,(s+i)/2),this.distribution==="normal"){const o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new nt(`${this.getClassName()} does not support dType ${t}.`);return Qx(e,0,o,t,this.seed)}else{const o=Math.sqrt(3*a);return al(e,-o,o,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Zr.className="VarianceScaling";ye(Zr);let yv=class extends Zr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Zr.className}};yv.className="GlorotUniform";ye(yv);let bv=class extends Zr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Zr.className}};bv.className="GlorotNormal";ye(bv);let xv=class extends Zr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Zr.className}};xv.className="HeNormal";ye(xv);let vv=class extends Zr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Zr.className}};vv.className="HeUniform";ye(vv);let wv=class extends Zr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Zr.className}};wv.className="LeCunNormal";ye(wv);let Sv=class extends Zr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Zr.className}};Sv.className="LeCunUniform";ye(Sv);class Yk extends ni{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return j(()=>{if(e.length<2)throw new nt("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const r=ie(e.slice(0,-1)),s=e[e.length-1],i=r*s;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const a=[Math.max(s,r),Math.min(s,r)],o=mv(a,0,1,t,this.seed),l=ak.qr(o,!1);let u=l[0];const c=l[1].flatten().stridedSlice([0],[Math.min(s,r)*Math.min(s,r)],[Math.min(s,r)+1]);return u=Z(u,c.sign()),r<s&&(u=u.transpose()),Z(Ve(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}Yk.className="Orthogonal";ye(Yk);const s3={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function i3(n,e={}){return ig(n,Pu.getMap().classNameMap,e,"initializer")}function tn(n){return Ok(n)}function jt(n){if(typeof n=="string"){const e=n in s3?s3[n]:n;if(e==="GlorotNormal")return new bv;if(e==="GlorotUniform")return new yv;if(e==="HeNormal")return new xv;if(e==="HeUniform")return new vv;if(e==="LeCunNormal")return new wv;if(e==="LeCunUniform")return new Sv;{const t={};return t.className=e,t.config={},i3(t)}}else return n instanceof ni?n:i3(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function a2(n){return Array.isArray(n)&&Array.isArray(n[0])}function E0(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function je(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new Y(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function It(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new Y(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function R0(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((r,s)=>r*s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const a3="Variable";class DP{constructor(e,t="float32",r=a3,s=!0,i=null){this.dtype=t??"float32",this.shape=e.shape,this.id=MP(),r=r??a3,this.originalName=EP(r),this.name=RP(this.originalName),this.trainable_=s,this.constraint=i,this.val=tk(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),ite(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ite(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function o2(n){return n.map(e=>e.read())}function jk(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Tn{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ki{constructor(e,t,r,s,i,a,o){this.dtype=e,this.shape=t,this.sourceLayer=r,this.inputs=s,this.callArgs=i,this.outputTensorIndex=o,this.id=MP(),a!=null&&(this.originalName=EP(a),this.name=RP(this.originalName)),this.rank=t.length}}let ate=0;class Tv{constructor(e,t){this.callArgs=t,this.id=ate++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const r of e.inboundLayers)r!=null&&r.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ote=0,ut=class extends Du{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ote++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const r=this.getClassName();t=va(r)+"_"+fv(r)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let r;if(e.batchInputShape!=null)r=e.batchInputShape;else if(e.inputShape!=null){let i=null;e.batchSize!=null&&(i=e.batchSize),r=[i].concat(e.inputShape)}this.batchInputShape=r;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Yi(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Y(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return $r(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return $r(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new co(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new co(`Layer ${this.name} is not connected, no input to return.`);return $r(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new co(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new co(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return $r(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Nt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const r=Nt(this.inputSpec);if(t.length!==r.length)throw new Y(`Layer ${this.name} expects ${r.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let s=0;s<t.length;s++){const i=t[s],a=r[s];if(a==null)continue;const o=i.rank;if(a.ndim!=null&&o!==a.ndim)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${o}`);if(a.maxNDim!=null&&o>a.maxNDim)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${o}`);if(a.minNDim!=null&&o<a.minNDim)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${o}.`);if(a.dtype!=null&&i.dtype!==a.dtype)throw new Y(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${i.dtype}.`);if(a.axes){const l=i.shape;for(const u in a.axes){const c=Number(u),d=a.axes[u],h=c>=0?l[c]:l[l.length+c];if(d!=null&&[d,null].indexOf(h)===-1)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${d} but got shape ${l}.`)}}if(a.shape!=null)for(let l=0;l<a.shape.length;++l){const u=a.shape[l],c=i.shape[l];if(u!=null&&c!=null&&u!==c)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${i.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const r=Nt(e),s=cte(e),i=dte(e);if(s===i)throw new Y("Arguments to apply() must be all SymbolicTensors or all Tensors");return Zl(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const o of Nt(e))a.push(o.shape);this.build($r(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(e),i){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const o=Nt(a),l=[];for(let u of o)r.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(a=$r(l),this.activityRegularizer!=null)throw new nt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=lte(e),o=this.computeOutputShape(a);let l;const u=ute(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?l=o.map((c,d)=>new ki(u,c,this,Nt(e),t,this.name,d)):l=new ki(u,o,this,Nt(e),t,this.name),this.addInboundNode(e,l,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new nt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((r,s)=>{r!=null&&e[s]!=null&&e[s]!==r&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new co(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const r=JSON.stringify(t.outputShapes);e.indexOf(r)===-1&&e.push(r)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new co(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Yi(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return R0(this.weights)}build(e){this.built=!0}getWeights(e=!1){return o2(e?this.trainableWeights:this.weights)}setWeights(e){j(()=>{const t=this.weights;if(t.length!==e.length)throw new Y(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const r=[],s=o2(t);for(let i=0;i<s.length;++i){const a=s[i],o=t[i],l=e[i];if(!ht(a.shape,l.shape))throw new Y(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);r.push([o,l])}jk(r)})}addWeight(e,t,r,s,i,a,o,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new Y(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(s=l!=null?l():jt("zeros"));const u=s.apply(t,r),c=new DP(u,r,e,a,o);return u.dispose(),i!=null&&this.addLoss(()=>i.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Nt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,r){if(!this.supportsMasking)return;const s=this.computeMask(e,r),i=Nt(t),a=Nt(s);if(i.length!==a.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let o=0;o<i.length;o++)i[o].kerasMask=a[o]}addInboundNode(e,t,r,s,i,a,o=null){const l=Nt(e);t=Nt(t),r=Nt(r),s=Nt(s),i=E0(i),a=E0(a);const u=[],c=[],d=[];for(const h of l)u.push(h.sourceLayer),c.push(h.nodeIndex),d.push(h.tensorIndex);new Tv({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:d,inputTensors:l,outputTensors:t,inputMasks:r,outputMasks:s,inputShapes:i,outputShapes:a},o);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function lte(n){n=Nt(n);const e=[];for(const t of n)e.push(t.shape);return $r(e)}function ute(n){return"float32"}function PP(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const r=e.inboundNodes[t];if(r.inboundLayers.length===0)return r.inputTensors;{const s=[];for(let i=0;i<r.inboundLayers.length;i++){const a=r.inputTensors[i],o=r.inboundLayers[i],l=r.nodeIndices[i],u=PP(a,o,l);for(const c of u)s.indexOf(c)===-1&&s.push(c)}return s}}}function cte(n){let e=!0;for(const t of Nt(n))if(!(t instanceof ki)){e=!1;break}return e}function dte(n){let e=!0;for(const t of Nt(n))if(t instanceof ki){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class wh extends ut{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:fv("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new Y("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new Y("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new Y("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=e.dtype||"float32";this.batchInputShape=t,this.dtype=r,this.inputSpec=[{shape:t}];const s=new ki(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Tv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Y(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}wh.className="InputLayer";ye(wh);function $P(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new Y("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new wh({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hte(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return Te(e,n.dtype)}catch{throw new Y(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class vo{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof vo)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,r){if(this.id2Value[e.id]==null)this.id2Value[e.id]=hte(e,t),this.name2Id[e.name]=e.id,r!=null&&(this.id2Mask[e.id]=r);else throw new Y(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ki){if(this.id2Value[e.id]==null)throw new Y(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new Y(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ki){if(this.id2Value[e.id]==null)throw new Y(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new Y(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Je(this.id2Mask)}}const L0=new kP,A0=new kP;function pte(n){L0!=null&&L0.setMaxEntries(n),A0!=null&&A0.setMaxEntries(n)}function fp(n,e,t,r){const s=t==null?!1:t.training,i=Array.isArray(n),a=i?n:[n],o=a.map(g=>g.name),l=[],u=e.names();for(const g of o)u.indexOf(g)!==-1?l.push(e.getValue(g)):l.push(null);const c=o.join(",")+"|"+e.names().sort().join(",");let d=L0.get(c),h;if(d==null){const g=fte(a,e);d=g.sorted,h=g.recipientCounts,L0.put(c,d),A0.put(c,h)}h={},s||Object.assign(h,A0.get(c));const p=new vo(e);for(let g=0;g<d.length;++g){const f=d[g],m=f.sourceLayer;if(m instanceof wh)continue;const y=[],b=[],x=[];let v=!1;for(const C of f.inputs){const _=p.getValue(C),z=p.getMask(C);y.push(_),b.push(z),z!=null&&(v=!0),s||(h[C.name]--,h[C.name]===0&&!e.hasKey(C)&&o.indexOf(C.name)===-1&&!_.isDisposed&&C.sourceLayer.stateful!==!0&&x.push(_))}v&&(t=t||{},t.mask=b[0]);const w=Nt(m.apply(y,t));let T=null;m.supportsMasking&&(T=m.computeMask(y,b));const k=gte(f),S=Array.isArray(k)?k:[k];for(let C=0;C<S.length;++C){p.hasKey(S[C])||p.add(S[C],w[C],Array.isArray(T)?T[0]:T);const _=o.indexOf(S[C].name);_!==-1&&(l[_]=w[C])}s||Je(x)}return p.disposeMasks(),i?l:l[0]}function fte(n,e){M(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],r={};if(n.length===1){const s=o3(n[0],e);t=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of n){const{sorted:a,recipientMap:o}=o3(i,e);for(const l of a)s.has(l.name)||(t.push(l),s.add(l.name));for(const l in o)r[l]==null&&(r[l]=new Set),o[l].forEach(u=>r[l].add(u))}}return{sorted:t,recipientCounts:mte(r)}}function mte(n){const e={};for(const t in n)e[t]=n[t].size;return e}function o3(n,e){const t=new Set,r=[],s={};for(const o of e.names())t.add(o);const i=[],a=[];for(i.push(n);i.length>0;){const o=i[i.length-1];if(t.has(o.name)){i.pop();continue}const l=a[a.length-1]===i.length-1;if(o.inputs.length===0||l)i.pop(),r.push(o),t.add(o.name),l&&a.pop();else{a.push(i.length-1);for(const u of o.inputs)s[u.name]==null&&(s[u.name]=new Set),s[u.name].add(o.name),!t.has(u.name)&&i.push(u)}}return{sorted:r,recipientMap:s}}function gte(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let r=0;r<n.sourceLayer.inboundNodes.length;++r)for(const s of n.sourceLayer.inboundNodes[r].outputTensors)if(s.id===n.id){t=r;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yte=q();yte.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,pte);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qk(n,e){return j(()=>ir(Ae(Z(n,n),e,!0)))}class ug extends Du{getConfig(){return{}}}class Jk extends ug{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return j(()=>{const t=Qk(e,this.axis),r=Xr(t,0,this.maxValue);return Z(e,Fe(r,me(Rn(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Jk.className="MaxNorm";ye(Jk);class qk extends ug{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return j(()=>Fe(e,me(Rn(),Qk(e,this.axis))))}getConfig(){return{axis:this.axis}}}qk.className="UnitNorm";ye(qk);class eC extends ug{apply(e){return Ni(e)}}eC.className="NonNeg";ye(eC);class tC extends ug{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return j(()=>{const t=Qk(e,this.axis),r=me(Z(this.rate,Xr(t,this.minValue,this.maxValue)),Z(1-this.rate,t));return Z(e,Fe(r,me(Rn(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}tC.className="MinMaxNorm";ye(tC);const l3={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ln(n){return Ok(n)}function u3(n,e={}){return ig(n,Pu.getMap().classNameMap,e,"constraint")}function An(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in l3?l3[n]:n,config:{}};return u3(e)}else return n instanceof ug?n:u3(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function oo(n){if(n==null)return;const e=[],t=[],r=[];for(const s in n){const i=n[s];if(typeof i!="number"){const a=i;e.push(a.data()),t.push(s),r.push(a)}}if(e.length>0){const s=await Promise.all(e);for(let i=0;i<s.length;++i)n[t[i]]=s[i][0];Je(r)}}function FP(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var c3;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(c3||(c3={}));const bte=125;let od=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}};class GP{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class xte extends od{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const r=t.size==null?0:t.size;this.seen+=r;for(const s in t){const i=t[s];if(typeof i=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+i*r;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;const o=j(()=>me(this.totals[s],Z(i,r)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const r of this.params.metrics)this.totals[r]!=null&&(typeof this.totals[r]=="number"?t[r]=this.totals[r]/this.seen:j(()=>{const s=Z(Fe(1,this.seen),this.totals[r]);t[r]=s,this.totals[r].dispose(),un(t[r])}))}}class OP extends od{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const r in t)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(t[r])}async syncData(){const e=[],t=[],r=[];for(const i in this.history){const a=this.history[i];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){const l=a[o];e.push(l.data()),t.push(i),r.push(o)}}const s=await Promise.all(e);for(let i=0;i<s.length;++i)this.history[t[i]][r[i]].dispose(),this.history[t[i]][r[i]]=s[i][0]}}class WP extends od{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||tg,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=bte),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v0(this.yieldEvery)&&(this.maybeWait=$ee(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,r){const s=[];this.yield!=null&&(await oo(r),s.push(this.yield(e,t,r))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await oo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const r=[];this.epochEnd!=null&&(await oo(t),r.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(e,t){this.batchBegin!=null&&(await oo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const r=[];this.batchEnd!=null&&(await oo(t),r.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?r.push(this.nextFrameFunc()):v0(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(r)}async onTrainBegin(e){this.trainBegin!=null&&(await oo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await oo(e),await this.trainEnd(e))}}function VP(n,e){return n==null&&(n={}),n instanceof od?[n]:Array.isArray(n)&&n[0]instanceof od?n:Nt(n).map(t=>new WP(t,e))}let nC=class Fi{constructor(){}static registerCallbackConstructor(e,t){M(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Fi.checkForDuplicate(t),Fi.constructors[e]==null&&(Fi.constructors[e]=[]),Fi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Fi.constructors)Fi.constructors[+t].forEach(r=>{if(r===e)throw new Y("Duplicate callback constructor.")})}static clear(){Fi.constructors={}}static createCallbacks(e){const t=[];for(const r in Fi.constructors){const s=+r;e>=s&&t.push(...Fi.constructors[s])}return t.map(r=>new r)}};nC.constructors={};function BP(n,e,t,r,s,i,a,o,l){const u=new OP,c=[new xte,...nC.createCallbacks(e)];n!=null&&c.push(...n),c.push(u);const d=new GP(c);return d.setParams({epochs:t,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:d,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vi(n,e={},t=!1){return ig(n,Pu.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function z0(n,e){return j(()=>{n.dtype!=="float32"&&(n=Te(n,"float32"));const t=Ae(og(n),e,!0),r=Ru(t.shape,Rn()),s=ir(ca(t,r));return Fe(n,s)})}function Fu(n,e){return j(()=>en(og(Ee(e,n)),-1))}function Iv(n,e){return j(()=>en(vn(Ee(e,n)),-1))}function Sh(n,e){return j(()=>{const t=Ee(n,e),r=Xr(vn(n),Rn(),Number.MAX_VALUE),s=vn(Fe(t,r));return Z(100,en(s,-1))})}function vte(n,e){return j(()=>{const t=Xr(e,Rn(),Number.MAX_VALUE),r=cs(me(1,t)),s=Xr(n,Rn(),Number.MAX_VALUE),i=cs(me(1,s));return en(og(Ee(r,i)),-1)})}function wte(n,e){return j(()=>{const t=ca(0,Ee(1,Z(n,e)));return en(og(t),-1)})}function Ste(n,e){return j(()=>{const t=ca(0,Ee(1,Z(n,e)));return en(t,-1)})}function Tte(n,e){return j(()=>{const t=Ae(Z(n,e),-1),r=Es(Z(Ee(1,n),e),-1);return ca(0,me(1,Ee(r,t)))})}function Ite(n,e){return j(()=>{const t=Math.log(2),r=Ee(e,n),s=Ee(me(r,Lu(Z(-2,r))),t);return en(s,-1)})}function gf(n,e,t=!1){return j(()=>{if(t)e=Jm(e);else{const r=Ae(e,e.shape.length-1,!0);e=Fe(e,r)}return e=Xr(e,Rn(),1-Rn()),Gt(Ae(Z(Te(n,"float32"),cs(e)),e.shape.length-1))})}function D0(n,e,t=!1){return j(()=>{const r=Te(yh(Yee(n)),"int32");e=Xr(e,Rn(),1-Rn());const s=e.shape,i=H(nd(r,s[s.length-1]),s);return gf(i,e,t)})}function kte(n,e){if(!ht(n.shape,e.shape))throw new Y(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return j(()=>{const t=Ni(e),r=Gt(vn(e));return me(Ee(t,Z(e,n)),Bm(Ur(r)))})}function kv(n,e){return j(()=>{let t;return t=Xr(e,Rn(),1-Rn()),t=cs(Fe(t,Ee(1,t))),en(kte(n,t),-1)})}function Cte(n,e){return j(()=>{const t=Xr(n,Rn(),1),r=Xr(e,Rn(),1);return Ae(Z(n,cs(Fe(t,r))),-1)})}function _te(n,e){return j(()=>{const t=cs(me(Rn(),e));return en(Ee(e,Z(n,t)),-1)})}function rC(n,e){return j(()=>{const t=z0(n,-1),r=z0(e,-1),s=Z(t,r);return Gt(Ae(s,-1))})}const P0={meanSquaredError:Fu,meanAbsoluteError:Iv,meanAbsolutePercentageError:Sh,meanSquaredLogarithmicError:vte,squaredHinge:wte,hinge:Ste,categoricalHinge:Tte,logcosh:Ite,categoricalCrossentropy:gf,sparseCategoricalCrossentropy:D0,binaryCrossentropy:kv,kullbackLeiblerDivergence:Cte,poisson:_te,cosineProximity:rC};function lw(n){if(typeof n=="string"){if(n in P0)return P0[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Y(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sC(n,e){return j(()=>{const t=Z(.5,ds(e)),r=Xa(Nr(e,t),n.dtype);return en(us(n,r),-1)})}function iC(n,e){return j(()=>Xa(us(lu(n,-1),lu(e,-1)),"float32"))}function XP(n,e){return j(()=>Te(Ae(ei(us(n,1),us(e,1))),"float32"))}function Mte(n,e){return j(()=>Te(Ae(ei(us(n,1),us(e,0))),"float32"))}function Nte(n,e){return j(()=>Te(Ae(ei(us(n,0),us(e,1))),"float32"))}function UP(n,e){return j(()=>{const t=XP(n,e),r=Nte(n,e),s=me(t,r);return Te(Gn(Nr(s,0),Fe(t,s),0),"float32")})}function Ete(n,e){return j(()=>{const t=XP(n,e),r=Mte(n,e),s=me(t,r);return Te(Gn(Nr(s,0),Fe(t,s),0),"float32")})}function ZP(n,e){return kv(n,e)}function HP(n,e){return n.rank===e.rank&&(n=ol(n,[n.rank-1])),e=lu(e,-1),e.dtype!==n.dtype&&(e=Te(e,n.dtype)),Te(us(n,e),"float32")}const Rte=Fu,Lte=Fu,Ate=Iv,zte=Iv,Dte=Sh,Pte=Sh,aC=gf,$te=rC,KP=D0,$0={binaryAccuracy:sC,categoricalAccuracy:iC,precision:UP,categoricalCrossentropy:aC,sparseCategoricalCrossentropy:KP,mse:Rte,MSE:Lte,mae:Ate,MAE:zte,mape:Dte,MAPE:Pte,cosine:$te};function Fte(n){if(typeof n=="string"&&n in $0)return $0[n];if(typeof n!="string"&&n!=null)return n;throw new Y(`Unknown metric ${n}`)}function cy(n){if(Xi(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(P0))if(P0[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys($0))if($0[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gte(n){const e={Adagrad:()=>Il.adagrad(.01),Adadelta:()=>Il.adadelta(1,.95,Rn()),Adam:()=>Il.adam(.001,.9,.999,Rn()),Adamax:()=>Il.adamax(.002,.9,.999,Rn(),0),RMSProp:()=>Il.rmsprop(.001,.9,0,Rn()),SGD:()=>Il.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new Y(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const d3=1*1024*1024;function h3(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!l2(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const r=JSON.stringify(n);r.length>d3&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${d3}.`)}}function l2(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!l2(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!l2(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ote(n,e,t,r=console.log){const s=Vte(n),i=["Layer (type)","Input Shape","Output shape","Param #"];s?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let a;if(!s){i.push("Receives inputs"),a=[];for(const c in n.nodesByDepth)a.push(...n.nodesByDepth[c])}r("_".repeat(e)),F0(i,t,r),r("=".repeat(e));const o=n.layers;for(let c=0;c<o.length;++c)s?Bte(o[c],t,r):Xte(o[c],t,a,r),r((c===o.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=Wte(n),u=R0(n.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}function Wte(n){let e;return n.collectedTrainableWeights!=null?e=R0(n.collectedTrainableWeights):e=R0(n.trainableWeights),e}function Vte(n){let e=!0;const t=[],r=[];for(const s in n.nodesByDepth)t.push(n.nodesByDepth[s]);for(const s of t){if(s.length>1||s.length===1&&s[0].inboundLayers.length>1){e=!1;break}r.push(...s)}if(e)for(const s of n.layers){let i=!1;for(const a of s.inboundNodes)if(r.indexOf(a)!==-1)if(i){e=!1;break}else i=!0;if(!e)break}return e}function F0(n,e,t=console.log){let r="";for(let s=0;s<n.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=n[s],r=r.slice(0,e[s]),r+=" ".repeat(e[s]-r.length);t(r)}function Bte(n,e,t){let r,s;try{s=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{s="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=n.name,a=n.getClassName(),o=[`${i} (${a})`,s,r,n.countParams().toString()];F0(o,e,t)}function Xte(n,e,t,r){let s,i;try{i=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{i="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const a=[];for(const d of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const p=d.inboundLayers[h].name,g=d.nodeIndices[h],f=d.tensorIndices[h];a.push(`${p}[${g}][${f}]`)}const o=n.name,l=n.getClassName(),u=a.length===0?"":a[0],c=[`${o} (${l})`,i,s,n.countParams().toString(),u];F0(c,e,r);for(let d=1;d<a.length;++d)F0(["","","","",a[d]],e,r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YP(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function yf(n,e){if(n===null)return null;if(typeof n=="string")return Ml(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],r=n.length;for(let s=0;s<r;++s){const i=n[s];YP(e,s,i)?t.push(i):t.push(yf(i,e))}return t}else{const t={};for(const r of Object.keys(n)){const s=n[r];if(r==="name"&&typeof s=="string")t[r]=s;else{const i=Ml(r);t[i]=yf(s,i)}}return t}}function u2(n,e){if(n==null)return null;if(typeof n=="string")return va(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],r=n.length;for(let s=0;s<r;++s){const i=n[s];YP(e,s,i)?t.push(i):t.push(u2(i,e))}return t}else{const t={};for(const r of Object.keys(n)){const s=n[r],i=va(r);(r==="name"||r==="className")&&typeof s=="string"?t[i]=s:t[i]=u2(s,r)}return t}}/** @license See the LICENSE file. */const Cv="4.16.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ute=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};let Zte=class Gi extends ut{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=fv(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],zo(this.inputs).length!==this.inputs.length)throw new Y(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);zo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const x=b.sourceLayer,v=b.nodeIndex,w=b.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(w)}for(const b of this.inputs){const x=b.sourceLayer,v=b.nodeIndex,w=b.tensorIndex;Xi(v===0,"input layer has >1 nodes"),Xi(w===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const x=this.inputLayers[b];if(!(x instanceof wh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const t={},r={},s={},i={},a={},o=[],l=(b,x,v,w,T,k)=>{(w==null||T==null||k==null)&&(w=b.sourceLayer,T=b.nodeIndex,k=b.tensorIndex);const S=w.inboundNodes[T];if(v.indexOf(S)!==-1)throw new Yi(`The tensor ${b.name} at layer "${w.name}" is part of a cycle.`);if(x.indexOf(S)!==-1)return;this.containerNodes.add(Gi.nodeKey(w,T)),w.id in a||(a[w.id]=Object.keys(a).length),v.indexOf(S)===-1&&v.push(S);const C=S.inboundLayers.length;for(let _=0;_<C;_++){const z=S.inputTensors[_],P=S.inboundLayers[_],R=S.nodeIndices[_],A=S.tensorIndices[_];l(z,x,v,P,R,A)}for(x.push(S);v.indexOf(S)>=0;)v.splice(v.indexOf(S),1);o.push(S)},u=[],c=[];for(const b of this.outputs)l(b,u,c);const d=o.slice().reverse();for(const b of d){r[b.id]=b,b.id in t||(t[b.id]=0);let x=t[b.id];const v=s[b.outboundLayer.id]==null?0:s[b.outboundLayer.id];x=Math.max(x,v),s[b.outboundLayer.id]=x,i[b.outboundLayer.id]=b.outboundLayer,t[b.id]=x;for(let w=0;w<b.inboundLayers.length;w++){const T=b.inboundLayers[w],k=b.nodeIndices[w],S=T.inboundNodes[k],C=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(x+1,C),r[S.id]=S}}const h={};for(const b in t){const x=t[b];x in h||(h[x]=[]),h[x].push(r[b])}const p={};for(const b in s){const x=s[b];x in p||(p[x]=[]),p[x].push(i[b])}let g=Object.keys(p).map(b=>parseInt(b,10)).sort(oy);this.layers=[];for(const b of g){const x=p[b];x.sort((v,w)=>{const T=a[v.id],k=a[w.id];return T<k?-1:T>k?1:0});for(const v of x)v instanceof Gi&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=p,g=Object.keys(h).map(b=>parseInt(b,10)).sort(oy);const f=this.inputs.slice(),m=[];for(const b of g)for(const x of h[b]){const v=x.outboundLayer;if(v!=null){for(const w of x.inputTensors)if(f.indexOf(w)===-1)throw new Yi(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${v.name}". The following previous layers were accessed without issue: ${m}`);for(const w of x.outputTensors)f.push(w);m.push(v.name)}}this.nodesByDepth=h;const y=this.layers.map(b=>b.name);for(const b of y){const x=y.filter(v=>v===b).length;if(x!==1)throw new Yi(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Tv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(r=>r.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Y("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const r of this.layers)t.push(...r.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const r={};let s=0;const i=Ute(e);i&&this.parseWeights(e);for(const o of this.layers)for(const[l,u]of o.weights.entries()){const c=i?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(r[c]!=null)throw new Y(`Duplicate weight name: ${c}`);r[c]=u,s++}const a=[];for(const o in e){let l=o;if(r[o]==null){const u=o.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(r[l]!=null)a.push([r[l],e[o]]);else if(t)throw new Y(`Provided weight data has no target variable: ${o}`);delete r[l]}if(t){const o=[];for(const l in r)o.push(l);if(o.length>0)throw new Y(`${o.length} of ${s} weights are not set: ${o}`)}jk(a)}parseWeights(e){for(const t in Object.keys(e)){const r=t.split("/"),s=["vars","layer_checkpoint_dependencies"],i=r.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!s.includes(a)).join("/");i!==t&&(e[i]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Cv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const r=u2(this.updatedConfig());return t?JSON.stringify(r):r}call(e,t){return j(()=>{e=Nt(e);const r=new vo;for(let s=0;s<this.inputs.length;++s)r.add(this.inputs[s],e[s]);return fp(this.outputs,r,t)})}computeMask(e,t){return j(()=>{e=Nt(e);let r;return t==null?r=fu(null,e.length):r=Nt(t),this.runInternalGraph(e,r)[1]})}computeOutputShape(e){const t=E0(e);if(t.length!==this.inputLayers.length)throw new Y(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const r={};for(let o=0;o<t.length;o++){const l=this.inputLayers[o],u=t[o],c=l.name+"_0_0";r[c]=u}const s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(oy);if(s.length>1)for(const o of s){const l=this.nodesByDepth[o];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;const d=[];for(let f=0;f<u.inboundLayers.length;f++){const m=u.inboundLayers[f],y=u.nodeIndices[f],b=u.tensorIndices[f],x=`${m.name}_${y}_${b}`,v=r[x];d.push(v)}const h=c.computeOutputShape($r(d)),p=E0(h),g=c.inboundNodes.indexOf(u);for(let f=0;f<p.length;f++){const m=`${c.name}_${g}_${f}`;r[m]=p[f]}}}const i=[],a=[];for(let o=0;o<this.outputLayers.length;o++){const l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],d=`${l.name}_${u}_${c}`;a.push(d)}for(let o=0;o<a.length;o++){const l=a[o];Xi(l in r),i.push(r[l])}return $r(i)}runInternalGraph(e,t){t==null&&(t=fu(null,e.length));const r={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],d=t[l];r[u.id]=[c,d]}const s=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(oy);for(const l of s){const u=this.nodesByDepth[l];for(const c of u){const d=c.outboundLayer,h=c.inputTensors,p=c.outputTensors,g=new Array;for(const f of h)f.id in r&&g.push(r[f.id]);if(g.length===h.length){let f={},m,y,b,x;if(c.callArgs!=null&&(f=c.callArgs),g.length===1){const[v,w]=g[0];f.mask==null&&(f.mask=w),b=Nt(d.call(v,f)),x=Nt(d.computeMask(v,w)),m=[v],y=[w]}else m=g.map(v=>v[0]),y=g.map(v=>v[1]),f.mask==null&&(f.mask=y),b=Nt(d.call(m,f)),x=Nt(d.computeMask(m,y));if(d.activityRegularizer)throw new nt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<p.length;++v){const w=p[v],T=b[v],k=x[v];r[w.id]=[T,k]}}}}const i=[],a=[],o=[];for(const l of this.outputs){Xi(l.id in r,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=r[l.id];o.push(u.shape),i.push(u),a.push(c)}return[i,a,o]}buildNodeConversionMap(e){const t={};let r;for(const s of this.layers){r=s instanceof Gi?1:0;for(let i=0;i<s.inboundNodes.length;i++){const a=Gi.nodeKey(s,i);this.containerNodes.has(a)&&(t[a]=r,r+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new Y("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const r of this.layers)if(r.name===e)return r;throw new Y(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Y(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return j(()=>{const e=[];for(const t of this.layers)for(let r=0;r<t.inboundNodes.length;++r){const s=Gi.nodeKey(t,r);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),r=[];for(const a of this.layers){const o=a.getClassName(),l=a.getConfig(),u=[];for(let d=0;d<a.inboundNodes.length;d++){const h=a.inboundNodes[d],p=Gi.nodeKey(a,d);let g={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),g=h.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),g={}}if(h.inboundLayers.length>0){const f=[];for(let m=0;m<h.inboundLayers.length;m++){const y=h.inboundLayers[m],b=h.nodeIndices[m],x=h.tensorIndices[m],v=Gi.nodeKey(y,b);let w=t[v];w==null&&(w=0),f.push([y.name,w,x,g])}u.push(f)}}}const c={};c.name=a.name,c.className=o,c.config=l,c.inboundNodes=u,r.push(c)}e.layers=r;const s=[];for(let a=0;a<this.inputLayers.length;a++){const o=this.inputLayers[a],l=this.inputLayersNodeIndices[a],u=Gi.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const d=this.inputLayersTensorIndices[a];s.push([o.name,c,d])}e.inputLayers=s;const i=[];for(let a=0;a<this.outputLayers.length;a++){const o=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=Gi.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const d=this.outputLayersTensorIndices[a];i.push([o.name,c,d])}return e.outputLayers=i,e}static fromConfig(e,t,r={},s=!1){const i={},a={};function o(m,y){m.name in a?a[m.name].push(y):a[m.name]=[y]}function l(m,y){const b=[];let x;for(const v of y){const w=v[0],T=v[1],k=v[2];if(x=v[3]==null?{}:v[3],!(w in i)){o(m,y);return}const S=i[w];if(S.inboundNodes.length<=T){o(m,y);return}const C=S.inboundNodes[T];b.push(C.outputTensors[k])}b.length>0&&m.apply($r(b),x)}function u(m){const y=m.name,b=vi(m,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(s),i[y]=b,m.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new Y(`Corrupted configuration, expected array for nodeData: ${x}`);o(b,x)})}const c=t.name,d=t.layers;for(const m of d)u(m);for(;!Pee(a);)for(const m of d){const y=i[m.name];if(y.name in a){const b=a[y.name];delete a[y.name];for(const x of b)l(y,x)}}const h=[],p=[],g=t.inputLayers;for(const m of g){const y=m[0],b=m[1],x=m[2];Xi(y in i);const v=i[y].inboundNodes[b].outputTensors;h.push(v[x])}const f=t.outputLayers;for(const m of f){const y=m[0],b=m[1],x=m[2];Xi(y in i);const v=i[y].inboundNodes[b].outputTensors;p.push(v[x])}return new e({inputs:h,outputs:p,name:c})}get stateful(){if(this._stateful)throw new Y("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){j(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hte(n,e,t){const r=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>null);if(r===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==r)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const s=[];return e.forEach(i=>{i in n?s.push(n[i]):s.push(null)}),s}else throw new Error(`The model has multiple (${r}) outputs, so ${t} must be either an array with ${r} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function jP(n,e){return Hte(n,e,"classWeight")}async function QP(n,e,t,r){if(t!=null){const s=j(()=>{if(n.shape.length===1)return na(n);if(n.shape.length===2){if(n.shape[1]>1)return lu(n,1);if(n.shape[1]===1)return H(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await s.data());Je(s);const a=[];return i.forEach(o=>{if(t[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);a.push(t[o])}),nr(a,"float32")}else return null}function Kte(n,e){return Z(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Yte=32;function JP(n,e){let t,r;const s=e;t=s.xs,r=s.ys,M(t!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=p3("input",n.inputNames,t),a=p3("output",n.outputNames,r),o=i[0].shape[0];M(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),M(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<i.length;l++)M(i[l].shape[0]===o,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);for(let l=0;l<a.length;l++)M(a[l].shape[0]===o,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);return{xs:i,ys:a}}function p3(n,e,t){if(t instanceof xt)return[t];if(Array.isArray(t))return M(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const r=[];for(const s of e){if(t[s]==null)throw new Y(`The feature data generated by the dataset lacks the required ${n} key '${s}'.`);r.push(t[s])}return r}}function jte(n){if(n.length===3)throw new nt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function Qte(n,e,t){const r=t.batchesPerEpoch!=null;if(M(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),M(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),M(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),M(!r||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),M(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const s=t.validationData!=null;let i,a;if(s)if(f3(t.validationData))M(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const m=jte(t.validationData);i=m.xs,a=m.ys}const o=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;s?u=l.slice().concat(l.map(m=>"val_"+m)):u=l.slice();const c=VP(t.callbacks,t.yieldEvery),d=t.verbose==null?1:t.verbose,{callbackList:h,history:p}=BP(c,d,t.epochs,null,null,Jte(e,t),null,s,u);h.setModel(n),n.history=p,await h.onTrainBegin(),n.stopTraining_=!1;let g=t.initialEpoch==null?0:t.initialEpoch,f=await e.iterator();for(;g<t.epochs;){const m={};await h.onEpochBegin(g);let y=0,b=0;for(r||(f=await e.iterator());!r||y<t.batchesPerEpoch;){const x=await f.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){const{xs:v,ys:w}=JP(n,x.value),T={};T.batch=b,T.size=v[0].shape[0],await h.onBatchBegin(b,T);const k=[];if(t.classWeight!=null){const _=jP(t.classWeight,n.outputNames);for(let z=0;z<_.length;++z)k.push(await QP(w[z],null,_[z]))}const S=v.concat(w).concat(k),C=o(S);Je(S);for(let _=0;_<l.length;++_){const z=l[_],P=C[_];T[z]=P,un(P)}await h.onBatchEnd(b,T),FP(T),b++,y++}if(r?y>=t.batchesPerEpoch:x.done){if(s){let v;f3(t.validationData)?v=Nt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):v=Nt(n.evaluate(i,a,{batchSize:t.validationBatchSize==null?Yte:t.validationBatchSize,verbose:0}));for(let w=0;w<n.metricsNames.length;++w)m[`val_${n.metricsNames[w]}`]=v[w]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(g,m),g++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function Jte(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function f3(n){return typeof n.iterator=="function"}function qte(n){return typeof n.next=="function"}async function ene(n,e,t){t=t||{};const r=t.batches!=null,s=n.testFunction;let i=[];if(t.verbose>0)throw new nt("Verbose mode is not implemented yet.");M(!r||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=qte(e)?e:await e.iterator();let o=0,l=0;for(;!r||l<t.batches;){const u=await a.next();if(i=j(()=>{if(u.value){const{xs:c,ys:d}=JP(n,u.value),h=c.concat(d),p=j(()=>s(h));if(Je(h),l===0)for(let f=0;f<p.length;++f)i.push(Ve(0));const g=h[0].shape[0];for(let f=0;f<p.length;++f){const m=p[f],y=i[f];i[f]=j(()=>me(i[f],Z(g,m))),l>0&&Je(y)}Je(p),o+=g,++l}return i}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const c=i[u];i[u]=Fe(i[u],o),Je(c)}return $r(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uw(n){M(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function qh(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(r=>Hl(r,e,t-e)):Hl(n,e,t-e)}function c2(n,e){return j(()=>n==null?null:Array.isArray(n)?n.map(t=>c2(t,e)):AP(n,e.dtype==="int32"?e:Te(e,"int32")))}function cw(n,e){const t=[];let r=0,s=null;for(;r<n;)s=r+e,s>=n&&(s=n),t.push([r,s]),r=s;return t}function qP(n){const e=[];n instanceof xt&&(n=[n]);for(let t=0;t<n.length;++t){const r=n[t];if(r.rank===1)e.push(ag(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function li(n,e){if(n==null)return;const t=[];if(e instanceof xt)t.push(e.id);else if(Array.isArray(e))e.forEach(s=>t.push(s.id));else if(e!=null)for(const s in e){const i=e[s];t.push(i.id)}const r=[];if(n instanceof xt)t.indexOf(n.id)===-1&&r.push(n);else if(Array.isArray(n))n.forEach(s=>{t.indexOf(s.id)===-1&&r.push(s)});else if(n!=null)for(const s in n){const i=n[s];t.indexOf(i.id)===-1&&r.push(i)}r.forEach(s=>{s.isDisposed||s.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tne(n){return n instanceof xt}function d2(n){return Array.isArray(n)}function m3(n){return!tne(n)&&!d2(n)}function g3(n,e,t,r=!0,s=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(d2(n)&&n.length>0)a=!0;else if(m3(n)){for(const o in n)if(n.hasOwnProperty(o)){a=!0;break}}else a=!0;if(a)throw new Y(`Error when checking model ${s} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let i;if(m3(n)){n=n,i=[];for(const a of e){if(n[a]==null)throw new Y(`No data provided for "${a}". Need data for each key in: ${e}`);i.push(n[a])}}else if(d2(n)){if(n=n,n.length!==e.length)throw new Y(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,e.length>1)throw new Y(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=qP(i),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const o=i[a];if(o.shape.length!==t[a].length)throw new Y(`Error when checking ${s}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<t[a].length;++l){if(l===0&&!r)continue;const u=o.shape[l],c=t[a][l];if(c!=null&&c>=0&&u!==c)throw new Y(`${s} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${s} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return i}function nne(n,e,t){const r=zo(n.map(i=>i.shape[0]));r.sort();const s=zo(e.map(i=>i.shape[0]));if(s.sort(),r.length>1)throw new Y(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(s.length>1)throw new Y(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(r.length>0&&s.length>0&&!ht(r,s))throw new Y(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function rne(n,e,t){const r=[Fu,kv,gf];for(let s=0;s<n.length;++s){const i=n[s],a=e[s],o=t[s];if(a!=null){if(a===gf&&i.shape[i.shape.length-1]===1)throw new Y(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(a)!==-1){const l=i.shape.slice(1),u=o.slice(1);for(let c=0;c<l.length;++c){const d=l[c],h=u[c];if(h!=null&&d!==h)throw new Y(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function y3(n,e,t,r=!0,s=""){let i;if(Array.isArray(n)){if(n.length!==e.length)throw new Y(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(e.length>1)throw new Y(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const o=i[a];if(o.shape.length!==t[a].length)throw new Y(`Error when checking ${s}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<t[a].length;++l){if(l===0&&!r)continue;const u=o.shape[l],c=t[a][l];if(c!=null&&c!==u)throw new Y(`Error when checking ${s}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function sne(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(r=>t);{const r=[];for(const s of e){let i=t.hasOwnProperty(s)?t[s]:[];Array.isArray(i)||(i=[i]),r.push(i)}return r}}const ine="layers-model";class Ra extends Zte{constructor(e){super(e),this.isTraining=!1}summary(e,t,r=console.log){if(!this.built)throw new Y("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Ote(this,e,t,r)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=Gte(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof qa))throw new Y("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new Y(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(lw(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Y(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>lw(a))}else{const a=lw(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const o=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}const r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Zl("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(r.indexOf(a)!==-1)continue;const o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const s=sne(e.metrics,this.outputNames),i=(a,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,a])};Zl("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(r.indexOf(a)!==-1)continue;const o=s[a];(l=>{const u="";let c,d,h;for(const p of l){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const f=this.internalOutputShapes[a];f[f.length-1]===1||this.lossFunctions[a]===kv?["accuracy","acc"].indexOf(p)!==-1?d=sC:["crossentropy","ce"].indexOf(p)!==-1&&(d=ZP):this.lossFunctions[a]===D0?["accuracy","acc"].indexOf(p)!==-1?d=HP:["crossentropy","ce"].indexOf(p)!==-1&&(d=KP):["accuracy","acc"].indexOf(p)!==-1?d=iC:["crossentropy","ce"].indexOf(p)!==-1&&(d=aC);let m;["accuracy","acc"].indexOf(p)!==-1?m="acc":["crossentropy","ce"].indexOf(p)!==-1&&(m="ce"),h=d,c=u+m}else h=Fte(p),c=u+cy(p);let g;Zl(c,()=>{g=h}),i(a,c,g)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,r={}){const s=r.batchSize==null?32:r.batchSize;uw(s);const i=this.standardizeUserDataXY(e,t,!0,s);try{const a=i[0].concat(i[1]);this.makeTestFunction();const o=this.testFunction,l=this.testLoop(o,a,s,r.verbose,r.steps);return $r(l)}finally{li(i[0],e),li(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),ene(this,e,t)}checkNumSamples(e,t,r,s="steps"){let i;if(r!=null){if(i=null,t!=null)throw new Y(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?i=e[0].shape[0]:i=e.shape[0];else throw new Y(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return i}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new Y("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(t),s=r?t:[t],i=this.retrieveSymbolicTensors(s),a=new vo;if(e instanceof xt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Y(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new Y(`No value is provided for the model's input ${l.name}`);a.add(l,u)}const o=fp(i,a);return r?o:o[0]}retrieveSymbolicTensors(e){const t=fu(null,e.length);let r=e.length;for(const s of this.layers){const i=Array.isArray(s.output)?s.output:[s.output],a=i.map(o=>o.name);for(let o=0;o<e.length;++o){const l=a.indexOf(e[o]);if(l!==-1&&(t[o]=i[l],r--),r===0)break}if(r===0)break}if(r>0){const s=[];throw t.forEach((i,a)=>{i==null&&s.push(e[a])}),new Y(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,r=!1){return j(()=>{const s=this.checkNumSamples(e);if(r)throw new nt("Verbose predictLoop() is not implemented yet.");const i=cw(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<i.length;++o)j(()=>{const l=i[o][0],u=i[o][1],c=qh(e,l,u),d=[];if(Array.isArray(c))for(let p=0;p<c.length;++p)d.push({key:this.inputs[p],value:c[p]});else d.push({key:this.inputs[0],value:c});const h=new vo(d);return fp(this.outputs,h)}).forEach((l,u)=>a[u].push(l));return $r(a.map(o=>pn(o,0)))})}predict(e,t={}){const r=qP(e);y3(r,this.inputNames,this.feedInputShapes,!1);try{const s=t.batchSize==null?32:t.batchSize;return uw(s),this.predictLoop(r,s)}finally{li(r,e)}}predictOnBatch(e){y3(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,r=!0,s){if(this.optimizer_==null)throw new Yi("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let a=0;a<this.feedOutputShapes.length;++a){const o=this.feedOutputShapes[a];this.feedLossFns[a]===D0?i.push(o.slice(0,o.length-1).concat([1])):i.push(o)}if(e=g3(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=g3(t,this.feedOutputNames,i,!1,"target"),nne(e,t),rne(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new Y(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,r,s,i=!0,a){const[o,l]=this.standardizeUserDataXY(e,t,i,a);if(r!=null)throw new Error("sample weight is not supported yet.");let u=null;if(s!=null){const c=jP(s,this.outputNames);u=[];for(let d=0;d<c.length;++d)u.push(await QP(l[d],null,c[d]))}return[o,l,u]}testLoop(e,t,r,s=0,i){return j(()=>{const a=this.checkNumSamples(t,r,i,"steps"),o=[];if(s>0)throw new nt("Verbose mode is not implemented yet.");if(i!=null)throw new nt("steps mode in testLoop() is not implemented yet");{const l=cw(a,r),u=nr(Ti(0,a));for(let c=0;c<l.length;++c){const d=l[c][0],h=l[c][1],p=Hl(u,d,h-d),g=c2(t,p),f=e(g);if(c===0)for(let m=0;m<f.length;++m)o.push(Ve(0));for(let m=0;m<f.length;++m){const y=f[m];o[m]=me(o[m],Z(h-d,y))}}for(let c=0;c<o.length;++c)o[c]=Fe(o[c],a)}return o})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let r=0;r<e.length;++r){const s=e[r];let i=s;if(t3(e,s)>1){const a=t3(e.slice(0,r),s);i+=`_${a}`}t.push(i)}return t}makeTrainFunction(){return e=>{const t=[],r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{const u=[];for(let p=0;p<this.inputs.length;++p)u.push({key:this.inputs[p],value:r[p]});const c=new vo(u),d=fp(this.outputs,c,{training:!0});let h;for(let p=0;p<this.lossFunctions.length;++p){const g=this.lossFunctions[p];let f=g(s[p],d[p]);i[p]!=null&&(f=Kte(f,i[p]));const m=en(f);t.push(m),p===0?h=f:h=me(h,f)}for(let p=0;p<this.metricsTensors.length;++p){let g;if(this.outputs.length>1&&p<this.outputs.length)g=t[p];else{const f=this.metricsTensors[p][0],m=this.metricsTensors[p][1];g=en(f(s[m],d[m]))}un(g),a.push(g)}return h=en(h),this.calculateLosses().forEach(p=>{h=me(h,p)}),h},l=this.collectedTrainableWeights.map(u=>u.read());return[this.optimizer_.minimize(o,!0,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>j(()=>{const t=[];let r;const s=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:s[u]});const o=new vo(a),l=fp(this.outputs,o);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],d=en(c(i[u],l[u]));u===0?r=d:r=me(r,d),t.push(r)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],d=this.metricsTensors[u][1],h=en(c(i[d],l[d]));t.push(h)}return t})}async fit(e,t,r={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let s,i,a,o,l,u,c,d,h;try{const p=r.batchSize==null?32:r.batchSize;uw(p);const g=await this.standardizeUserData(e,t,r.sampleWeight,r.classWeight,!1,p);s=g[0],i=g[1],h=g[2];let f=!1,m;if(r.validationData!=null&&r.validationData.length>0){if(f=!0,r.validationData.length===2)l=r.validationData[0],u=r.validationData[1];else throw r.validationData.length===3?new nt("validationData including sample weights is not supported yet."):new Y(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);const k=await this.standardizeUserData(l,u,null,null,!0,p);c=k[0],d=k[1],m=c.concat(d)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){f=!0;const k=Math.floor(s[0].shape[0]*(1-r.validationSplit)),S=s[0].shape[0];c=qh(s,k,S),a=s,s=qh(s,0,k),d=qh(i,k,S),o=i,i=qh(i,0,k),m=c.concat(d)}else r.validationSteps!=null&&(f=!0);const y=s.concat(i).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;f?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map(k=>"val_"+k))):(v=null,m=[],w=x.slice());const T=VP(r.callbacks,r.yieldEvery);return await this.fitLoop(b,y,x,p,r.epochs,r.verbose,T,v,m,r.shuffle,w,r.initialEpoch,null,null)}finally{this.isTraining=!1,li(s,e),li(i,t),li(a,e),li(o,t),li(c,l),li(d,u),h!=null&&Je(h)}}async fitLoop(e,t,r,s,i,a,o,l,u,c,d,h,p,g){s==null&&(s=32),i==null&&(i=1),c==null&&(c=!0),h==null&&(h=0);let f=!1;if(l!=null&&u!=null&&(f=!0),g!=null&&(f=!0,p==null))throw new Y("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,s,p,"steps_per_epoch");let y;m!=null&&(y=Ti(0,m)),a==null&&(a=1);const{callbackList:b,history:x}=BP(o,a,i,h,m,p,s,f,d);b.setModel(this),this.history=x,await b.onTrainBegin(),this.stopTraining_=!1;for(let v=h;v<i;++v){await b.onEpochBegin(v);const w={};if(p!=null)throw new nt("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new nt("batch shuffling is not implemneted yet");c&&VT(y);const T=nr(y),k=cw(m,s);for(let S=0;S<k.length;++S){const C={};if(await b.onBatchBegin(S,C),j(()=>{const _=k[S][0],z=k[S][1],P=Hl(T,_,z-_);C.batch=S,C.size=z-_;const R=c2(t,P),A=e(R);for(let F=0;F<r.length;++F){const B=r[F],K=A[F];C[B]=K,un(K)}if(S===k.length-1&&f){const F=this.testLoop(l,u,s);for(let B=0;B<r.length;++B){const K=r[B],L=F[B];un(L),w["val_"+K]=L}}}),await b.onBatchEnd(S,C),FP(C),this.stopTraining_)break}T.dispose()}if(await b.onEpochEnd(v,w),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Qte(this,e,t)}async trainOnBatch(e,t){const r=await this.standardizeUserData(e,t),s=r[0],i=r[1],a=this.makeTrainFunction()(s.concat(i)),o=[];for(const l of a){const u=await l.data();o.push(u[0])}return Je(a),li(r[0],e),li(r[1],t),$r(o)}getNamedWeights(e){const t=[],r=e!=null&&e.trainableOnly,s=r?this.trainableWeights:this.weights,i=this.getWeights(r);for(let a=0;a<s.length;++a)r&&!s[a].trainable||t.push({name:s[a].originalName,tensor:i[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=_0().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-_0().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=va(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>va(t))}else{const t=Object.keys(this.loss);e={};const r=this.loss;for(const s of t)if(typeof r[s]=="string")e[s]=va(r[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[va(cy(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>va(cy(e)));{const e={};for(const t in this.metrics)e[t]=va(cy(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=yf(e.optimizer_config),r=vi(t);let s;if(typeof e.loss=="string")s=Ml(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Ml(a));else if(e.loss!=null){s={};for(const a in e.loss)s[a]=Ml(e.loss[a])}let i;if(Array.isArray(e.metrics))i=e.metrics.map(a=>Ml(a));else if(e.metrics!=null){i={};for(const a in e.metrics)i[a]=Ml(e.metrics[a])}this.compile({loss:s,metrics:i,optimizer:r})}async save(e,t){if(typeof e=="string"){const i=qz(e);if(i.length===0)throw new Y(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new Y(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new Y("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await HS(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:ine,generatedBy:`TensorFlow.js tfjs-layers v${Cv}`,convertedBy:null};if(t!=null&&t.includeOptimizer&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();const i="optimizer",{data:a,specs:o}=await HS(await this.optimizer.getWeights(),i);r.specs.push(...o),r.data=Qz([r.data,a])}return this.userDefinedMetadata!=null&&(h3(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){h3(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ra.className="Model";ye(Ra);let e$=class extends Ra{};e$.className="Functional";ye(e$);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ane(n,e){"modelTopology"in n||(n={modelTopology:n}),n=n;let t=n.modelTopology;t.model_config!=null&&(t=t.model_config);const r=yf(t),s=vi(r,e);if(n.weightsManifest!=null){const i=await LD(n.weightsManifest,n.pathPrefix,s.weights.map(o=>o.originalName)),a={};for(const o of s.weights)a[o.originalName]=i[o.originalName];s.loadWeights(a),Je(i)}return s}async function one(n,e){if(e==null&&(e={}),typeof n=="string"){const t=eD(n,e);if(t.length===0)t.push(DD(n,e));else if(t.length>1)throw new Y(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return lne(n,void 0,e)}async function lne(n,e,t){if(t==null&&(t={}),n.load==null)throw new Y("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await n.load();let s=r.modelTopology;s.model_config!=null&&(s=s.model_config);const i=t.strict==null?!0:t.strict,a=r.weightData!=null&&r.weightSpecs!=null&&i,o=vi(yf(s),e,a),l=r.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new Y("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:u,optimizerWeights:c}=une(r.weightData,r.weightSpecs);o.loadWeights(u,i),o.optimizer!=null&&c.length>0&&await o.optimizer.setWeights(c),Je(u),Je(c.map(d=>d.tensor))}return o}function une(n,e){const t=eI(n,e),r={},s=[];return e.forEach(i=>{i.group==="optimizer"?s.push({name:i.name,tensor:t[i.name]}):r[i.name]=t[i.name]}),{modelWeights:r,optimizerWeights:s}}let _v=class h2 extends Ra{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:fv("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new Y(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof h2||e instanceof Ra;let r;if(t){if(r=e,r.outputs.length!==1)throw new Y("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new Y("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new Y("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const s=$P({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=r.outputs,this.inputs=r.inputs;else{if(e.inboundNodes.length!==1)throw new Y(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new Y("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=PP(this.outputs[0])}this.inboundNodes=[],new Tv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:fu(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{const s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(It(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ra({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,r=console.log){this.built||this.build(),super.summary(e,t,r)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,r={}){if(!this.built)throw new Yi("The model needs to be compiled before being used.");return this.model.evaluate(e,t,r)}async evaluateDataset(e,t){if(!this.built)throw new Yi("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,r={}){if(!this.built)throw new Yi("The model needs to be compiled before being used.");return this.model.fit(e,t,r)}async fitDataset(e,t){if(!this.built)throw new Yi("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,r={},s=!1){let i,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new Y("Legacy serialization format not supported yet.");i=t}else M(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=t.layers,delete t.layers,a=t;const o=new e(a);if(!(o instanceof h2))throw new nt(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const l of i){const u=vi(l,void 0,s);s&&u.setFastWeightInitDuringBuild(!0),o.add(u)}return o}set stopTraining(e){if(this.model==null)throw new Y("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new Y("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const r={};r.className=t.getClassName(),r.config=t.getConfig(),e.push(r)}return{name:this.name,layers:e}}};_v.className="Sequential";ye(_v);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Qr=class extends Du{getConfig(){return{}}},t$=class extends Qr{apply(e,t=1){return Qee(e,t)}};t$.className="elu";ye(t$);let n$=class extends Qr{apply(e){return Bx(e)}};n$.className="selu";ye(n$);let r$=class extends Qr{apply(e){return Ni(e)}};r$.className="relu";ye(r$);let s$=class extends Qr{apply(e){return j(()=>Xo(6,Ni(e)))}};s$.className="relu6";ye(s$);let i$=class extends Qr{apply(e){return e}};i$.className="linear";ye(i$);let a$=class extends Qr{apply(e){return xi(e)}};a$.className="sigmoid";ye(a$);let o$=class extends Qr{apply(e){return qee(e)}};o$.className="hardSigmoid";ye(o$);let l$=class extends Qr{apply(e){return Lu(e)}};l$.className="softplus";ye(l$);let u$=class extends Qr{apply(e){return Jee(e)}};u$.className="softsign";ye(u$);let c$=class extends Qr{apply(e){return cu(e)}};c$.className="tanh";ye(c$);let oC=class extends Qr{apply(e,t=-1){return Jm(e,t)}};oC.className="softmax";ye(oC);let d$=class extends Qr{apply(e,t=-1){return $x(e,t)}};d$.className="logSoftmax";ye(d$);let h$=class extends Qr{apply(e,t=1){return j(()=>Z(xi(Z(e,t)),e))}};h$.className="swish";ye(h$);let p$=class extends Qr{apply(e){return j(()=>Z(e,cu(Lu(e))))}};p$.className="mish";ye(p$);function Zo(n){return n.getClassName()}function dw(n,e={}){return ig(n,Pu.getMap().classNameMap,e,"activation")}function Ho(n){if(n==null){const e={};return e.className="linear",e.config={},dw(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},dw(e)}else return n instanceof Qr?n:dw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lC(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}let f$=class extends Du{};class cg extends f${constructor(e){super(),lC(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return j(()=>{let t=Sn([1]);return this.hasL1&&(t=me(t,Ae(Z(this.l1,vn(e))))),this.hasL2&&(t=me(t,Ae(Z(this.l2,og(e))))),H(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}cg.className="L1L2";ye(cg);function cne(n){return lC(n),new cg({l1:n!=null?n.l1:null,l2:0})}function dne(n){return lC(n),new cg({l2:n!=null?n.l2:null,l1:0})}const b3={l1l2:"L1L2"};function Pt(n){return Ok(n)}function x3(n,e={}){return ig(n,Pu.getMap().classNameMap,e,"regularizer")}function Qt(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in b3?b3[n]:n,config:{}};return x3(e)}else return n instanceof f$?n:x3(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let uC=class extends ut{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=je(e);let r=Ni(e);return this.maxValue!=null&&(r=Xr(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};uC.className="ReLU";ye(uC);let cC=class extends ut{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const r=je(e);return Vm(r,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};cC.className="LeakyReLU";ye(cC);let dC=class extends ut{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=jt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Qt(e.alphaRegularizer),this.alphaConstraint=An(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new Y(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=It(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)r[s]=e[s];this.inputSpec=[new Tn({ndim:e.length,axes:r})],this.built=!0}call(e,t){return e=je(e),Ym(e,this.alpha.read())}getConfig(){const e={alphaInitializer:tn(this.alphaInitializer),alphaRegularizer:Pt(this.alphaRegularizer),alphaConstraint:Ln(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};dC.className="PReLU";ye(dC);let hC=class extends ut{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new nt(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const r=je(e);return mh(r)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};hC.className="ELU";ye(hC);let pC=class extends ut{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const r=je(e);return Z(r,Te(Nr(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};pC.className="ThresholdedReLU";ye(pC);let fC=class extends ut{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new oC().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return j(()=>{let r=je(e);const s=t.mask;if(s!=null){const i=Z(Ee(Gr(r.shape),Te(s,r.dtype)),Ve(-1e9));r=me(r,i)}return this.axis instanceof Array?this.axis.length>1?Ur(Ee(r,Xm(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};fC.className="Softmax";ye(fC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fc(n,e,t){if(typeof n=="number")return fu(n,e);if(n.length!==e)throw new Y(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let r=0;r<e;++r){const s=n[r];if(!Hee(s))throw new Y(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${s}`)}return n}function wi(n,e,t,r,s=1){if(n==null)return n;const i=e+(e-1)*(s-1);let a;return t==="same"?a=n:a=n-i+1,Math.floor((a+r-1)/r)}function Ui(n,e,t,r){if(n==null)return null;if(r==="valid")n=n*e+Uo([t-e,0]);else if(r==="same")n=n*e;else throw new Y(`Unsupport padding mode: ${r}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mC(n,e){return j(()=>(gn(e),e==="channelsFirst"?ft(n,[0,2,3,1]):n))}function m$(n,e){return j(()=>(gn(e),e==="channelsFirst"?ft(n,[0,2,3,4,1]):n))}function hne(n,e,t,r=1,s="valid",i,a=1){return j(()=>{if(i==null&&(i=Ii()),gn(i),n.shape.length!==3)throw new Y(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new Y(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new Y(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(i==="channelsFirst"&&(n=ft(n,[0,2,1])),s==="causal")throw new nt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Rx(n,e,r,s==="same"?"same":"valid","NWC",a);return t!=null&&(o=Ei(o,t)),o})}function v3(n,e,t,r=[1,1],s="valid",i,a,o=null){return j(()=>{if(i==null&&(i=Ii()),gn(i),n.rank!==3&&n.rank!==4)throw new Y(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new Y(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=mC(n,i);if(s==="causal")throw new nt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=xD({x:l,filter:e,strides:r,pad:s==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:o}),i==="channelsFirst"&&(l=ft(l,[0,3,1,2])),l})}function pne(n,e,t,r=[1,1,1],s="valid",i,a){return j(()=>{if(i==null&&(i=Ii()),gn(i),n.rank!==4&&n.rank!==5)throw new Y(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new Y(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let o=m$(n,i);if(s==="causal")throw new nt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=kI(o,e,r,s==="same"?"same":"valid","NDHWC",a),t!=null&&(o=Ei(o,t)),i==="channelsFirst"&&(o=ft(o,[0,4,1,2,3])),o})}class Mv extends ut{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Mv.verifyArgs(t),this.rank=e,Fn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new nt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Fc(t.kernelSize,e,"kernelSize"),this.strides=Fc(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Ps(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,gn(this.dataFormat),this.activation=Ho(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=jt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=An(t.biasConstraint),this.biasRegularizer=Qt(t.biasRegularizer),this.activityRegularizer=Qt(t.activityRegularizer),this.dilationRate=Fc(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new Y(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new Y(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new Y(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Xi("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Wk(e.kernelSize,"number",1,3))throw new Y(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Zo(this.activation),useBias:this.useBias,biasInitializer:tn(this.biasInitializer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),biasConstraint:Ln(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Th extends Mv{constructor(e,t){super(e,t),this.kernel=null,Th.verifyArgs(t),this.filters=t.filters,Fn(this.filters,"filters"),this.kernelInitializer=jt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=An(t.kernelConstraint),this.kernelRegularizer=Qt(t.kernelRegularizer)}build(e){e=It(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new Y(`The channel dimension of the input should be defined. Found ${e[t]}`);const r=e[t],s=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:r}}],this.built=!0}call(e,t){return j(()=>{e=je(e);let r;const s=this.bias==null?null:this.bias.read(),i=_P(this.activation.getClassName());if(i!=null&&this.rank===2)r=v3(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)r=hne(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=v3(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=pne(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new nt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(e){e=It(e);const t=[],r=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<r.length;++i){const a=wi(r[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:tn(this.kernelInitializer),kernelRegularizer:Pt(this.kernelRegularizer),kernelConstraint:Ln(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new Y(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Ih extends Th{constructor(e){super(2,e),Ih.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Wk(e.kernelSize,"number",1,2))throw new Y(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ih.className="Conv2D";ye(Ih);class kh extends Th{constructor(e){super(3,e),kh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new Y(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}kh.className="Conv3D";ye(kh);let gC=class extends Ih{constructor(e){if(super(e),this.inputSpec=[new Tn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new Y(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=It(e),e.length!==4)throw new Y("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new Y("The channel dimension of the inputs should be defined. Found `None`.");const r=e[t],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Tn({ndim:4,axes:{[t]:r}})],this.built=!0}call(e,t){return j(()=>{let r=je(e);if(r.shape.length!==4)throw new Y(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape,i=s[0];let a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);const l=s[a],u=s[o],c=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],g=Ui(l,h,c,this.padding),f=Ui(u,p,d,this.padding),m=[i,g,f,this.filters];this.dataFormat!=="channelsLast"&&(r=ft(r,[0,2,3,1]));let y=Lx(r,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=ft(y,[0,3,1,2])),this.bias!=null&&(y=Ei(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=It(e);const t=e.slice();let r,s,i;this.dataFormat==="channelsFirst"?(r=1,s=2,i=3):(r=3,s=1,i=2);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[r]=this.filters,t[s]=Ui(t[s],l,a,this.padding),t[i]=Ui(t[i],u,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};gC.className="Conv2DTranspose";ye(gC);let yC=class extends kh{constructor(e){if(super(e),this.inputSpec=[new Tn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new Y(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=It(e),e.length!==5)throw new Y("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new Y("The channel dimension of the inputs should be defined. Found `None`.");const r=e[t],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Tn({ndim:5,axes:{[t]:r}})],this.built=!0}call(e,t){return j(()=>{let r=je(e);if(r.shape.length!==5)throw new Y(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape,i=s[0];let a,o,l;this.dataFormat==="channelsFirst"?(l=2,a=3,o=4):(l=1,a=2,o=3);const u=s[l],c=s[a],d=s[o],h=this.kernelSize[0],p=this.kernelSize[1],g=this.kernelSize[2],f=this.strides[0],m=this.strides[1],y=this.strides[2],b=Ui(u,f,h,this.padding),x=Ui(c,m,p,this.padding),v=Ui(d,y,g,this.padding),w=[i,b,x,v,this.filters];this.dataFormat!=="channelsLast"&&(r=ft(r,[0,2,3,4,1]));let T=CI(r,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(T=ft(T,[0,4,1,2,3])),this.bias!==null&&(T=Ei(T,this.bias.read(),this.dataFormat)),this.activation!==null&&(T=this.activation.apply(T)),T})}computeOutputShape(e){e=It(e);const t=e.slice();let r,s,i,a;this.dataFormat==="channelsFirst"?(r=1,s=2,i=3,a=4):(r=4,s=1,i=2,a=3);const o=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],d=this.strides[1],h=this.strides[2];return t[r]=this.filters,t[s]=Ui(t[s],c,o,this.padding),t[i]=Ui(t[i],d,l,this.padding),t[a]=Ui(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};yC.className="Conv3DTranspose";ye(yC);let g$=class extends Th{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new Y("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new Y("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new Y(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=jt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Qt(t.depthwiseRegularizer),this.depthwiseConstraint=An(t.depthwiseConstraint),this.pointwiseInitializer=jt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Qt(t.pointwiseRegularizer),this.pointwiseConstraint=An(t.pointwiseConstraint)}build(e){if(e=It(e),e.length<this.rank+2)throw new Y(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new Y(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const r=e[t],s=this.kernelSize.concat([r,this.depthMultiplier]),i=[];for(let o=0;o<this.rank;++o)i.push(1);i.push(r*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Tn({ndim:this.rank+2,axes:{[t]:r}})],this.built=!0}call(e,t){return j(()=>{e=je(e);let r;if(this.rank===1)throw new nt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=ft(e,[0,2,3,1])),r=Xx(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=Ei(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=ft(r,[0,3,1,2])),r})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=tn(this.depthwiseInitializer),e.pointwiseInitializer=tn(this.pointwiseInitializer),e.depthwiseRegularizer=Pt(this.depthwiseRegularizer),e.pointwiseRegularizer=Pt(this.pointwiseRegularizer),e.depthwiseConstraint=Ln(this.depthwiseConstraint),e.pointwiseConstraint=Ln(this.pointwiseConstraint),e}};g$.className="SeparableConv";let bC=class extends g${constructor(e){super(2,e)}};bC.className="SeparableConv2D";ye(bC);class dg extends Th{constructor(e){super(1,e),dg.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Wk(e.kernelSize,"number",1,1))throw new Y(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}dg.className="Conv1D";ye(dg);let xC=class extends ut{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return j(()=>{if(e=je(e),this.dataFormat==="channelsLast"){const r=uy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return uy(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const r=uy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return uy(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};xC.className="Cropping2D";ye(xC);let vC=class extends ut{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,gn(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Xee(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],r=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,r]}else{const t=e[1]==null?null:this.size[0]*e[1],r=e[2]==null?null:this.size[1]*e[2];return[e[0],t,r,e[3]]}}call(e,t){return j(()=>{let r=je(e);const s=r.shape;if(this.dataFormat==="channelsFirst"){r=ft(r,[0,2,3,1]);const i=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?js.resizeNearestNeighbor(r,[i,a]):js.resizeBilinear(r,[i,a]);return ft(o,[0,3,1,2])}else{const i=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?js.resizeNearestNeighbor(r,[i,a]):js.resizeBilinear(r,[i,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};vC.className="UpSampling2D";ye(vC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fne(n,e,t=[1,1],r="valid",s,i){return j(()=>{s==null&&(s=Ii()),gn(s);let a=mC(n,s);if(n.rank!==4)throw new Y(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new Y(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=fh(a,e,t,r==="same"?"same":"valid","NHWC",i),s==="channelsFirst"&&(a=ft(a,[0,3,1,2])),a})}let wC=class extends Mv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=jt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=An(e.depthwiseConstraint),this.depthwiseRegularizer=Qt(e.depthwiseRegularizer)}build(e){if(e=It(e),e.length<4)throw new Y(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new Y(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const r=e[t],s=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return j(()=>{e=je(e);let r=fne(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=Ei(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=It(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=wi(t,this.kernelSize[0],this.padding,this.strides[0]),a=wi(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,i,a]:[e[0],i,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=tn(this.depthwiseInitializer),e.depthwiseRegularizer=Pt(this.depthwiseRegularizer),e.depthwiseConstraint=Ln(this.depthwiseRegularizer),e}};wC.className="DepthwiseConv2D";ye(wC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function y$(n,e,t,r){if(Array.isArray(n)){if(e!=null||t!=null)throw new Y("When inputs is an array, neither initialState or constants should be provided");r!=null&&(t=n.slice(n.length-r,n.length),n=n.slice(0,n.length-r)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function s(i){return i==null||Array.isArray(i)?i:[i]}return e=s(e),t=s(t),{inputs:n,initialState:e,constants:t}}function b$(n,e,t,r=!1,s,i,a=!1,o=!1){return j(()=>{const l=e.shape.length;if(l<3)throw new Y(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Ti(2,l));e=ft(e,u),i!=null,a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),s!=null&&(s=Te(Te(s,"bool"),"float32"),s.rank===l-1&&(s=Jn(s,-1)),s=ft(s,u)),r&&(e=Ls(e,0),s!=null&&(s=Ls(s,0)));const c=[];let d,h=t;const p=e.shape[0],g=As(e);let f;s!=null&&(f=As(s));for(let y=0;y<p;++y){const b=g[y],x=j(()=>n(b,h));if(s==null)d=x[0],h=x[1];else{const v=j(()=>{const w=f[y],T=Ee(ds(w),w),k=me(Z(x[0],w),Z(h[0],T)),S=h.map((C,_)=>me(Z(x[1][_],w),Z(C,T)));return{output:k,newStates:S}});d=v.output,h=v.newStates}o&&c.push(d)}let m;return o&&(m=fr(c,1)),[d,m,h]})}class Ri extends ut{constructor(e){super(e);let t;if(e.cell==null)throw new Y("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Rv({cells:e.cell}):t=e.cell,t.stateSize==null)throw new Y("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Tn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ti(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){a2(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const r=t[0];let s;if(this.returnSequences?s=[e[0],e[1],r]:s=[e[0],r],this.returnState){const i=[];for(const a of t)i.push([e[0],a]);return[s].concat(i)}else return s}computeMask(e,t){return j(()=>{Array.isArray(t)&&(t=t[0]);const r=this.returnSequences?t:null;if(this.returnState){const s=this.states.map(i=>null);return[r].concat(s)}else return r})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let r=0;r<e;++r)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new nt("Constants support is not implemented in RNN yet.");a2(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new Tn({shape:[t,null,...r]});const s=[e[0]].concat(e.slice(2));this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!ht(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new Y(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new Tn({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){j(()=>{if(!this.stateful)throw new co("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(r==null)throw new Y("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Sn([r,s])):this.states_=[Sn([r,this.cell.stateSize])];else if(e==null)Je(this.states_),this.keptStates!=null&&(Je(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Sn([r,s])):this.states_[0]=Sn([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Y(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Je(this.states_);for(let s=0;s<this.states_.length;++s){const i=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[r,a];if(!ht(i.shape,o))throw new Y(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>un(s.clone()))})}apply(e,t){let r=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});const i=y$(e,r,s,this.numConstants);e=i.inputs,r=i.initialState,s=i.constants;let a=[],o=[];if(r!=null){t.initialState=r,a=a.concat(r),this.stateSpec=[];for(const l of r)this.stateSpec.push(new Tn({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof ki){const l=[e].concat(a),u=this.inputSpec.concat(o),c=this.inputSpec;this.inputSpec=u;const d=super.apply(l,t);return this.inputSpec=c,d}else return super.apply(e,t)}call(e,t){return j(()=>{const r=t==null?null:t.mask,s=t==null?null:t.training;let i=t==null?null:t.initialState;e=je(e),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new Y(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:s},l=b$((p,g)=>{const f=this.cell.call([p].concat(g),o);return[f[0],f.slice(1)]},e,i,this.goBackwards,r,null,this.unroll,this.returnSequences),u=l[0],c=l[1],d=l[2];this.stateful&&this.resetStates(d,s);const h=this.returnSequences?c:u;return this.returnState?[h].concat(d):h})}getInitialState(e){return j(()=>{let t=Sn(e.shape);return t=Ae(t,[1,2]),t=ag(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?s2(t,[1,r]):t):this.cell.stateSize>1?[s2(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===Ri.className&&(t.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),e),t)}static fromConfig(e,t,r={}){const s=t.cell,i=vi(s,r);return new e(Object.assign(t,{cell:i}))}}Ri.className="RNN";ye(Ri);class hg extends ut{}let Nv=class extends hg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Fn(this.units,"units"),this.activation=Ho(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=jt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Qt(e.kernelRegularizer),this.recurrentRegularizer=Qt(e.recurrentRegularizer),this.biasRegularizer=Qt(e.biasRegularizer),this.kernelConstraint=An(e.kernelConstraint),this.recurrentConstraint=An(e.recurrentConstraint),this.biasConstraint=An(e.biasConstraint),this.dropout=ad([1,Uo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ad([1,Uo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=It(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return j(()=>{if(e=e,e.length!==2)throw new Y(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];const s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ko({ones:()=>ds(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ko({ones:()=>ds(r),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let i;const a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?i=sa(Z(e,a),this.kernel.read()):i=sa(e,this.kernel.read()),this.bias!=null&&(i=Ei(i,this.bias.read())),o!=null&&(r=Z(r,o));let l=me(i,sa(r,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Zo(this.activation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),recurrentInitializer:tn(this.recurrentInitializer),biasInitializer:tn(this.biasInitializer),kernelRegularizer:Pt(this.kernelRegularizer),recurrentRegularizer:Pt(this.recurrentRegularizer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),kernelConstraint:Ln(this.kernelConstraint),recurrentConstraint:Ln(this.recurrentConstraint),biasConstraint:Ln(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};Nv.className="SimpleRNNCell";ye(Nv);let SC=class extends Ri{constructor(e){e.cell=new Nv(e),super(e)}call(e,t){return j(()=>{this.cell.dropoutMask!=null&&(Je(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Je(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:i})})}static fromConfig(e,t){return new e(t)}};SC.className="SimpleRNN";ye(SC);let Ev=class extends hg{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Y("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Fn(this.units,"units"),this.activation=Ho(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ho(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=jt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Qt(e.kernelRegularizer),this.recurrentRegularizer=Qt(e.recurrentRegularizer),this.biasRegularizer=Qt(e.biasRegularizer),this.kernelConstraint=An(e.kernelConstraint),this.recurrentConstraint=An(e.recurrentConstraint),this.biasConstraint=An(e.biasConstraint),this.dropout=ad([1,Uo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ad([1,Uo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=It(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return j(()=>{if(e=e,e.length!==2)throw new Y(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const r=t.training==null?!1:t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ko({ones:()=>ds(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ko({ones:()=>ds(s),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=Z(e,i[0]));let c=sa(e,this.kernel.read());this.useBias&&(c=Ei(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Z(s,a[0]));const d=this.recurrentKernel.read(),[h,p]=Wr(d,[2*this.units,this.units],d.rank-1),g=sa(s,h),[f,m,y]=Wr(c,3,c.rank-1),[b,x]=Wr(g,2,g.rank-1);o=this.recurrentActivation.apply(me(f,b)),l=this.recurrentActivation.apply(me(m,x));const v=sa(Z(l,s),p);u=this.activation.apply(me(y,v));const w=me(Z(o,s),Z(me(1,Gt(o)),u));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Zo(this.activation),recurrentActivation:Zo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),recurrentInitializer:tn(this.recurrentInitializer),biasInitializer:tn(this.biasInitializer),kernelRegularizer:Pt(this.kernelRegularizer),recurrentRegularizer:Pt(this.recurrentRegularizer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),kernelConstraint:Ln(this.kernelConstraint),recurrentConstraint:Ln(this.recurrentConstraint),biasConstraint:Ln(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};Ev.className="GRUCell";ye(Ev);let TC=class extends Ri{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ev(e),super(e)}call(e,t){return j(()=>{this.cell.dropoutMask!=null&&(Je(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Je(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};TC.className="GRU";ye(TC);class pg extends hg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Fn(this.units,"units"),this.activation=Ho(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ho(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=jt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Qt(e.kernelRegularizer),this.recurrentRegularizer=Qt(e.recurrentRegularizer),this.biasRegularizer=Qt(e.biasRegularizer),this.kernelConstraint=An(e.kernelConstraint),this.recurrentConstraint=An(e.recurrentConstraint),this.biasConstraint=An(e.biasConstraint),this.dropout=ad([1,Uo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ad([1,Uo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=It(e);const r=e[e.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,a=this.units;s=new(t=class extends ni{apply(o,l){const u=i.apply([a]),c=new gv().apply([a]),d=i.apply([a*2]);return r3(r3(u,c),d)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return j(()=>{const r=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new Y(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ko({ones:()=>ds(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ko({ones:()=>ds(s),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,d;0<this.dropout&&this.dropout<1&&(e=Z(e,a[0]));let h=sa(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Z(s,o[0])),h=me(h,sa(s,this.recurrentKernel.read())),this.useBias&&(h=Ei(h,this.bias.read()));const[p,g,f,m]=Wr(h,4,h.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(g),c=me(Z(u,i),Z(l,this.activation.apply(f))),d=this.recurrentActivation.apply(m);const y=Z(d,this.activation.apply(c));return[y,y,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Zo(this.activation),recurrentActivation:Zo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),recurrentInitializer:tn(this.recurrentInitializer),biasInitializer:tn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Pt(this.kernelRegularizer),recurrentRegularizer:Pt(this.recurrentRegularizer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),kernelConstraint:Ln(this.kernelConstraint),recurrentConstraint:Ln(this.recurrentConstraint),biasConstraint:Ln(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}pg.className="LSTMCell";ye(pg);let IC=class extends Ri{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new pg(e),super(e)}call(e,t){return j(()=>{this.cell.dropoutMask!=null&&(Je(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Je(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};IC.className="LSTM";ye(IC);let Rv=class extends hg{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return j(()=>{e=e;let r=e.slice(1);const s=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(r.splice(0,o.stateSize.length)):s.push(r.splice(0,1));s.reverse();const i=[];let a;for(let o=0;o<this.cells.length;++o){const l=this.cells[o];r=s[o],o===0?a=[e[0]].concat(r):a=[a[0]].concat(r),a=l.call(a,t),i.push(a.slice(1))}r=[];for(const o of i.slice().reverse())r.push(...o);return[a[0]].concat(r)})}build(e){a2(e)&&(e=e[0]),e=e;let t;this.cells.forEach((r,s)=>{Zl(`RNNCell_${s}`,()=>{r.build(e),Array.isArray(r.stateSize)?t=r.stateSize[0]:t=r.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,r={}){const s=[];for(const i of t.cells)s.push(vi(i,r));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const r of this.cells)t.push(...r.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return o2(e)}setWeights(e){const t=[];for(const r of this.cells){const s=r.weights.length,i=e.splice(s);for(let a=0;a<r.weights.length;++a)t.push([r.weights[a],i[a]])}jk(t)}};Rv.className="StackedRNNCells";ye(Rv);function Ko(n){const{ones:e,rate:t,training:r=!1,count:s=1,dropoutFunc:i}=n,a=()=>i!=null?i(e(),t):zP(e(),t),o=()=>lg(a,e,r);return!s||s<=1?un(o().clone()):Array(s).fill(void 0).map(o).map(l=>un(l.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var mne=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,r=Object.getOwnPropertySymbols(n);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(n,r[s])&&(t[r[s]]=n[r[s]]);return t};let x$=class extends Ri{constructor(e){if(e.unroll)throw new nt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new nt("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Tn({ndim:5})]}call(e,t){return j(()=>{if(this.cell.dropoutMask!=null&&(Je(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Je(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Y("ConvRNN2D cell does not support constants");const r=t==null?null:t.mask,s=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:i})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return j(()=>{const{stateSize:t}=this.cell,r=e.shape,s=this.computeSingleOutputShape(r),i=[s[0],...s.slice(2)],a=Sn(i);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){j(()=>{if(!this.stateful)throw new co("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,s=this.computeSingleOutputShape(r),i=[s[0],...s.slice(2)];if(r[0]==null)throw new Y("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Sn(i)):this.states_=[Sn(i)];else if(e==null)Je(this.states_),this.keptStates!=null&&(Je(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Sn(i)):this.states_[0]=Sn(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Y(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Je(this.states_);for(let a=0;a<this.states_.length;++a){const o=e[a],l=i;if(!ht(o.shape,l))throw new Y(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${o.shape}`);this.states_[a]=o}}this.states_=this.states_.map(a=>un(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:r,kernelSize:s,padding:i,strides:a,dilationRate:o}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],d=wi(u,s[0],i,a[0],o[0]),h=wi(c,s[1],i,a[1],o[1]);return[...e.slice(0,2),...l?[r,d,h]:[d,h,r]]}};x$.className="ConvRNN2D";let Lv=class extends pg{constructor(e){const{filters:t,kernelSize:r,strides:s,padding:i,dataFormat:a,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Fn(this.filters,"filters"),this.kernelSize=Fc(r,2,"kernelSize"),this.kernelSize.forEach(l=>Fn(l,"kernelSize")),this.strides=Fc(s||1,2,"strides"),this.strides.forEach(l=>Fn(l,"strides")),this.padding=i||"valid",Ps(this.padding),this.dataFormat=a||"channelsLast",gn(this.dataFormat),this.dilationRate=Fc(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>Fn(l,"dilationRate"))}build(e){var t;e=It(e);const r=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[r]==null)throw new Y(`The channel dimension of the input should be defined. Found ${e[r]}`);const s=e[r],i=4,a=this.kernelSize.concat([s,this.filters*i]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(t=class extends ni{apply(d,h){const p=u.apply([c]),g=Gr([c]),f=u.apply([c*2]);return Vk([p,g,f])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return j(()=>{if(e.length!==3)throw new Y(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const r=t.training||!1,s=e[0],i=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ko({ones:()=>ds(s),rate:this.dropout,training:r,count:o,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(U,ee,G)=>!ee||!ee[G]?U:Z(ee[G],U);let c=u(s,l,0),d=u(s,l,1),h=u(s,l,2),p=u(s,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ko({ones:()=>ds(i),rate:this.recurrentDropout,training:r,count:o,dropoutFunc:this.dropoutFunc}));const g=this.recurrentDropoutMask;let f=u(i,g,0),m=u(i,g,1),y=u(i,g,2),b=u(i,g,3);const x=3,[v,w,T,k]=Wr(this.kernel.read(),o,x),[S,C,_,z]=this.useBias?Wr(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,v,S,this.padding),d=this.inputConv(d,w,C,this.padding),h=this.inputConv(h,T,_,this.padding),p=this.inputConv(p,k,z,this.padding);const[P,R,A,F]=Wr(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,P),m=this.recurrentConv(m,R),y=this.recurrentConv(y,A),b=this.recurrentConv(b,F);const B=this.recurrentActivation.apply(me(c,f)),K=this.recurrentActivation.apply(me(d,m)),L=me(Z(K,a),Z(B,this.activation.apply(me(h,y)))),O=Z(this.recurrentActivation.apply(me(p,b)),this.activation.apply(L));return[O,O,L]})}getConfig(){const e=super.getConfig(),t=mne(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),r)}inputConv(e,t,r,s){const i=Oa(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?Ei(i,r,this.dataFormat):i}recurrentConv(e,t){return Oa(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Lv.className="ConvLSTM2DCell";ye(Lv);let kC=class extends x${constructor(e){const t=new Lv(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};kC.className="ConvLSTM2D";ye(kC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Av=class extends ut{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,r=[];for(let s=0;s<this.noiseShape.length;++s)r.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return r}call(e,t){return j(()=>{this.invokeCallHook(e,t);const r=je(e);if(0<this.rate&&this.rate<1){const s=t.training==null?!1:t.training,i=this.getNoiseShape(r);return lg(()=>zP(r,this.rate,i,this.seed),()=>r,s)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Av.className="Dropout";ye(Av);let CC=class extends Av{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};CC.className="SpatialDropout1D";ye(CC);let _C=class extends ut{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Fn(this.units,"units"),this.activation=Ho(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=jt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=jt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=An(e.kernelConstraint),this.biasConstraint=An(e.biasConstraint),this.kernelRegularizer=Qt(e.kernelRegularizer),this.biasRegularizer=Qt(e.biasRegularizer),this.activityRegularizer=Qt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=It(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=It(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return j(()=>{this.invokeCallHook(e,t);const r=je(e),s=_P(this.activation.getClassName());let i;return s!=null?i=sa(r,this.kernel.read(),s,this.bias?this.bias.read():null):(i=sa(r,this.kernel.read()),this.bias!=null&&(i=Ei(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:Zo(this.activation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),biasInitializer:tn(this.biasInitializer),kernelRegularizer:Pt(this.kernelRegularizer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),kernelConstraint:Ln(this.kernelConstraint),biasConstraint:Ln(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};_C.className="Dense";ye(_C);let MC=class extends ut{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=It(e);for(const t of e.slice(1))if(t==null)throw new Y(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Do(e,1)]}call(e,t){return j(()=>{this.invokeCallHook(e,t);let r=je(e);if(this.dataFormat==="channelsFirst"&&r.rank>1){const s=[0];for(let i=2;i<r.rank;++i)s.push(i);s.push(1),r=ft(r,s)}return jee(r)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};MC.className="Flatten";ye(MC);let NC=class extends ut{constructor(e){super(e),this.supportsMasking=!0,this.activation=Ho(e.activation)}call(e,t){return j(()=>{this.invokeCallHook(e,t);const r=je(e);return this.activation.apply(r)})}getConfig(){const e={activation:Zo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};NC.className="Activation";ye(NC);let EC=class extends ut{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return j(()=>(e=je(e),Kee(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};EC.className="RepeatVector";ye(EC);let RC=class extends ut{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const r="Total size of new array must be unchanged.",s=t.slice();let i=1,a=null;for(let l=0;l<s.length;++l){const u=s[l];if(this.isUnknown(u))if(a===null)a=l;else throw new Y("Can only specifiy one unknown dimension.");else i*=u}const o=Do(e);if(a!==null){if(i===0||o%i!==0)throw new Y(r);s[a]=o/i}else if(o!==i)throw new Y(r);return s}computeOutputShape(e){let t=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return j(()=>{this.invokeCallHook(e,t);const r=je(e),s=r.shape,i=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return H(r,i)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};RC.className="Reshape";ye(RC);let LC=class extends ut{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ti(1,e.dims.length+1);if(!ht(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Tn({ndim:this.dims.length+1})]}computeOutputShape(e){e=It(e);const t=e.slice();return this.dims.forEach((r,s)=>{t[s+1]=e[r]}),t}call(e,t){return ft(je(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};LC.className="Permute";ye(LC);let AC=class extends ut{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const r=je(e);return hf(hu(r,this.maskValue),-1)}call(e,t){return j(()=>{this.invokeCallHook(e,t);const r=je(e),s=hf(hu(r,this.maskValue),-1,!0);return Z(r,Te(s,r.dtype))})}};AC.className="Masking";ye(AC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let zC=class extends ut{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Nt(e.inputLength))}this.inputDim=e.inputDim,Fn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Fn(this.outputDim,"outputDim"),this.embeddingsInitializer=jt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Qt(e.embeddingsRegularizer),this.activityRegularizer=Qt(e.activityRegularizer),this.embeddingsConstraint=An(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return j(()=>this.maskZero?(e=je(e),hu(e,yt(e))):null)}computeOutputShape(e){if(e=It(e),this.inputLength==null)return[...e,this.outputDim];const t=Nt(this.inputLength);if(t.length!==e.length-1)throw new Y(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let s=0;s<t.length;++s){const i=t[s],a=e[s+1];if(i!=null&&a!=null&&i!==a)throw new Y(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);i==null&&(t[r]=a),r++}}return[e[0],...t,this.outputDim]}call(e,t){return j(()=>{this.invokeCallHook(e,t);let r=je(e);r.dtype!=="int32"&&(r=Xa(r,"int32"));const s=AP(this.embeddings.read(),H(r,[r.size]));return H(s,It(this.computeOutputShape(r.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:tn(this.embeddingsInitializer),embeddingsRegularizer:Pt(this.embeddingsRegularizer),activityRegularizer:Pt(this.activityRegularizer),embeddingsConstraint:Ln(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};zC.className="Embedding";ye(zC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Gu extends ut{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new nt}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const r=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const i=e[e.length-t.length+s],a=t[s];if(i==null||a==null||i<0||a<0)r.push(null);else if(i===1)r.push(a);else if(a===1)r.push(i);else{if(i!==a)throw new Y("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));r.push(i)}}return r}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[It(e)]),e=e,e.length<2)throw new Y(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const i of e)i!=null&&i[0]!==null&&t.push(i[0]);if(t=zo(t),t.length>1)throw new Y(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let r=e[0]==null?null:e[0].slice(1);for(let i=1;i<e.length;++i){const a=e[i]==null?null:e[i].slice(1);r=this.computeElementwiseOpOutputShape(r,a)}const s=e.map(i=>i.length);e.indexOf(null)===-1&&zo(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return j(()=>{if(e=e,this.reshapeRequired){const r=[],s=e.map(i=>i.rank);if(s.indexOf(null)===-1){const i=Uo(s);for(let a of e){const o=a.rank;for(let l=0;l<i-o;++l)a=ag(a,1);r.push(a)}return this.mergeFunction(r)}else{let i=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,d=c[0],h=c.slice(1).concat([d]);let p=H(l,[d].concat(Do(c.slice(1))));p=ft(p,[1,0]),p=H(p,h),r.push(p),i=!0}else if(u>1){const c=Ti(1,u).concat([0]);r.push(ft(l,c)),i=!0}else r.push(l)}let a=this.mergeFunction(r);const o=a.rank;if(i){if(o==null){const l=a.shape,u=l.length,c=l[u-1],d=[c].concat(l.slice(0,l.length-1));a=H(ft(H(a,[-1,c]),[1,0]),d)}else if(o>1){const l=[o-1].concat(Ti(0,o-1));a=ft(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){const i=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,i)}let r=[];for(const s of e)s!=null&&s[0]!==null&&r.push(s[0]);return r=zo(r),r.length===1?t=r.concat(t):t=[null].concat(t),t}computeMask(e,t){return j(()=>{if(t==null)return null;if(!Array.isArray(t))throw new Y("`mask` should be an Array");if(!Array.isArray(e))throw new Y("`inputs` should be an Array");if(t.length!==e.length)throw new Y(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Jn(s,0));let r=t[0];for(let s=1;s<t.length-1;++s)r=ei(r,t[s]);return r})}}let DC=class extends Gu{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=me(t,e[r]);return t})}};DC.className="Add";ye(DC);let PC=class extends Gu{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=Z(t,e[r]);return t})}};PC.className="Multiply";ye(PC);let $C=class extends Gu{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=me(t,e[r]);return Z(1/e.length,t)})}};$C.className="Average";ye($C);let FC=class extends Gu{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=ca(t,e[r]);return t})}};FC.className="Maximum";ye(FC);let GC=class extends Gu{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=Xo(t,e[r]);return t})}};GC.className="Minimum";ye(GC);let OC=class extends Gu{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new Y("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const s of e)if(s!=null){t=!1;break}if(t)return;const r=[];for(let s=0;s<e.length;++s){const i=e[s].slice();i.splice(this.axis,1);let a=!1;for(const o of r)if(ht(o,i)){a=!0;break}a||r.push(i)}if(r.length>1)throw new Y("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return j(()=>Vk(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new Y("A `Concatenate` layer should be called on a list of inputs.");const t=e,r=t[0].slice(),s=this.axis<0?r.length+this.axis:this.axis;for(const i of t.slice(1)){if(r[s]==null||i[s]==null){r[s]=null;break}r[s]+=i[s]}return r}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new Y("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Y("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Y(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return j(()=>{let r=!0;if(t.forEach(a=>{if(a!=null){r=!1;return}}),r)return null;const s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(Te(ds(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Jn(t[a],-1)):s.push(t[a]);const i=pn(s,this.axis);return Ex(i,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};OC.className="Concatenate";ye(OC);function ep(n,e){for(;n<0;)n+=e;return n}function gne(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new nt("batchDot is not implemented for tensors of 4D or higher rank yet");if(M(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),M(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new nt("batchDot is not implemented for complex64-type Tensors yet.");const r=n.shape.length,s=e.shape.length;t==null&&(t=[r-1,s-2]);const i=t;return j(()=>{let a;if(r>s){a=r-s;const l=[];for(let u=0;u<a;++u)l.push(1);e=H(e,e.shape.concat(l))}else if(s>r){a=s-r;const l=[];for(let u=0;u<a;++u)l.push(1);n=H(n,n.shape.concat(l))}else a=0;let o;if(n.shape.length===2&&e.shape.length===2)i[0]===i[1]?o=Ae(Z(n,e),i[0]):o=Ae(Z(ft(n,[1,0]),e),i[1]);else{const l=i[0]!==n.shape.length-1,u=i[1]===e.shape.length-1;o=ot(n,e,l,u)}if(a>0){let l;r>s?l=r+s-3:l=r-1;const u=[];for(let c=l;c<l+a;++c)u.push(c);o=ol(o,u)}return o.shape.length===1&&(o=Jn(o,1)),o})}class WC extends Gu{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){M(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],r=e[1];if(t.length>3||r.length>3)throw new nt("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,r);if(t[s[0]]!==r[s[1]])throw new Y(`Dimension incompatibility: ${t[s[0]]} !== ${r[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new Y(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],r=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((i,a)=>ep(i,e[a].shape.length)):s=[ep(this.axes,t.shape.length),ep(this.axes,r.shape.length)],this.normalize&&(t=z0(t,s[0]),r=z0(r,s[1])),gne(t,r,s)}interpretAxes(e,t){let r;return Array.isArray(this.axes)?r=this.axes:r=[ep(this.axes,e.length),ep(this.axes,t.length)],r}computeOutputShape(e){M(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),r=e[1].slice();if(t.length>3||r.length>3)throw new nt("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,r);t.splice(s[0],1),r.splice(s[1],1),r.splice(0,1);const i=t.concat(r);return i.length===1&&i.push(1),i}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}WC.className="Dot";ye(WC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class VC extends ut{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return j(()=>{this.invokeCallHook(e,t);const r=je(e);return lg(()=>me(mv(r.shape,0,this.stddev),r),()=>r,t.training||!1)})}}VC.className="GaussianNoise";ye(VC);class BC extends ut{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return j(()=>{this.invokeCallHook(e,t);const r=je(e);return this.rate>0&&this.rate<1?lg(()=>{const s=Math.sqrt(this.rate/(1-this.rate));return Z(r,mv(r.shape,1,s))},()=>r,t.training||!1):r})}}BC.className="GaussianDropout";ye(BC);class XC extends ut{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||je(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return j(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(e);return lg(()=>{const s=je(e),i=-1.6732632423543772*1.0507009873554805;let a=ja(al(r),this.rate);a=Xa(a,"float32");const o=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-o*i*this.rate,u=me(Z(s,a),Z(me(a,-1),i));return me(Z(u,o),l)},()=>je(e),t.training||!1)}return e})}}XC.className="AlphaDropout";ye(XC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bf(n,e,t,r,s,i=.001){let a;if(n.rank===2)a=mI(n,e,t,r,s,i);else if(n.rank===3)a=gI(n,e,t,r,s,i);else if(n.rank===4)a=yI(n,e,t,r,s,i);else throw new nt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function yne(n,e,t,r,s=.001){return j(()=>{const i=Hm(n,r),a=i.mean,o=i.variance;return[bf(n,a,o,t,e,s),a,o]})}function bne(n,e,t,r,s=.001){return j(()=>{const i=Hm(n,r),a=i.mean,o=i.variance,l=[];for(const p of Ti(0,n.rank))r.indexOf(p)!==-1?l.push(1):l.push(n.shape[p]);const u=H(a,l),c=H(o,l),d=e==null?null:H(e,l),h=t==null?null:H(t,l);return[bf(n,u,c,h,d,s),a,o]})}function xne(n,e,t,r,s=.001){return ht(r.slice().sort(),Ti(0,n.rank-1))?yne(n,e,t,r,s):bne(n,e,t,r,s)}class UC extends ut{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=jt(e.betaInitializer||"zeros"),this.gammaInitializer=jt(e.gammaInitializer||"ones"),this.movingMeanInitializer=jt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=jt(e.movingVarianceInitializer||"ones"),this.betaConstraint=An(e.betaConstraint),this.gammaConstraint=An(e.gammaConstraint),this.betaRegularizer=Qt(e.betaRegularizer),this.gammaRegularizer=Qt(e.gammaRegularizer)}build(e){e=It(e);const t=this.axis>=0?this.axis:this.axis+e.length,r=e[t];if(r==null)throw new Y(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Tn({ndim:e.length,axes:{[t]:r}})];const s=[r];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return j(()=>{const r=t.training==null?!1:t.training,s=je(e),i=s.shape,a=i.length,o=Ti(0,a),l=this.axis>=0?this.axis:this.axis+a;o.splice(l,1);const u=fu(1,a);u[l]=i[l];const c=o.slice();c.sort();const d=!ht(c,Ti(0,a).slice(0,a-1)),h=()=>{if(d){const y=H(this.movingMean.read(),u),b=H(this.movingVariance.read(),u),x=this.center?H(this.beta.read(),u):null,v=this.scale?H(this.gamma.read(),u):null;return bf(s,y,b,x,v,this.epsilon)}else return bf(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return h();const[p,g,f]=xne(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(y,b,x)=>{j(()=>{const v=1-x,w=y.read(),T=Z(Ee(w,b),v);y.write(Ee(w,T))})};return m(this.movingMean,g,this.momentum),m(this.movingVariance,f,this.momentum),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tn(this.betaInitializer),gammaInitializer:tn(this.gammaInitializer),movingMeanInitializer:tn(this.movingMeanInitializer),movingVarianceInitializer:tn(this.movingVarianceInitializer),betaRegularizer:Pt(this.betaRegularizer),gammaRegularizer:Pt(this.gammaRegularizer),betaConstraint:Ln(this.betaConstraint),gammaConstraint:Ln(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}UC.className="BatchNormalization";ye(UC);class ZC extends ut{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=jt(e.betaInitializer||"zeros"),this.gammaInitializer=jt(e.gammaInitializer||"ones"),this.betaRegularizer=Qt(e.betaRegularizer),this.gammaRegularizer=Qt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=It(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const i of this.axis)if(i<0||i>=t)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==zo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(i=>e[i]),s=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const r=je(e),s=r.shape,i=s.length;return j(()=>{let{mean:a,variance:o}=Hm(r,this.axis,!0);const l=fu(1,i);for(const g of this.axis)l[g]=s[g];const u=g=>g!=null&&g.shape.length!==i?H(g,l):g;let c=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const h=[],p=[];for(let g=0;g<i;++g)this.axis.indexOf(g)!==-1?(h.push(s[g]),p.push(1)):(h.push(1),p.push(s[g]));return a=Ts(a,h),o=Ts(o,h),c!=null&&(c=Ts(c,p)),d!=null&&(d=Ts(d,p)),bf(r,a,o,d,c,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tn(this.betaInitializer),gammaInitializer:tn(this.gammaInitializer),betaRegularizer:Pt(this.betaRegularizer),gammaRegularizer:Pt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}ZC.className="LayerNormalization";ye(ZC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vne(n,e,t){return j(()=>{if(n.rank!==4)throw new Y(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new Y("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Ii()),t!=="channelsLast"&&t!=="channelsFirst")throw new Y(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return t==="channelsFirst"?r=[[0,0],[0,0],e[0],e[1]]:r=[[0,0],e[0],e[1],[0,0]],Qa(n,r)})}class HC extends ut{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Ii():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new Y(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,r;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new Y(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new Y(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[t,r]}this.inputSpec=[new Tn({ndim:4})]}computeOutputShape(e){e=It(e);let t,r;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?r=e[3]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],e[1],t,r]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?r=e[2]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],t,r,e[3]])}call(e,t){return j(()=>vne(je(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}HC.className="ZeroPadding2D";ye(HC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zv(n,e,t,r,s,i){return j(()=>{gn(s),NP(i),Ps(r),t==null&&(t=[1,1]),r==null&&(r="valid"),s==null&&(s=Ii()),i==null&&(i="max"),n=mC(n,s);let a;const o=r==="same"?"same":"valid";return i==="max"?a=Zm(n,e,t,o):a=Fm(n,e,t,o),s==="channelsFirst"&&(a=ft(a,[0,3,1,2])),a})}function v$(n,e,t,r,s,i){return j(()=>{gn(s),NP(i),Ps(r),t==null&&(t=[1,1,1]),r==null&&(r="valid"),s==null&&(s=Ii()),i==null&&(i="max"),n=m$(n,s);let a;const o=r==="same"?"same":"valid";return i==="max"?a=WI(n,e,t,o):a=fI(n,e,t,o),s==="channelsFirst"&&(a=ft(a,[0,4,1,2,3])),a})}class w$ extends ut{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new Y(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Fn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new Y(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Fn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Ps(this.padding),this.inputSpec=[new Tn({ndim:3})]}computeOutputShape(e){e=It(e);const t=wi(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return j(()=>{this.invokeCallHook(e,t),e=ag(je(e),2);const r=this.poolingFunction(je(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ol(r,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class KC extends w${constructor(e){super(e)}poolingFunction(e,t,r,s,i){return gn(i),Ps(s),zv(e,t,r,s,i,"max")}}KC.className="MaxPooling1D";ye(KC);class YC extends w${constructor(e){super(e)}poolingFunction(e,t,r,s,i){return gn(i),Ps(s),zv(e,t,r,s,i,"avg")}}YC.className="AveragePooling1D";ye(YC);class S$ extends ut{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new Y(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Fn(this.poolSize,"poolSize"),Fn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,gn(this.dataFormat),Ps(this.padding),this.inputSpec=[new Tn({ndim:4})]}computeOutputShape(e){e=It(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=wi(t,this.poolSize[0],this.padding,this.strides[0]),r=wi(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r]:[e[0],t,r,e[3]]}call(e,t){return j(()=>(this.invokeCallHook(e,t),this.poolingFunction(je(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class jC extends S${constructor(e){super(e)}poolingFunction(e,t,r,s,i){return gn(i),Ps(s),zv(e,t,r,s,i,"max")}}jC.className="MaxPooling2D";ye(jC);class QC extends S${constructor(e){super(e)}poolingFunction(e,t,r,s,i){return gn(i),Ps(s),zv(e,t,r,s,i,"avg")}}QC.className="AveragePooling2D";ye(QC);class T$ extends ut{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new Y(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Fn(this.poolSize,"poolSize"),Fn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,gn(this.dataFormat),Ps(this.padding),this.inputSpec=[new Tn({ndim:5})]}computeOutputShape(e){e=It(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=wi(t,this.poolSize[0],this.padding,this.strides[0]),r=wi(r,this.poolSize[1],this.padding,this.strides[1]),s=wi(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r,s]:[e[0],t,r,s,e[4]]}call(e,t){return j(()=>(this.invokeCallHook(e,t),this.poolingFunction(je(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class JC extends T${constructor(e){super(e)}poolingFunction(e,t,r,s,i){return gn(i),Ps(s),v$(e,t,r,s,i,"max")}}JC.className="MaxPooling3D";ye(JC);class qC extends T${constructor(e){super(e)}poolingFunction(e,t,r,s,i){return gn(i),Ps(s),v$(e,t,r,s,i,"avg")}}qC.className="AveragePooling3D";ye(qC);class I$ extends ut{constructor(e){super(e),this.inputSpec=[new Tn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new nt}}class e_ extends I${constructor(e){super(e||{})}call(e,t){return j(()=>{const r=je(e);return en(r,1)})}}e_.className="GlobalAveragePooling1D";ye(e_);class t_ extends I${constructor(e){super(e||{})}call(e,t){return j(()=>{const r=je(e);return Es(r,1)})}}t_.className="GlobalMaxPooling1D";ye(t_);class k$ extends ut{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,gn(this.dataFormat),this.inputSpec=[new Tn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new nt}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class n_ extends k${call(e,t){return j(()=>{const r=je(e);return this.dataFormat==="channelsLast"?en(r,[1,2]):en(r,[2,3])})}}n_.className="GlobalAveragePooling2D";ye(n_);class r_ extends k${call(e,t){return j(()=>{const r=je(e);return this.dataFormat==="channelsLast"?Es(r,[1,2]):Es(r,[2,3])})}}r_.className="GlobalMaxPooling2D";ye(r_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class C$ extends ut{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,r={}){const s=t.layer,i=vi(s,r);delete t.layer;const a={layer:i};return Object.assign(a,t),new e(a)}}class s_ extends C${constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=It(e),e.length<3)throw new Y(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=It(e);const t=[e[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(t),s=e[1];return[r[0],s].concat(r.slice(1))}call(e,t){return j(()=>(e=je(e),b$((r,s)=>[je(this.layer.call(r,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}s_.className="TimeDistributed";ye(s_);function wne(n){$u(Bee,"BidirectionalMergeMode",n)}const Sne="concat";class i_ extends C${constructor(e){super(e);const t=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=t,this.forwardLayer=vi(r),t.goBackwards=t.goBackwards!==!0;const s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=vi(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?Sne:e.mergeMode,wne(this.mergeMode),e.weights)throw new nt("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,r=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let r,s,i;return this.returnState&&(i=t.slice(1)),r=t[0],r=r,this.mergeMode==="concat"?(r[r.length-1]*=2,s=[r]):this.mergeMode==null?s=[r,r.slice()]:s=[r],this.returnState?this.mergeMode==null?s.concat(i).concat(i.slice()):[r].concat(i).concat(i.slice()):$r(s)}apply(e,t){let r=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});const i=y$(e,r,s,this.numConstants);if(e=i.inputs,r=i.initialState,s=i.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(r==null||r.length===0)&&s==null)return super.apply(e,t);const a=[],o=[];if(r!=null){const u=r.length;if(u%2>0)throw new Y("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=r,a.push(...r);const c=r.map(d=>new Tn({shape:d.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),o.push(...c)}if(s!=null)throw new nt("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof ki;for(const u of a)if(u instanceof ki!==l)throw new Y("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(a),c=this.inputSpec.concat(o),d=this.inputSpec;this.inputSpec=c;const h=super.apply(u,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return j(()=>{const r=t.initialState;let s,i;if(r==null)s=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{const l=r.slice(0,r.length/2),u=r.slice(r.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(i.slice(1))),s=s[0],i=i[0]),this.returnSequences&&(i=Ls(i,1));let o;return this.mergeMode==="concat"?o=Vk([s,i]):this.mergeMode==="sum"?o=me(s,i):this.mergeMode==="ave"?o=Z(.5,me(s,i)):this.mergeMode==="mul"?o=Z(s,i):this.mergeMode==null&&(o=[s,i]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Zl(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Zl(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let r;if(this.returnSequences?this.mergeMode==null?r=[t,t]:r=t:this.mergeMode==null?r=[null,null]:r=null,this.returnState){const s=this.forwardLayer.states.map(i=>null);return Array.isArray(r)?r.concat(s).concat(s):[r].concat(s).concat(s)}else return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const r=vi(t.layer);if(delete t.layer,t.numConstants!=null)throw new nt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=r,new e(s)}}i_.className="Bidirectional";ye(i_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class a_ extends ut{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return j(()=>(e=je(e),e.dtype!=="float32"&&(e=Xa(e,"float32")),me(Z(e,this.scale),this.offset)))}}a_.className="Rescaling";ye(a_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:Tne,cropAndResize:Ine}=js;class o_ extends ut{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,r,s,i,a,o,l){return j(()=>{let u,c=!1;const d=t/a,h=r/o,p=(s+t)/a,g=(i+r)/o,f=[d,h,p,g],m=[];e.rank===3?(c=!0,u=fr([e])):u=e;for(let v=0;v<u.shape[0];v++)m.push(f);const y=Kt(m,[m.length,4]),b=pu(0,m.length,1,"int32"),x=Ine(u,y,b,[s,i],"nearest");return Xa(c?je(As(x)):x,l)})}upsize(e,t,r,s){return j(()=>{const i=Tne(e,[t,r]);return Xa(i,s)})}call(e,t){return j(()=>{const r=je(e),s=r.dtype,i=r.shape,a=i[i.length-3],o=i[i.length-2];let l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let u=0;return o!==this.width&&(u=Math.floor((o-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(r,l,u,this.height,this.width,a,o,s):this.upsize(e,this.height,this.width,s)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=It(e);const t=e.length-3,r=e.length-2;return e[t]=this.height,e[r]=this.width,e}}o_.className="CenterCrop";ye(o_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kne(n,e,t,r){let s=je(n);if(s.dtype!=="int32"&&(s=Xa(s,"int32")),e==="int")return s;const i=s.shape;if(s.rank===0&&(s=Jn(s,-1)),e==="oneHot"&&s.shape[s.shape.length-1]!==1&&(s=Jn(s,-1)),s.rank>2)throw new Y(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${i} which would result in output rank ${s.rank}.`);const a=["multiHot","oneHot"].includes(e),o=s;let l;if(typeof r<"u"&&e==="count"?l=N0(o,r,t,a):l=N0(o,[],t,a),e!=="tfIdf")return l;if(r)return Z(l,r);throw new Y("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class l_ extends ut{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=It(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return j(()=>{e=je(e),e.dtype!=="int32"&&(e=Xa(e,"int32"));let r;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new Y(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);r=je(t.countWeights)}const s=Es(e),i=ed(e),a=Nr(this.numTokens,s).bufferSync().get(0),o=ja(i,0).bufferSync().get(0);if(!(a&&o))throw new Y(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return kne(e,this.outputMode,this.numTokens,r)})}}l_.className="CategoryEncoding";ye(l_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Cne=["bilinear","nearest"],w3=new Set(Cne);class u_ extends ut{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(w3.has(e.interpolation))this.interpolation=e.interpolation;else throw new Y(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=It(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return j(()=>{const r=[this.height,this.width];if(this.interpolation==="bilinear")return js.resizeBilinear(e,r,!this.cropToAspectRatio);if(this.interpolation==="nearest")return js.resizeNearestNeighbor(e,r,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...w3]} are supported`)})}}u_.className="Resizing";ye(u_);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _${constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}_$.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class M$ extends ut{constructor(e){super(e),this.randomGenerator=new _$(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}M$.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const _ne=["bilinear","nearest"],S3=new Set(_ne);class c_ extends M${constructor(e){super(e);const{factor:t,interpolation:r="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new Y(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new Y(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Y(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(r)if(S3.has(r))this.interpolation=r;else throw new Y(`Invalid interpolation parameter: ${r} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=It(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return j(()=>{const r=je(e);this.imgHeight=r.shape[r.shape.length-3];const s=r.shape[r.shape.length-2];this.widthFactor=al([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*s;i=Math.round(i);const a=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return js.resizeBilinear(e,a);case"nearest":return js.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...S3]} are supported`)}})}}c_.className="RandomWidth";ye(c_);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mne=q();Mne.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var qr;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(qr||(qr={}));var T3;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(T3||(T3={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function Nne(n,e){return G0(n,e)}function G0(n,e,t=new Map,r=new Set){if(n==null)return null;if(typeof Blob=="function"&&n instanceof Blob)return n.slice();if(r.has(n))throw new Error("Circular references are not supported.");if(t.has(n))return t.get(n);const s=e(n);if(s.recurse&&s.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse)if(ld(n)){const i=Array.isArray(n)?[]:{};r.add(n);for(const a in n){const o=n[a],l=G0(o,e,t,r);i[a]=l}return r.delete(n),n.__proto__&&(i.__proto__=n.__proto__),i}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return t.set(n,s.value),s.value}function Ene(n,e=E$){return N$(n,e)}function N$(n,e,t=new Set){const r=n[0];if(t.has(r))throw new Error("Circular references are not supported.");const s=e(n);if(s.recurse&&s.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse)if(ld(r)){const i=Array.isArray(r)?[]:{};t.add(r);for(const a in r){const o=n.map(u=>u[a]),l=N$(o,e,t);i[a]=l}return t.delete(r),i}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return s.value}function E$(n){return n===null?null:ld(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}async function R$(n,e){const t=new Map;G0(n,e,t);for(const r of Array.from(t.keys())){const s=t.get(r);if(Pa(s)){const i=await s;t.set(r,i)}}return G0(n,e,t)}function ld(n){let e=!1;if(q().get("IS_BROWSER"))e=n instanceof TextDecoder;else{const{StringDecoder:t}=require("string_decoder");e=n instanceof t}return n!=null&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||typeof n=="object"&&!(n instanceof xt)&&!(n instanceof Promise)&&!e)}function Rne(n){return n==null||Lne(n)||Array.isArray(n)||typeof n=="object"&&n instanceof xt||Nn(n)}function Lne(n){return n===null||typeof n!="object"&&typeof n!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function Ane(n){return Nne(n,zne)}function zne(n){return n instanceof xt?{value:n.clone(),recurse:!1}:ld(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class L${constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),r=this.get(t);return this.set(t,this.pop()),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Dv extends L${constructor(){super(Dv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=this.capacity*2,t=new Array(e),r=this.length();for(let s=0;s<r;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}Dv.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function A$(n){return new $ne(n)}function d_(n){return new Fne(n)}function Dne(n,e){return new z$(n,e)}function Pne(n,e=wo.FAIL){return new Hne(n,e)}let Bn=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let r=await e.next();for(;!r.done;)t.push(r.value),r=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),r=e(t.value);for(;!t.done&&r;)t=await this.next(),r=e(t.value)}handleErrors(e){return new Une(this,e)}filter(e){return new Bne(this,e)}map(e){return new Xne(this,e)}mapAsync(e){return new I3(this,e)}serialMapAsync(e){return new I3(this,e).serial()}flatmap(e){return new Zne(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new Vne(this,e,t)}columnMajorBatch(e,t=!0,r=E$){return this.rowMajorBatch(e,t).map(s=>Ene(s,r))}concatenate(e,t){return new z$(A$([this,e]),t)}take(e){return e<0||e==null?this:new Wne(this,e)}skip(e){return e<0||e==null?this:new One(this,e)}prefetch(e){return new D$(this,e)}shuffle(e,t){return new Kne(this,e,t)}serial(){return new Gne(this)}};class $ne extends Bn{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Ane(e),done:!1}}}class Fne extends Bn{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Gne extends Bn{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class One extends Bn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Je(e.value)}return this.upstream.next()}}class Wne extends Bn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Vne extends Bn{constructor(e,t,r=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Bne extends Bn{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Je(e.value)}}}class Xne extends Bn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Fa(e.value),r=this.transform(e.value),s=Fa(r);for(const i of t)Mx(i,s)||i.dispose();return{value:r,done:!1}}}class Une extends Bn{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}let I3=class extends Bn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Fa(e.value),r=await this.transform(e.value),s=Fa(r);for(const i of t)Mx(i,s)||i.dispose();return{value:r,done:!1}}};class h_ extends Bn{constructor(){super(),this.outputQueue=new Dv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Zne extends h_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Fa(e.value),r=this.transform(e.value),s=Fa(r);this.outputQueue.pushAll(r);for(const i of t)Mx(i,s)||i.dispose();return!0}}class z$ extends Bn{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){const r=await this.moreIterators.next();if(r.done)return{value:null,done:!0};this.iterator=r.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var wo;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(wo||(wo={}));class Hne extends Bn{constructor(e,t=wo.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,r=0;function s(a){return a instanceof Bn?{value:a.next().then(o=>(t++,o.done&&r++,o.value)),recurse:!1}:{value:null,recurse:!0}}const i=await R$(this.iterators,s);if(t===r)return{value:null,done:!0};if(r>0)switch(this.mismatchMode){case wo.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case wo.SHORTEST:return{value:null,done:!0};case wo.LONGEST:}return this.count++,{value:i,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class D$ extends Bn{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new L$(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Kne extends D${constructor(e,t,r){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=xh.alea(r||Qn().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */let Ch=class{constructor(){this.size=null}batch(e,t=!0){const r=this;M(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),es(async()=>(await r.iterator()).columnMajorBatch(e,t,Qne),s)}concatenate(e){const t=this;let r;return this.size===1/0||e.size===1/0?r=1/0:this.size!=null&&e.size!=null?r=this.size+e.size:r=null,es(async()=>(await t.iterator()).concatenate(await e.iterator()),r)}filter(e){const t=this;let r;return this.size===1/0?r=1/0:r=null,es(async()=>(await t.iterator()).filter(s=>j(()=>e(s))),r)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return es(async()=>(await t.iterator()).map(r=>j(()=>e(r))),this.size)}mapAsync(e){const t=this;return es(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return es(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let r;return this.size!=null&&e>0?r=this.size*e:e===0?r=0:this.size!=null&&(e===void 0||e<0)?r=1/0:r=null,es(async()=>{const s=d_(async()=>({value:await t.iterator(),done:!1}));return Dne(s.take(e))},r)}skip(e){const t=this;let r;return this.size!=null&&e>=0&&this.size>=e?r=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?r=0:r=null,es(async()=>(await t.iterator()).skip(e),r)}shuffle(e,t,r=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,i=xh.alea(t||Qn().toString());return es(async()=>{let a=i.int32();return r&&(a+=i.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){const t=this;let r;return this.size!=null&&this.size>e?r=e:this.size!=null&&this.size<=e?r=this.size:r=null,es(async()=>(await t.iterator()).take(e),r)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ch.MAX_BUFFER_SIZE=1e4;function es(n,e=null){return new class extends Ch{constructor(){super(...arguments),this.size=e}async iterator(){return n()}}}function Yne(n){return es(async()=>A$(n),n.length)}function jne(n){if(!ld(n))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(n))for(let t=0;t<n.length;t++)e=e==null?n[t].size:Math.min(e,n[t].size);else if(n instanceof Object)for(const t in n)e=e==null?n[t].size:Math.min(e,n[t].size);return es(async()=>{const t=await R$(n,r=>{if(r instanceof Ch)return{value:r.iterator(),recurse:!1};if(ld(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return Pne(t,wo.SHORTEST)},e)}function Qne(n){if(n===null)return null;const e=n[0];return Rne(e)?{value:Jne(n),recurse:!1}:{value:null,recurse:!0}}function Jne(n){if(n.length===0)throw new Error("Can't make a batch of zero elements.");return n[0]instanceof xt?fr(n):Kt(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&M(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qne=qx;class fg extends xb{nextDataId(){return fg.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new WT(this,Dt())}write(e,t,r){this.firstUse&&(this.firstUse=!1,q().get("IS_NODE")&&ws(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:r,refCount:1}),s}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Hi(r[0])){const i=r.map(a=>ta(a));s=this.write(i,e,t)}else s=this.write(r,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,r,s,i){this.data.set(e,{values:t,dtype:s,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:r}=this.data.get(e);if(t==="complex64"){const s=this.readSync(r.real.dataId),i=this.readSync(r.imag.dataId);return Va(s,i)}return Iz(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>$a(s));return rt(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return rt(e.shape,e.dtype,t)}makeOutput(e,t,r){return Dt().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Qn();return e(),{kernelMs:Qn()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Pe([e],"where");const t=this.readSync(e.dataId);return qne(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}fg.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const ere=n=>{const{x:e}=n.inputs,t=n.backend;Pe(e,"abs");let r=new Float32Array(ie(e.shape));const s=t.data.get(e.dataId).values;return r=P$(s),t.makeOutput(r,e.shape,e.dtype)},tre={kernelName:Lf,backendName:"cpu",kernelFunc:ere};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yn(n){return(e,t,r,s,i)=>{const a=qe(e,t),o=a.length,l=We(a),u=ie(a),c=Vn(i,u),d=e.length,h=t.length,p=We(e),g=We(t),f=du(e,a),m=du(t,a);if(f.length+m.length===0)for(let y=0;y<c.length;++y)c[y]=n(r[y%r.length],s[y%s.length]);else for(let y=0;y<c.length;++y){const b=_u(y,o,l),x=b.slice(-d);f.forEach(k=>x[k]=0);const v=bi(x,d,p),w=b.slice(-h);m.forEach(k=>w[k]=0);const T=bi(w,h,g);c[y]=n(r[v],s[T])}return[c,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,o=t.makeTensorInfo(r.shape,"complex64"),l=t.data.get(o.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(r.shape,"float32",i),imag:t.makeTensorInfo(s.shape,"float32",a)},o}const nre={kernelName:Mb,backendName:"cpu",kernelFunc:rs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O0(n,e,t="float32"){if(t==="complex64"){const s=O0(n,e,"float32"),i=O0(n,e,"float32");return rs({inputs:{real:s,imag:i},backend:n})}const r=sr(ie(e),t);return n.makeTensorInfo(e,t,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const rre={kernelName:Fd,backendName:"cpu",kernelFunc:la};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mu(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.real,i=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,i)}const sre={kernelName:ox,backendName:"cpu",kernelFunc:mu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=tl([0],t),[i,a]=yn((o,l)=>o!==l?1:0)(e,[],n,s,"bool");return[a,"bool",i]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}function Yo(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:i}=r;if(i==="complex64"){if(s.dtype==="complex64")return la({inputs:{x:s},backend:t});const c=O0(t,s.shape,s.dtype),d=Yo({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),h=rs({inputs:{real:d,imag:c},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),h}if(s.dtype==="complex64"){const c=mu({inputs:{input:s},backend:t}),d=Yo({inputs:{x:c},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(c),d}if(!XT(s.dtype,i)){const c=la({inputs:{x:s},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:i}}const a=t.data.get(s.dataId).values,[o,l,u]=$$(a,s.shape,s.dtype,i);return t.makeTensorInfo(o,l,u)}const ire={kernelName:kd,backendName:"cpu",kernelFunc:Yo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(n,e,t,r){return t==null?({inputs:s,backend:i})=>{const{a,b:o}=s,l=i;Pe([a,o],n);const u=l.data.get(a.dataId).values,c=l.data.get(o.dataId).values,d=a.dtype==="string"?Ba(u):u,h=a.dtype==="string"?Ba(c):c,p=r||a.dtype,[g,f]=e(a.shape,o.shape,d,h,p);return l.makeTensorInfo(f,p,g)}:({inputs:s,backend:i})=>{const{a,b:o}=s,l=i;if(a.dtype==="complex64"||o.dtype==="complex64"){const u=Yo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),d=c.complexTensorInfos.real,h=c.complexTensorInfos.imag,p=l.data.get(d.dataId).values,g=l.data.get(h.dataId).values,f=Yo({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(f.dataId),y=m.complexTensorInfos.real,b=m.complexTensorInfos.imag,x=l.data.get(y.dataId).values,v=l.data.get(b.dataId).values,[w,T,k]=t(a.shape,o.shape,p,g,x,v),S=l.makeTensorInfo(k,"float32",w),C=l.makeTensorInfo(k,"float32",T),_=rs({inputs:{real:S,imag:C},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(f),l.disposeIntermediateTensorInfo(S),l.disposeIntermediateTensorInfo(C),_}else{const u=l.data.get(a.dataId).values,c=l.data.get(o.dataId).values,d=r||a.dtype,[h,p]=e(a.shape,o.shape,u,c,d);return l.makeTensorInfo(p,d,h)}}}function p_(n){return(e,t,r,s,i,a)=>{const o=qe(e,t),l=ie(o),u=o.length,c=We(o),d=Vn("float32",l),h=Vn("float32",l),p=du(e,o),g=du(t,o),f=Va(r,s),m=Va(i,a),y=e.length,b=We(e),x=t.length,v=We(t);if(p.length+g.length===0)for(let w=0;w<d.length;w++){const T=w%f.length,k=w%m.length,S=n(f[T*2],f[T*2+1],m[k*2],m[k*2+1]);d[w]=S.real,h[w]=S.imag}else for(let w=0;w<d.length;w++){const T=_u(w,u,c),k=T.slice(-y);p.forEach(P=>k[P]=0);const S=bi(k,y,b),C=T.slice(-x);g.forEach(P=>C[P]=0);const _=bi(C,x,v),z=n(f[S*2],f[S*2+1],m[_*2],m[_*2+1]);d[w]=z.real,h[w]=z.imag}return[d,h,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F$=yn((n,e)=>n+e),are=p_((n,e,t,r)=>({real:n+t,imag:e+r})),ud=zn(Mu,F$,are),ore={kernelName:Mu,backendName:"cpu",kernelFunc:ud};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f_(n,e,t,r,s){const i=ie(r),a=sr(s,t);for(let o=0;o<n.length;o++){const l=n[o];if(l<0)throw new Error("Input x must be non-negative!");l>=s||(i>0?a[l]+=e[o]:a[l]+=1)}return a}function G$(n,e,t,r=!1){const s=n.shape[0],i=n.shape[1],a=rt([s,t],e.dtype);for(let o=0;o<s;o++)for(let l=0;l<i;l++){const u=n.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(r?a.set(1,o,u):e.size>0?a.set(a.get(o,u)+e.get(o,l),o,u):a.set(a.get(o,u)+1,o,u))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O$=yn((n,e)=>n&e),lre=zn(Of,O$),ure={kernelName:Of,backendName:"cpu",kernelFunc:lre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(n){return(e,t,r)=>{const s=ln(t,e.length);for(let i=0;i<e.length;++i)s[i]=n(e[i],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(n,e,t){const r=da(e);return ul(n,r,t)}function ul(n,e,t){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;Pe(a,n);const o=i,l=o.data.get(a.dataId).values;let u;if(a.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Ba(l)}else u=l;const c=t||a.dtype,d=e(u,c,s);return o.makeTensorInfo(a.shape,c,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W$=da(n=>Math.ceil(n)),cre=ul(Cd,W$),dre={kernelName:Cd,backendName:"cpu",kernelFunc:cre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n,e,t,r){const s=ln(t,ie(e));if(r&&t!=="string"){let i=0;n.forEach(a=>{const o=ie(a.shape);s.set(a.vals,i),i+=o})}else{let i=0;n.forEach(a=>{const o=t==="string"?Ba(a.vals):a.vals;let l=0;for(let u=0;u<a.shape[0];++u){const c=u*e[1]+i;for(let d=0;d<a.shape[1];++d)s[c+d]=o[l++]}i+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B$=yn((n,e)=>n===e?1:0),X$=zn(Yf,B$,null,"bool"),hre={kernelName:Yf,backendName:"cpu",kernelFunc:X$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U$=da(n=>Math.exp(n)),Z$=ul(Ad,U$,"float32"),pre={kernelName:Ad,backendName:"cpu",kernelFunc:Z$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H$=da(n=>Math.expm1(n)),fre=ul(zd,H$),mre={kernelName:zd,backendName:"cpu",kernelFunc:fre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K$=da(n=>Math.floor(n)),gre=ul(Dd,K$),yre={kernelName:Dd,backendName:"cpu",kernelFunc:gre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y$=yn((n,e)=>Math.floor(n/e)),bre=zn(Pd,Y$,null,"int32"),xre={kernelName:Pd,backendName:"cpu",kernelFunc:bre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n,e,t,r,s,i,a,o,l){const u=rt([r,i],t);for(let c=0;c<r;c++){const d=[];let h=0;for(let p=0;p<s;p++){const g=n[c*s+p];h+=g*a[p],d.push(g)}if(h<0||h>=l/i)throw new Error(`Invalid indices: ${d} does not index into ${o}`);for(let p=0;p<i;p++)u.values[c*i+p]=e.get(...e.indexToLoc(h*i+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n,e,t){const r=rt(t,n.dtype);for(let s=0;s<r.size;++s){const i=r.indexToLoc(s).slice(),a=i[0],o=i[2],l=e.locToIndex([a,o]);i[2]=e.values[l];const u=n.locToIndex(i);0<=u&&u<n.values.length&&(r.values[s]=n.values[u])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J$=yn((n,e)=>n>e?1:0),vre=zn(qf,J$,null,"bool"),wre={kernelName:qf,backendName:"cpu",kernelFunc:vre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q$=yn((n,e)=>n>=e?1:0),Sre=zn($d,q$,null,"bool"),Tre={kernelName:$d,backendName:"cpu",kernelFunc:Sre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eF=yn((n,e)=>n<e?1:0),Ire=zn(tm,eF,null,"bool"),kre={kernelName:tm,backendName:"cpu",kernelFunc:Ire};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tF=yn((n,e)=>n<=e?1:0),Cre=zn(nm,tF,null,"bool"),_re={kernelName:nm,backendName:"cpu",kernelFunc:Cre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF(n,e,t){const r=(e-n)/(t-1),s=sr(t,"float32");s[0]=n;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rF=da(n=>Math.log(n)),Mre=ul(Vd,rF),Nre={kernelName:Vd,backendName:"cpu",kernelFunc:Mre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(n,e,t,r){const s=Vn(r,ie(t));for(let i=0;i<s.length;++i){const a=i*e;let o=n[a];for(let l=0;l<e;++l){const u=n[a+l];(Number.isNaN(u)||u>o)&&(o=u)}s[i]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iF=yn((n,e)=>Math.max(n,e)),Ere=zn(Xd,iF),Rre={kernelName:Xd,backendName:"cpu",kernelFunc:Ere};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aF=yn((n,e)=>Math.min(n,e)),Lre=zn(Ud,aF),Are={kernelName:Ud,backendName:"cpu",kernelFunc:Lre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m_=yn((n,e)=>n*e),zre=p_((n,e,t,r)=>({real:n*t-e*r,imag:n*r+e*t})),Pv=zn(Hd,m_,zre),Dre={kernelName:Hd,backendName:"cpu",kernelFunc:Pv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(n,e,t){const r=Ha(-1,t);return m_([],e,r,n,t)}function Pre(n){const{inputs:e,backend:t}=n,{x:r}=e;Pe(r,"neg");const s=t.data.get(r.dataId).values,[i,a]=oF(s,r.shape,r.dtype);return t.makeTensorInfo(a,r.dtype,i)}const $re={kernelName:pm,backendName:"cpu",kernelFunc:Pre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lF=yn((n,e)=>n!==e?1:0),Fre=zn(fm,lF,null,"bool"),Gre={kernelName:fm,backendName:"cpu",kernelFunc:Fre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(n,e,t,r,s){const i=e.length,a=ie(e),o=We(e),l=We(s),u=Vn(t,ie(s));for(let c=0;c<a;++c){const d=_u(c,i,o),h=new Array(d.length);for(let g=0;g<h.length;g++)h[g]=d[r[g]];const p=bi(h,i,l);u[p]=n[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hr(n){const{inputs:e,attrs:t,backend:r}=n,{x:s}=e,{perm:i}=t;Pe(s,"transpose");const a=s.shape.length,o=new Array(a);for(let c=0;c<o.length;c++)o[c]=s.shape[i[c]];const l=r.data.get(s.dataId).values,u=g_(l,s.shape,s.dtype,i,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const Ore={kernelName:Xl,backendName:"cpu",kernelFunc:Hr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n,e,t,r){const[s,i]=Un(n,r),a=Vr(e,"int32"),o=sr(ie(s),a),l=ie(i);for(let u=0;u<o.length;++u){const c=u*l;let d=1;for(let h=0;h<l;++h)d*=t[c+h];o[u]=d}return{outVals:o,outShape:s,outDtype:a}}function Wre(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;Pe(s,"prod");const o=s.shape.length,l=lt(i,s.shape),u=rn(l,o);let c=l,d=s;const h=[];u!=null&&(d=Hr({inputs:{x:s},backend:t,attrs:{perm:u}}),h.push(d),c=mn(c.length,o));const p=t.data.get(d.dataId).values,{outVals:g,outShape:f,outDtype:m}=uF(d.shape,d.dtype,p,c);let y=f;return a&&(y=fn(f,l)),h.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(y,m,g)}const Vre={kernelName:vm,backendName:"cpu",kernelFunc:Wre};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bre(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const i=_u(s,e.length,We(e)).join(",");throw new Error(`indices[${i}] = ${r} is not in [0, ${t})`)}})}function Xre(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let i=1;i<r.length;++i)if(r[i-1]>r[i])throw new Error("Ragged splits must be sorted in ascending order")}}function Ure(n,e,t,r){const s=[];let i=0;const a=e.length-1+t.length,o=new Array(a).fill(null).map(()=>[0]);Xre(t,r);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let d=1;d<l+1;++d)o[u].push(d*c)}for(let u=0;u<n.length;++u){let c=n[u],d=n[u]+1;for(let h=0;h<t.length;++h){const p=t[h],g=h+e.length-1;if(g>=0){const f=o[g],m=f[f.length-1]-p[c];for(let y=c;y<d;++y)o[g].push(p[y+1]+m)}c=p[c],d=p[d]}d!==c&&(s.push([c,d]),i+=d-c)}return{outSplits:o,valueSlices:s,numValues:i}}function Zre(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=ln("int32",r);e.push(s),n[t].forEach((i,a)=>s[a]=i)}return e}function k3(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function Hre(n,e,t,r,s,i){const a=k3(e,2)[1],o=k3(i,2)[1];let l=0;for(const u of t)for(let c=u[0];c<u[1];++c){for(let d=0;d<r;++d)s[l*o+d]=n[c*a+d];++l}}function Kre(n,e,t,r,s){const i=e.slice();i[0]=s;const a=ln(t,ie(i)),o=n.length,l=o===0?0:o/e[0];return Hre(n,e,r,l,a,i),[a,i]}function cF(n,e,t,r,s,i,a,o){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(Bre(i,a,l),r.length===0)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:c,valueSlices:d,numValues:h}=Ure(i,a,n,u),p=Zre(c),g=Kre(t,r,s,d,h);return[p,g[0],g[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C3=2147483647;function dF(n,e,t,r,s,i,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,l=s.length===0,u=a.length===0,c=[];o||c.push(e[0]),l||c.push(s[0]),u||c.push(a[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const d=c.length===0?1:c[0],h=ln("int32",d+1);h[0]=0;for(let m=0;m<d;++m){const y=o?n[0]:n[m],b=l?r[0]:r[m],x=u?i[0]:i[m];if(x===0)throw new Error("Requires delta != 0");let v;if(x>0&&b<y||x<0&&b>y)v=0;else if(v=Math.ceil(Math.abs((b-y)/x)),v>C3)throw new Error(`Requires ((limit - start) / delta) <= ${C3}`);h[m+1]=h[m]+v}const p=h[d],g=ln(t,p);let f=0;for(let m=0;m<d;++m){const y=h[m+1]-h[m];let b=o?n[0]:n[m];const x=u?i[0]:i[m];for(let v=0;v<y;++v)g[f++]=b,b+=x}return[h,g]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Os=pi;class W0{constructor(e,t,r,s,i,a,o,l,u,c){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=i,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=YD(c),this.raggedRank=jD(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Os.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Os.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Os.VALUE_ROWIDS:return W0.getMaxWidthValueRowID(t);case Os.ROW_SPLITS:return W0.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Os[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const i=e[s+1]-e[s];i>r&&(r=i)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],i=0;for(let a=1;a<t;++a){const o=e[a];o!==s&&(s=o,i=Math.max(a-r,i),r=a)}return Math.max(t-r,i)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return M3(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;QD(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=KD(this.raggedRank,s,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),i=[];let a=0;for(let o=0;o<s;++o,a+=t)i.push(a);for(let o=s;o<e;++o)i.push(-1);return M(i.length===e,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(e,t,r,s){const i=e.length,a=[];for(let o=0;o<i-1;++o){const l=e[o+1]-e[o];let u=Math.min(s,l),c=t[o];c===-1&&(u=0);for(let d=0;d<u;++d)a.push(c),c+=r;for(let d=0;d<l-u;++d)a.push(-1)}if(i>0&&a.length!==e[i-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,s){const i=e.length,a=[];if(i===0)return[];let o=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];a.push(u);for(let c=1;c<i;++c){const d=e[c];if(d===l)u>=0&&(++o,o<s?u+=r:u=-1);else{if(o=0,l=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);u=t[d]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,s){const i=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Os.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,r,s);case Os.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,r,s);default:throw new Error(`Unsupported partition type: ${Os[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Os.FIRST_DIM_SIZE:return e[0];case Os.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Os.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Os[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let a=r.length-2;a>=0;--a)r[a]=r[a+1]*t[a+1];const s=M3(t,!1),i=ln(this.valuesDType,ie(s));if(r[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,r[0],t[0]);for(let o=1;o<=this.raggedRank;++o)a=this.calculateOutputIndex(o-1,a,r[o],t[o]);this.setOutput(this.raggedRank,a,i,s)}return[s,i]}setOutput(e,t,r,s){if(r.length===0)return;const i=this.values,a=r;let o=s.slice();o=o.slice(e+1);const l=ie(o),u=t.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const g=this.defaultValueShape;j(()=>{const f=H(c,g);c=Ul(f,o).dataSync()})}let d=0,h=0,p=0;for(let g=0;g<=u;++g){let f=g<u?t[g]:-1;if(f===p){++p;continue}if(h<p){const m=i.subarray(d*l),y=a.subarray(h*l),b=(p-h)*l;_3(y,m,b)}if(g>=u){const m=r.length;f=Math.floor(m/l)}if(f>p)if(this.defaultValue.length===1)a.subarray(p*l,f*l).fill(this.defaultValue[0]),p=f;else for(;f>p;){const m=a.slice(p*l);_3(m,c,l),++p}f<0?(d=g+1,h=p):(d=g,h=p,p=h+1)}}}function _3(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function M3(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function hF(n,e,t,r,s,i,a,o,l,u){return new W0(n,e,t,r,s,i,a,o,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n,e,t,r){const s=n===e,i=n<e&&t<0,a=e<n&&t>1;if(s||i||a)return sr(0,r);const o=Math.abs(Math.ceil((e-n)/t)),l=sr(o,r);e<n&&t===1&&(t=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fF=da(n=>1/Math.sqrt(n)),Yre=ul(qd,fF),jre={kernelName:qd,backendName:"cpu",kernelFunc:Yre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(n,e,t,r,s,i,a,o,l,u){const c=[r/s,s],d=n.values,h=e.values;if(r===0)return rt(t,e.dtype);const p=l instanceof In?l:rt(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let g=0;g<i;g++){const f=[];let m=0;for(let y=0;y<a;y++){const b=d[g*a+y];f.push(b),m+=b*o[y]}if(m<0||m>=r/s)throw new Error(`Invalid indices: ${f} does not index into ${t}`);for(let y=0;y<s;y++)u?p.values[m*s+y]+=h[g*s+y]:p.values[m*s+y]=e.rank===0?h[0]:h[g*s+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qre=da(n=>1/(1+Math.exp(-n))),mF=Rt(sh,n=>1/(1+Math.exp(-n))),Jre={kernelName:sh,backendName:"cpu",kernelFunc:mF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(n,e,t,r,s){const i=bk(r,e,t),a=ie(t),o=We(r);if(i){const d=xk(e,o);return s==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const l=s==="string"?Ba(n):n,u=rt(r,s,l),c=rt(t,s);for(let d=0;d<c.size;++d){const h=c.indexToLoc(d),p=h.map((g,f)=>g+e[f]);c.set(u.get(...p),...h)}return s==="string"?yP(c.values):c.values}function gu(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,size:a}=r;Pe(s,"slice");const[o,l]=cv(s,i,a);gk(s,o,l);const u=t.data.get(s.dataId).values,c=gF(u,o,l,s.shape,s.dtype);return t.makeTensorInfo(l,s.dtype,c)}const qre={kernelName:Cm,backendName:"cpu",kernelFunc:gu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(n,e,t,r,s,i,a){const o=e[0],l=i[0],u=new Array(l),c=new Array(o),d=e[1];if(l===0){if(o!==0)throw new Error(sP(o));const m=ln(t,0),y=ln(s,0);return[m,[0,d],y,u,c]}let h=!0,p=0;const g=new Array(l).fill(0);for(let m=0;m<o;++m){const y=n[m*d];if(y<0)throw new Error(iP(m,y));if(y>=l)throw new Error(aP(m,y,l));++g[y],h=h&&y>=p,p=y}let f=!0;for(let m=0;m<l;++m){const y=g[m]===0;u[m]=y,f=f&&!y,g[m]=Math.max(g[m],1),m>0&&(g[m]+=g[m-1])}if(f&&h){const m=n,y=r;for(let b=0;b<o;++b)c[b]=b;return[m,[o,d],y,u,c]}else{const m=g[l-1],y=ln(t,m*d),b=ln(s,m),x=new Array(l).fill(0);for(let v=0;v<o;++v){const w=n[v*d],T=x[w],k=(w===0?0:g[w-1])+T;x[w]++;for(let S=0;S<d;++S)y[k*d+S]=n[v*d+S];b[k]=r[v],c[v]=k}for(let v=0;v<l;++v)if(x[v]===0){const w=v===0?0:g[v-1];y[w*d+0]=v;for(let T=1;T<d;++T)y[w*d+T]=0;b[w]=a}return[y,[m,d],b,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n,e,t,r,s){const i=ie(r),a=e[0],o=s.length,l=[];let u=1,c=-1;for(let f=0;f<o;++f){const m=s[f];if(m===-1){if(c!==-1)throw new Error(oP(c,f));c=f,l.push(1)}else{if(m<0)throw new Error(lP(f,m));u*=m,l.push(m)}}if(c!==-1){if(u<=0)throw new Error(uP());const f=Math.trunc(i/u);if(u*f!==i)throw new Error(cP(r,l));l[c]=f}if(ie(l)!==i)throw new Error(dP(r,l));const d=r.length,h=[];if(d>0){h[d-1]=1;for(let f=d-2;f>=0;--f)h[f]=h[f+1]*r[f+1]}const p=[];if(o>0){p[o-1]=1;for(let f=o-2;f>=0;--f)p[f]=p[f+1]*l[f+1]}const g=ln(t,a*o);for(let f=0;f<a;++f){let m=0;for(let y=0;y<d;++y)m+=n[f*d+y]*h[y];for(let y=0;y<o;++y)g[f*o+y]=Math.trunc(m/p[y]),m%=p[y]}return[g,[a,o],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(n,e,t,r,s,i=!1,a=0){const o=r.length,l=[e[0],n.length/e[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error(n2());const d=e.slice();d[0]=c;const h=d.reduce((b,x)=>b*x,1),p=ln(t,h);if(o===0)return c>0&&p.fill(a),[p,d];if(c<=0)throw new Error(n2());let g=0,f=1,m=0,y=s[g];for(;;){let b=0;if(f<o){if(b=s[f],y===b){++f;continue}if(y>=b)throw new Error(hP())}if(y<0||y>=c)throw new Error(pP(y,c));y>m&&p.fill(a,m*u,y*u);for(let x=g;x<f;++x){const v=r[x];if(v<0||v>=l[0])throw new Error(fP(x,r[x],l[0]));for(let w=0;w<u;w++)p[y*u+w]+=n[v*u+w]}if(i)for(let x=0;x<u;x++)p[y*u+x]/=f-g;if(g=f,++f,m=y+1,y=b,f>o)break}return m<c&&p.fill(a,m*u,c*u),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ese=da(n=>Math.sqrt(n)),tse=Rt(ah,n=>Math.sqrt(n)),nse={kernelName:ah,backendName:"cpu",kernelFunc:tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xF=yn((n,e)=>{const t=n-e;return t*t}),rse=zn(oh,xF),sse={kernelName:oh,backendName:"cpu",kernelFunc:rse};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vF=da((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:s}=e;return n.replace(new RegExp(t,r?"g":""),s)}),ise=ul(Rm,vF),ase={kernelName:Rm,backendName:"cpu",kernelFunc:ise};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(n,e,t,r){const s=rt(n,e.dtype);for(let i=0;i<s.size;i++){const a=s.indexToLoc(i),o=new Array(a.length);for(let l=0;l<o.length;l++)o[l]=a[l]*t[l]+r[l];s.set(e.get(...o),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ose{constructor(e,t,r,s,i,a){this.separator=ta(e),this.nGramWidths=t,this.leftPad=ta(r),this.rightPad=ta(s),this.padWidth=i,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,i,a){for(let o=0;o<i;++o){const l=this.getPadWidth(a),u=Math.max(0,l-o),c=Math.max(0,l-(i-(o+1))),d=a-(u+c),h=t+(u>0?0:o-l);let p=0;p+=u*this.leftPad.length;for(let b=0;b<d;++b)p+=e[h+b].length;p+=c*this.rightPad.length;const g=u+c+d-1;p+=g*this.separator.length,r[s+o]=new Uint8Array(p);const f=r[s+o];let m=0;const y=b=>b.forEach(x=>f[m++]=x);for(let b=0;b<u;++b)y(this.leftPad),y(this.separator);for(let b=0;b<d-1;++b)y(e[h+b]),y(this.separator);if(d>0){y(e[h+d-1]);for(let b=0;b<c;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<c-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<s;++u){let c=t[u]>=l;if(c=c&&t[u]<=r,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${r}]`);l=t[u]}if(l!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${l}`)}const i=s-1,a=ln("int32",s);if(r===0||s===0){const l=new Array(r);for(let u=0;u<=i;++u)a[u]=0;return[l,a]}a[0]=0;for(let l=1;l<=i;++l){const u=t[l]-t[l-1];let c=0;this.nGramWidths.forEach(d=>{c+=this.getNumNGrams(u,d)}),this.preserveShort&&u>0&&c===0&&(c=1),a[l]=a[l-1]+c}const o=new Array(a[i]);for(let l=0;l<i;++l){const u=t[l];let c=a[l];if(this.nGramWidths.forEach(d=>{const h=t[l+1]-t[l],p=this.getNumNGrams(h,d);this.createNGrams(e,u,o,c,p,d),c+=p}),this.preserveShort&&c===a[l]){const d=t[l+1]-t[l];if(d===0)continue;const h=d+2*this.padWidth;this.createNGrams(e,u,o,c,1,h)}}return[o,a]}}function SF(n,e,t,r,s,i,a,o){return new ose(t,r,s,i,a,o).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lse(n,e,t,r){if(!n.length)return;if(e.length===0){for(let i=0;i<n.length;++i)r.push(n.subarray(i,i+1));return}if(e.length===1){const i=e[0];let a=n.indexOf(i);for(;a!==-1;){const o=n.subarray(0,a);(!t||o.length!==0)&&r.push(o),n=n.subarray(a+1),a=n.indexOf(i)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let i=0;i<n.length+1;i++)if(i===n.length||e.indexOf(n[i])!==-1){const a=n.subarray(s,i);(!t||a.length!==0)&&r.push(a),s=i+1}}function TF(n,e,t){const r=n.length,s=[];let i=0,a=0;const o=new Array(r);for(let h=0;h<r;++h){const p=s.length;lse(n[h],e,t,s);const g=s.length-p;o[h]=g,i+=g,a=Math.max(a,g)}const l=ln("int32",i*2),u=new Array(i),c=[r,a];let d=0;for(let h=0;h<r;++h)for(let p=0;p<o[h];++p)l[d*2]=h,l[d*2+1]=p,u[d]=s[d],++d;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(n,e){const t=ln("int32",n.length);for(let r=0;r<n.length;++r)t[r]=Gz(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kF=yn((n,e)=>n-e),use=p_((n,e,t,r)=>({real:n-t,imag:e-r})),b_=zn(lh,kF,use),cse={kernelName:lh,backendName:"cpu",kernelFunc:b_};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=rt(t,n.dtype);for(let s=0;s<r.values.length;++s){const i=r.indexToLoc(s),a=new Array(n.rank);for(let l=0;l<a.length;l++)a[l]=i[l]%n.shape[l];const o=n.locToIndex(a);r.values[s]=n.values[o]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mp=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function _F(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const o=r-t+1,l=e-t+1,u=Math.log(o),c=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*c*(o-c)/o)*Math.sign(l-o/2),h=Math.max(t,Math.floor(e-l*c/o+d)),p=Math.min(r,Math.floor(e+(o-l)*c/o+d));_F(n,e,h,p)}const s=n[e];let i=t,a=r;for(Ia(n,t,e),mp(n[r],s)>0&&Ia(n,t,r);i<a;){for(Ia(n,i,a),i++,a--;mp(n[i],s)<0;)i=i+1;for(;mp(n[a],s)>0;)a=a-1}mp(n[t],s)===0?Ia(n,t,a):(a=a+1,Ia(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function MF(n,e,t,r,s){const i=e[e.length-1],[a,o]=[n.length/i,i],l=Vn(t,a*r),u=Vn("int32",a*r);for(let d=0;d<a;d++){const h=d*o,p=n.subarray(h,h+o);let g=new Array(p.length);p.forEach((b,x)=>g[x]={value:b,index:x}),r<g.length&&(_F(g,r),g=g.slice(0,r)),s&&g.sort(mp);const f=d*r,m=l.subarray(f,f+r),y=u.subarray(f,f+r);for(let b=0;b<r;b++)m[b]=g[b].value,y[b]=g[b].index}const c=e.slice();return c[c.length-1]=r,[rt(c,t,l),rt(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(n,e,t,r){const s=lt(e,t)[0],i=[1,t[0],1];for(let g=0;g<s;g++)i[0]*=t[g];i[1]=t[s];for(let g=s+1;g<t.length;g++)i[2]*=t[g];const a=new Map,o=new Int32Array(t[s]),l=new In(i,r,n),u=[],c=i[0]===1&&i[2]===1;for(let g=0;g<t[s];g++){let f;if(c)f=n[g].toString();else{const y=[];for(let b=0;b<i[0];b++)for(let x=0;x<i[2];x++)y.push(l.get(b,g,x));f=y.join(",")}const m=a.get(f);if(m!=null)o[g]=m;else{const y=a.size;a.set(f,y),o[g]=y,u.push(g)}}const d=i.slice();d[1]=a.size;const h=new In(d,r);u.forEach((g,f)=>{for(let m=0;m<i[0];m++)for(let y=0;y<i[2];y++)h.set(l.get(m,g,y),m,f,y)});const p=t.slice();return p[s]=d[1],{outputValues:h.values,outputShape:p,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EF=Object.freeze(Object.defineProperty({__proto__:null,addImpl:F$,bincountImpl:f_,bincountReduceImpl:G$,bitwiseAndImpl:O$,castImpl:$$,ceilImpl:W$,concatImpl:V$,equalImpl:B$,expImpl:U$,expm1Impl:H$,floorDivImpl:Y$,floorImpl:K$,gatherNdImpl:j$,gatherV2Impl:Q$,greaterEqualImpl:q$,greaterImpl:J$,lessEqualImpl:tF,lessImpl:eF,linSpaceImpl:nF,logImpl:rF,maxImpl:sF,maximumImpl:iF,minimumImpl:aF,multiplyImpl:m_,negImpl:oF,notEqualImpl:lF,prodImpl:uF,raggedGatherImpl:cF,raggedRangeImpl:dF,raggedTensorToTensorImpl:hF,rangeImpl:pF,rsqrtImpl:fF,scatterImpl:Gl,sigmoidImpl:Qre,simpleAbsImpl:P$,sliceImpl:gF,sparseFillEmptyRowsImpl:yF,sparseReshapeImpl:bF,sparseSegmentReductionImpl:y_,sqrtImpl:ese,squaredDifferenceImpl:xF,staticRegexReplaceImpl:vF,stridedSliceImpl:wF,stringNGramsImpl:SF,stringSplitImpl:TF,stringToHashBucketFastImpl:IF,subImpl:kF,tileImpl:CF,topKImpl:MF,transposeImpl:g_,uniqueImpl:NF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */qT("cpu",()=>new fg,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF=Rt(Rd,n=>n>=0?n:Math.exp(n)-1),dse={kernelName:Rd,backendName:"cpu",kernelFunc:RF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:i}=r;Pe([s],"leakyRelu");const a=ie(s.shape),o=t.data.get(s.dataId).values,l=Vn("float32",a);for(let u=0;u<o.length;u++)l[u]=o[u]<0?i*o[u]:o[u];return t.makeTensorInfo(s.shape,"float32",l)}const hse={kernelName:em,backendName:"cpu",kernelFunc:LF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pse=yn((n,e)=>n<0?e*n:n);function AF(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e;Pe([r,s],"prelu");const i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,[o,l]=pse(r.shape,s.shape,i,a,"float32");return t.makeTensorInfo(l,"float32",o)}const fse={kernelName:xm,backendName:"cpu",kernelFunc:AF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zF=Rt(jd,n=>Math.max(0,n)),mse={kernelName:jd,backendName:"cpu",kernelFunc:zF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF=Rt(Qd,n=>Math.min(Math.max(0,n),6)),gse={kernelName:Qd,backendName:"cpu",kernelFunc:DF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0(n,e,t,r,s){if(t==="linear")return la({inputs:{x:e},backend:n});if(t==="relu")return zF({inputs:{x:e},backend:n});if(t==="elu")return RF({inputs:{x:e},backend:n});if(t==="relu6")return DF({inputs:{x:e},backend:n});if(t==="prelu")return AF({inputs:{x:e,alpha:r},backend:n});if(t==="leakyrelu")return LF({inputs:{x:e},backend:n,attrs:{alpha:s}});if(t==="sigmoid")return mF({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ot(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:i}=r,a=ie(s.shape),o=BT(i,a),l=ie(o);M(a===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(s.dataId);const u=t.data.get(s.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;c.shape=o,d.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const yse={kernelName:wm,backendName:"cpu",kernelFunc:Ot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;Pe([s,i],"matMul");const l=s.shape.length,u=i.shape.length,c=a?s.shape[l-2]:s.shape[l-1],d=o?i.shape[u-1]:i.shape[u-2],h=a?s.shape[l-1]:s.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],g=s.shape.slice(0,-2),f=i.shape.slice(0,-2),m=ie(g),y=ie(f),b=qe(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([h,p]);M(c===d,()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`);const x=a?[m,c,h]:[m,h,c],v=o?[y,p,d]:[y,d,p],w=Ot({inputs:{x:s},backend:t,attrs:{shape:x}}),T=Ot({inputs:{x:i},backend:t,attrs:{shape:v}}),k=a?w.shape[1]:w.shape[2],S=a?w.shape[2]:w.shape[1],C=o?T.shape[1]:T.shape[2],_=Math.max(m,y),z=t.data.get(w.dataId).values,P=t.data.get(T.dataId).values,R=We(w.shape),A=We(T.shape),[F,B,K]=a?[R[0],1,R[1]]:[R[0],R[1],1],[L,O,U]=o?[1,A[1],A[0]]:[A[1],1,A[0]],ee=S*C,G=rt([_,S,C],w.dtype),Q=G.values,ne=t.blockSize;for(let X=0;X<_;X++){const ue=X%m,le=X%y;for(let pe=0;pe<S;pe+=ne){const ge=Math.min(pe+ne,S);for(let be=0;be<C;be+=ne){const Me=Math.min(be+ne,C);for(let Re=0;Re<k;Re+=ne){const Xe=Math.min(Re+ne,k);for(let st=pe;st<ge;st++)for(let ct=be;ct<Me;ct++){let it=0;for(let at=Re;at<Xe;at++){const et=z[ue*F+st*B+at*K],kt=P[at*L+ct*O+le*U];it+=et*kt}Q[X*ee+(st*C+ct)]+=it}}}}}return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(T),t.makeTensorInfo(b,G.dtype,G.values)}const bse={kernelName:Ff,backendName:"cpu",kernelFunc:PF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xse(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;let h,p,g;const f=[];h=PF({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:t}),a&&(p=ud({inputs:{a:h,b:a},backend:t}),f.push(h),h=p),c&&(g=V0(t,h,c,o,d),f.push(h),h=g);for(const m of f)t.disposeIntermediateTensorInfo(m);return h}const vse={kernelName:sf,backendName:"cpu",kernelFunc:xse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wse=Rt(bd,n=>Math.acos(n)),Sse={kernelName:bd,backendName:"cpu",kernelFunc:wse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tse=Rt(xd,n=>Math.acosh(n)),Ise={kernelName:xd,backendName:"cpu",kernelFunc:Tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kse(n){const{inputs:e,backend:t}=n,r=e;Pe(e,"addN");const s=r.map(o=>t.data.get(o.dataId).values),i=rt(r[0].shape,r[0].dtype),a=i.values;for(let o=0;o<r.length;o++){const l=s[o];for(let u=0;u<a.length;u++)a[u]+=l[u]}return t.makeTensorInfo(i.shape,i.dtype,i.values)}const Cse={kernelName:Af,backendName:"cpu",kernelFunc:kse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _se(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;Pe(s,"all");const o=lt(i,s.shape);let l=o;const u=rn(l,s.shape.length);let c=s;u!=null&&(c=Hr({inputs:{x:s},backend:t,attrs:{perm:u}}),l=mn(l.length,s.shape.length)),lr("all",l,c.shape.length);const[d,h]=Un(c.shape,l),p=ie(h),g=sr(ie(d),c.dtype),f=t.data.get(c.dataId).values;for(let y=0;y<g.length;++y){const b=y*p;let x=f[b];for(let v=0;v<p;++v){const w=f[b+v];x=x&&w}g[y]=x}u!=null&&t.disposeIntermediateTensorInfo(c);const m=t.makeTensorInfo(d,c.dtype,g);if(a){const y=fn(d,o),b=Ot({inputs:{x:m},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(m),b}return m}const Mse={kernelName:Sb,backendName:"cpu",kernelFunc:_se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nse(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;Pe(s,"any");const o=lt(i,s.shape);let l=o;const u=rn(l,s.shape.length);let c=s;u!=null&&(c=Hr({inputs:{x:s},backend:t,attrs:{perm:u}}),l=mn(l.length,s.shape.length)),lr("any",l,c.shape.length);const[d,h]=Un(c.shape,l),p=ie(h),g=sr(ie(d),c.dtype),f=t.data.get(c.dataId).values;for(let y=0;y<g.length;++y){const b=y*p;let x=f[b];for(let v=0;v<p;++v){const w=f[b+v];x=x||w}g[y]=x}u!=null&&t.disposeIntermediateTensorInfo(c);const m=t.makeTensorInfo(d,c.dtype,g);if(a){const y=fn(d,o),b=Ot({inputs:{x:m},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(m),b}return m}const Ese={kernelName:Tb,backendName:"cpu",kernelFunc:Nse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rse(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;Pe(s,"argMax");let a=lt(i,s.shape);const o=rn(a,s.shape.length);let l=s;const u=[];o!=null&&(l=Hr({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=mn(a.length,l.shape.length)),a=[a[0]],lr("argMax",a,l.shape.length);const[c,d]=Un(l.shape,a),h=ie(c),p=sr(h,"int32"),g=ie(d),f=t.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*g;let b=f[y],x=0;for(let v=0;v<g;++v){const w=f[y+v];w>b&&(b=w,x=v)}p[m]=x}return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),t.makeTensorInfo(c,"int32",p)}const Lse={kernelName:zf,backendName:"cpu",kernelFunc:Rse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ase(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;Pe(s,"argMin");let a=lt(i,s.shape);const o=rn(a,s.shape.length);let l=s;const u=[];o!=null&&(l=Hr({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=mn(a.length,l.shape.length)),a=[a[0]],lr("argMin",a,l.shape.length);const[c,d]=Un(l.shape,a),h=ie(c),p=sr(h,"int32"),g=ie(d),f=t.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*g;let b=f[y],x=0;for(let v=0;v<g;++v){const w=f[y+v];w<b&&(b=w,x=v)}p[m]=x}return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),t.makeTensorInfo(c,"int32",p)}const zse={kernelName:Df,backendName:"cpu",kernelFunc:Ase};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dse=Rt(vd,n=>Math.asin(n)),Pse={kernelName:vd,backendName:"cpu",kernelFunc:Dse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $se=Rt(wd,n=>Math.asinh(n)),Fse={kernelName:wd,backendName:"cpu",kernelFunc:$se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gse=Rt(Sd,n=>Math.atan(n)),Ose={kernelName:Sd,backendName:"cpu",kernelFunc:Gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wse=yn((n,e)=>Math.atan2(n,e)),Vse=zn(Id,Wse),Bse={kernelName:Id,backendName:"cpu",kernelFunc:Vse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xse=Rt(Td,n=>Math.atanh(n)),Use={kernelName:Td,backendName:"cpu",kernelFunc:Xse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(n,e,t,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,p=s.padInfo.left,g=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=rt(s.outShape,t),m=f.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let v=0;v<s.batchSize;++v){const w=v*y,T=v*r[0];for(let k=0;k<s.inChannels;++k)for(let S=0;S<s.outHeight;++S){const C=S*a-h,_=Math.max(0,C),z=Math.min(s.inHeight,c+C),P=w+S*b;for(let R=0;R<s.outWidth;++R){const A=R*o-p,F=Math.max(0,A),B=Math.min(s.inWidth,d+A);let K=g,L=0,O=0;for(let ee=_;ee<z;ee+=l){const G=T+ee*r[1];for(let Q=F;Q<B;Q+=u){const ne=G+Q*r[2],X=n[ne+k];i==="max"&&X>K?K=X:i==="avg"&&(L+=X,O++)}if(isNaN(K))break}const U=P+R*x+k;m[U]=i==="avg"?L/O:K}}}return f}function $F(n,e,t,r,s=!1,i=!1){const a=rt(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,g=r.padInfo.left,f=rt(e,t,n);for(let m=0;m<r.batchSize;++m)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){const x=b*o-p;let v=x;for(;v<0;)v+=u;const w=Math.min(r.inHeight,d+x);for(let T=0;T<r.outWidth;++T){const k=T*l-g;let S=k;for(;S<0;)S+=c;const C=Math.min(r.inWidth,h+k);let _=Number.NEGATIVE_INFINITY,z=-1;for(let P=v;P<w;P+=u){const R=P-x;for(let A=S;A<C;A+=c){const F=A-k,B=f.get(m,P,A,y);B>_&&(_=B,s?z=i?((m*r.inHeight+P)*r.inWidth+A)*r.inChannels+y:(P*r.inWidth+A)*r.inChannels+y:z=R*h+F)}}a.set(z,m,b,T,y)}}return a}function FF(n,e,t,r,s,i){const a=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,d=s.dilationWidth,h=s.effectiveFilterDepth,p=s.effectiveFilterHeight,g=s.effectiveFilterWidth,f=s.padInfo.front,m=s.padInfo.top,y=s.padInfo.left,b=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=rt(s.outShape,t),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let C=0;C<s.batchSize;++C){const _=C*w,z=C*r[0];for(let P=0;P<s.inChannels;++P)for(let R=0;R<s.outDepth;++R){const A=R*a-f;let F=A;for(;F<0;)F+=u;const B=Math.min(s.inDepth,h+A),K=_+R*T;for(let L=0;L<s.outHeight;++L){const O=L*o-m;let U=O;for(;U<0;)U+=c;const ee=Math.min(s.inHeight,p+O),G=K+L*k;for(let Q=0;Q<s.outWidth;++Q){const ne=Q*l-y;let X=ne;for(;X<0;)X+=d;const ue=Math.min(s.inWidth,g+ne),le=G+Q*S;let pe=b,ge=0,be=0;for(let Re=F;Re<B;Re+=u){const Xe=z+Re*r[1];for(let st=U;st<ee;st+=c){const ct=Xe+st*r[2];for(let it=X;it<ue;it+=d){const at=ct+it*r[3],et=n[at+P];if(i==="max"&&et>pe?pe=et:i==="avg"&&(ge+=et,be++),isNaN(pe))break}if(isNaN(pe))break}if(isNaN(pe))break}const Me=le+P;v[Me]=i==="avg"?ge/Math.max(be,1):pe}}}}return x}function Zse(n,e){const t=rt(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.front,p=e.padInfo.top,g=e.padInfo.left;for(let f=0;f<e.batchSize;++f)for(let m=0;m<e.inChannels;++m)for(let y=0;y<e.outDepth;++y){const b=y*r-h;let x=b;for(;x<0;)x+=a;const v=Math.min(e.inDepth,u+b);for(let w=0;w<e.outHeight;++w){const T=w*s-p;let k=T;for(;k<0;)k+=o;const S=Math.min(e.inHeight,c+T);for(let C=0;C<e.outWidth;++C){const _=C*i-g;let z=_;for(;z<0;)z+=l;const P=Math.min(e.inWidth,d+_);let R=Number.NEGATIVE_INFINITY,A=-1;for(let F=x;F<v;F+=a){const B=F-b;for(let K=k;K<S;K+=o){const L=K-T;for(let O=z;O<P;O+=l){const U=O-_,ee=n.get(f,F,K,O,m);ee>=R&&(R=ee,A=B*c*d+L*c+U)}}}t.set(A,f,y,w,C,m)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hse(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Pe(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;M(or(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=ti(s.shape,i,a,u,o,l);let d;if(c.filterWidth===1&&c.filterHeight===1&&ht(c.inShape,c.outShape))d=la({inputs:{x:s},backend:t});else{const h=t.data.get(s.dataId).values,p=We(s.shape),g=x_(h,s.shape,s.dtype,p,c,"avg");d=t.makeTensorInfo(c.outShape,s.dtype,g.values)}return d}const Kse={kernelName:Pf,backendName:"cpu",kernelFunc:Hse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yse(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;Pe(s,"avgPool3d");const c=Ka(s.shape,i,a,1,o,l,u),d=t.data.get(s.dataId).values,h=FF(d,s.shape,s.dtype,We(s.shape),c,"avg");return t.makeTensorInfo(h.shape,"float32",h.values)}const jse={kernelName:$f,backendName:"cpu",kernelFunc:Yse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qse(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;Pe([s,i],"avgPool3DGrad");const c=Ka(i.shape,a,o,1,l,u),d=c.strideDepth,h=c.strideHeight,p=c.strideWidth,g=c.filterDepth,f=c.filterHeight,m=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,T=c.effectiveFilterWidth,k=v-1-c.padInfo.front,S=T-1-c.padInfo.left,C=w-1-c.padInfo.top,_=rt(i.shape,"float32"),z=1/(g*f*m),P=t.bufferSync(s);for(let R=0;R<c.batchSize;++R)for(let A=0;A<c.inChannels;++A)for(let F=0;F<c.inDepth;++F)for(let B=0;B<c.inHeight;++B)for(let K=0;K<c.inWidth;++K){const L=F-k,O=B-C,U=K-S;let ee=0;for(let G=0;G<v;G+=y){const Q=(L+G)/d;if(!(Q<0||Q>=c.outDepth||Math.floor(Q)!==Q))for(let ne=0;ne<w;ne+=b){const X=(O+ne)/h;if(!(X<0||X>=c.outHeight||Math.floor(X)!==X))for(let ue=0;ue<T;ue+=x){const le=(U+ue)/p;if(le<0||le>=c.outWidth||Math.floor(le)!==le)continue;const pe=P.get(R,Q,X,le,A);ee+=pe}}}_.set(ee*z,R,F,B,K,A)}return t.makeTensorInfo(_.shape,_.dtype,_.values)}const Jse={kernelName:kb,backendName:"cpu",kernelFunc:Qse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qse(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i;Pe([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=ti(a.shape,o,l,1,u),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,g=c.filterWidth,f=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=rt(a.shape,"float32"),T=1/(p*g),k=t.data.get(s.dataId).values,S=rt(s.shape,"float32",k);for(let C=0;C<c.batchSize;++C)for(let _=0;_<c.inChannels;++_)for(let z=0;z<c.inHeight;++z)for(let P=0;P<c.inWidth;++P){const R=z-v,A=P-x;let F=0;for(let B=0;B<y;B+=f){const K=(R+B)/d;if(!(K<0||K>=c.outHeight||Math.floor(K)!==K))for(let L=0;L<b;L+=m){const O=(A+L)/h;if(O<0||O>=c.outWidth||Math.floor(O)!==O)continue;const U=S.get(C,K,O,_);F+=U}}w.set(F*T,C,z,P,_)}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const eie={kernelName:Ib,backendName:"cpu",kernelFunc:qse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,scale:i,offset:a,mean:o,variance:l}=e;M(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Pe([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;u==null&&(u=.001);const c=t.data.get(s.dataId).values,d=t.data.get(o.dataId).values,h=t.data.get(l.dataId).values,p=i?t.data.get(i.dataId).values:new Float32Array([1]),g=a?t.data.get(a.dataId).values:new Float32Array([0]),f=new Float32Array(c.length),m=g.length,y=p.length,b=h.length,x=d.length;let v=0,w=0,T=0,k=0;for(let S=0;S<c.length;++S)f[S]=g[v++]+(c[S]-d[w++])*p[T++]/Math.sqrt(h[k++]+u),v>=m&&(v=0),w>=x&&(w=0),T>=y&&(T=0),k>=b&&(k=0);return t.makeTensorInfo(s.shape,s.dtype,f)}const nie={kernelName:Qf,backendName:"cpu",kernelFunc:tie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,crops:a}=r;Pe([s],"batchToSpaceND");const o=i.reduce((y,b)=>y*b),l=ng(s.shape,i,o),u=rg(l.length,i.length),c=sg(s.shape,i,o),d=Ik(a,i.length),h=kk(c,a,i.length),p=Ot({inputs:{x:s},backend:t,attrs:{shape:l}}),g=Hr({inputs:{x:p},backend:t,attrs:{perm:u}}),f=Ot({inputs:{x:g},backend:t,attrs:{shape:c}}),m=gu({inputs:{x:f},backend:t,attrs:{begin:d,size:h}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),m}const sie={kernelName:Gf,backendName:"cpu",kernelFunc:rie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a}=r,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,u=f_(o,l,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,u)}const aie={kernelName:Cb,backendName:"cpu",kernelFunc:iie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oie(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,o=qe(Array.from(i),Array.from(a));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const lie={kernelName:_b,backendName:"cpu",kernelFunc:oie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uie=Rt(_d,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),cie={kernelName:_d,backendName:"cpu",kernelFunc:uie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const die=n=>{const{x:e}=n.inputs,t=n.backend,r=new Float32Array(ie(e.shape)),s=t.data.get(e.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=t.data.get(i.dataId).values,l=t.data.get(a.dataId).values;for(let u=0;u<o.length;u++){const c=o[u],d=l[u];r[u]=Math.hypot(c,d)}return t.makeOutput(r,e.shape,"float32")},hie={kernelName:Wf,backendName:"cpu",kernelFunc:die};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cd(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.imag,i=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,i)}const pie={kernelName:Hb,backendName:"cpu",kernelFunc:cd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dd(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,i=lt(s,e[0].shape)[0],a=e.map(f=>f.shape);wk(a,i);let o=ra(e.map(f=>f.shape),i);if(ie(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(f=>ie(f.shape)>0);if(l.length===1)return la({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const f=l.map(v=>mu({inputs:{input:v},backend:t})),m=l.map(v=>cd({inputs:{input:v},backend:t})),y=dd({inputs:f,backend:t,attrs:{axis:i}}),b=dd({inputs:m,backend:t,attrs:{axis:i}}),x=rs({inputs:{real:y,imag:b},backend:t});return f.forEach(v=>t.disposeIntermediateTensorInfo(v)),m.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),x}const u=l.map(f=>{const m=[-1,ie(f.shape.slice(i))];return Ot({inputs:{x:f},backend:t,attrs:{shape:m}})}),c=u.map(f=>({vals:t.data.get(f.dataId).values,shape:f.shape}));o=ra(u.map(f=>f.shape),1);const d=u[0].shape[0]===1,h=V$(c,o,e[0].dtype,d),p=ra(l.map(f=>f.shape),i),g=t.makeTensorInfo(p,e[0].dtype,h);return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),g}const fie={kernelName:Vf,backendName:"cpu",kernelFunc:dd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;Pe([s,i],"conv2d");const d=Ya(l),h=Xn(s.shape,i.shape,a,u,o,c,!1,d),p=h.filterHeight,g=h.filterWidth,f=h.dilationHeight,m=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x=h.dataFormat==="channelsLast",v=new In(h.outShape,s.dtype),w=We(s.shape),T=We(i.shape),k=w[0],S=x?w[1]:w[2],C=x?w[2]:1,_=x?1:w[1],z=v.strides[0],P=x?v.strides[1]:v.strides[2],R=x?v.strides[2]:1,A=x?1:v.strides[1],F=t.data.get(s.dataId).values,B=t.data.get(i.dataId).values,K=v.values;for(let L=0;L<h.batchSize;++L){const O=L*k,U=L*z;for(let ee=0;ee<h.outHeight;++ee){const G=U+ee*P,Q=ee*h.strideHeight-b;for(let ne=0;ne<p;++ne){const X=Q+ne*f;if(X<0||X>=h.inHeight)continue;const ue=ne*T[0],le=O+X*S;for(let pe=0;pe<h.outWidth;++pe){const ge=G+pe*R,be=pe*h.strideWidth-y;for(let Me=0;Me<g;++Me){const Re=be+Me*m;if(Re<0||Re>=h.inWidth)continue;const Xe=ue+Me*T[1],st=le+Re*C;let ct=Xe;for(let it=0;it<h.inChannels;++it){const at=F[st+it*_];for(let et=0;et<h.outChannels;++et)K[ge+et*A]+=at*B[ct+et];ct+=h.outChannels}}}}}}return t.makeTensorInfo(v.shape,v.dtype,K)}const mie={kernelName:Bf,backendName:"cpu",kernelFunc:GF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;Pe([s,i],"conv2dBackpropFilter");const d=Ya(l),h=Xn(s.shape,c,a,1,o,u,!1,d),{strideHeight:p,strideWidth:g,filterHeight:f,filterWidth:m}=h,y=h.dataFormat==="channelsLast",b=new In(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,w=t.data.get(s.dataId).values,T=t.data.get(i.dataId).values,k=new In(s.shape,s.dtype,w),S=new In(i.shape,i.dtype,T);for(let C=0;C<f;++C){const _=Math.max(0,Math.ceil((v-C)/p)),z=Math.min(h.outHeight,(h.inHeight+v-C)/p);for(let P=0;P<m;++P){const R=Math.max(0,Math.ceil((x-P)/g)),A=Math.min(h.outWidth,(h.inWidth+x-P)/g);for(let F=0;F<h.inChannels;++F)for(let B=0;B<h.outChannels;++B){let K=0;for(let L=0;L<h.batchSize;++L)for(let O=_;O<z;++O){const U=C+O*p-v;for(let ee=R;ee<A;++ee){const G=P+ee*g-x;y?K+=k.get(L,U,G,F)*S.get(L,O,ee,B):K+=k.get(L,F,U,G)*S.get(L,B,O,ee)}}b.set(K,C,P,F,B)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const yie={kernelName:Nb,backendName:"cpu",kernelFunc:gie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bie(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;Pe([s,i],"conv2dBackpropInput");const d=We(i.shape),h=We(s.shape);let p=Ya(u);const g=Xn(a,i.shape,o,1,l,c,!1,p),f=new In(g.inShape,"float32"),m=f.values,y=t.data.get(s.dataId).values,b=t.data.get(i.dataId).values,[x,v,w]=d,{batchSize:T,filterHeight:k,filterWidth:S,inChannels:C,inHeight:_,inWidth:z,outChannels:P,outHeight:R,outWidth:A,strideHeight:F,strideWidth:B}=g;p=g.dataFormat;const K=k-1-g.padInfo.top,L=S-1-g.padInfo.left,O=p==="channelsLast",U=f.strides[0],ee=O?f.strides[1]:f.strides[2],G=O?f.strides[2]:1,Q=O?1:f.strides[1],ne=h[0],X=O?h[1]:h[2],ue=O?h[2]:1,le=O?1:h[1];for(let pe=0;pe<T;++pe)for(let ge=0;ge<C;++ge)for(let be=0;be<_;++be){const Me=be-K,Re=Math.max(0,Math.ceil(Me/F)),Xe=Math.min(R,(k+Me)/F);for(let st=0;st<z;++st){const ct=st-L,it=Math.max(0,Math.ceil(ct/B)),at=Math.min(A,(S+ct)/B);let et=0;for(let $t=Re;$t<Xe;++$t){const bn=$t*F-Me;for(let $=it;$<at;++$){const E=$*B-ct,oe=ne*pe+X*$t+ue*$,ve=x*(k-1-bn)+v*(S-1-E)+w*ge;for(let we=0;we<P;++we){const Ne=y[oe+le*we],Be=b[ve+we];et+=Ne*Be}}}const kt=U*pe+ee*be+G*st+Q*ge;m[kt]=et}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const xie={kernelName:Xf,backendName:"cpu",kernelFunc:bie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r;Pe([s,i],"conv3d");const u=rl(s.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:g,dilationWidth:f,padInfo:m}=u,y=m.front,b=m.left,x=m.top,v=new In(u.outShape,s.dtype),w=t.data.get(s.dataId).values,T=t.data.get(i.dataId).values,k=v.values,S=We(s.shape),C=We(i.shape);for(let _=0;_<u.batchSize;++_){const z=_*S[0],P=_*v.strides[0];for(let R=0;R<u.outDepth;++R){const A=P+R*v.strides[1],F=R*u.strideDepth-y;for(let B=0;B<c;++B){const K=F+B*p;if(K<0||K>=u.inDepth)continue;const L=B*C[0],O=z+K*S[1];for(let U=0;U<u.outHeight;++U){const ee=A+U*v.strides[2],G=U*u.strideHeight-x;for(let Q=0;Q<d;++Q){const ne=G+Q*g;if(ne<0||ne>=u.inHeight)continue;const X=L+Q*C[1],ue=O+ne*S[2];for(let le=0;le<u.outWidth;++le){const pe=ee+le*u.outChannels,ge=le*u.strideWidth-b;for(let be=0;be<h;++be){const Me=ge+be*f;if(Me<0||Me>=u.inWidth)continue;const Re=X+be*C[2],Xe=ue+Me*u.inChannels;let st=Re;for(let ct=0;ct<u.inChannels;++ct){const it=w[Xe+ct];for(let at=0;at<u.outChannels;++at)k[pe+at]+=it*T[st+at];st+=u.outChannels}}}}}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const wie={kernelName:Uf,backendName:"cpu",kernelFunc:vie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r;Pe([s,i],"conv3dBackpropFilterV2");const u=We(s.shape),c=We(i.shape),d=rl(s.shape,l,a,1,o),h=d.strideDepth,p=d.strideHeight,g=d.strideWidth,f=d.filterDepth,m=d.filterHeight,y=d.filterWidth,b=new In(d.filterShape,"float32"),x=b.values,[v,w,T,k]=b.strides,S=t.data.get(i.dataId).values,[C,_,z,P]=c,R=t.data.get(s.dataId).values,[A,F,B,K]=u,L=d.padInfo.front,O=d.padInfo.left,U=d.padInfo.top;for(let ee=0;ee<f;++ee){const G=Math.max(0,Math.ceil((L-ee)/h)),Q=Math.min(d.outDepth,(d.inDepth+L-ee)/h),ne=ee*v;for(let X=0;X<m;++X){const ue=Math.max(0,Math.ceil((U-X)/p)),le=Math.min(d.outHeight,(d.inHeight+U-X)/p),pe=X*w+ne;for(let ge=0;ge<y;++ge){const be=Math.max(0,Math.ceil((O-ge)/g)),Me=Math.min(d.outWidth,(d.inWidth+O-ge)/g),Re=ge*T+pe;for(let Xe=0;Xe<d.inChannels;++Xe){const st=Xe*k+Re;for(let ct=0;ct<d.outChannels;++ct){let it=0;for(let at=0;at<d.batchSize;++at){const et=at*A,kt=at*C;for(let $t=G;$t<Q;++$t){const bn=(ee+$t*h-L)*F+et,$=$t*_+kt;for(let E=ue;E<le;++E){const oe=(X+E*p-U)*B+bn,ve=E*z+$;for(let we=be;we<Me;++we){const Ne=(ge+we*g-O)*K+oe,Be=we*P+ve;it+=R[Ne+Xe]*S[Be+ct]}}}}x[st+ct]=it}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const Tie={kernelName:Eb,backendName:"cpu",kernelFunc:Sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iie(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r;Pe([s],"conv3dBackpropInputV2");const u=We(s.shape),c=We(i.shape),d=rl(l,i.shape,o,1,a),h=new In(d.inShape,"float32"),p=h.values,[g,f,m,y]=h.strides,b=t.data.get(s.dataId).values,[x,v,w,T]=u,k=t.data.get(i.dataId).values,[S,C,_,z]=c,{batchSize:P,filterDepth:R,filterHeight:A,filterWidth:F,inChannels:B,inDepth:K,inHeight:L,inWidth:O,outChannels:U,outDepth:ee,outHeight:G,outWidth:Q,strideDepth:ne,strideHeight:X,strideWidth:ue}=d,le=R-1-d.padInfo.front,pe=A-1-d.padInfo.top,ge=F-1-d.padInfo.left;for(let be=0;be<P;++be)for(let Me=0;Me<B;++Me)for(let Re=0;Re<K;++Re){const Xe=Re-le,st=Math.max(0,Math.ceil(Xe/ne)),ct=Math.min(ee,(R+Xe)/ne);for(let it=0;it<L;++it){const at=it-pe,et=Math.max(0,Math.ceil(at/X)),kt=Math.min(G,(A+at)/X);for(let $t=0;$t<O;++$t){const bn=$t-ge,$=Math.max(0,Math.ceil(bn/ue)),E=Math.min(Q,(F+bn)/ue);let oe=0;for(let ve=st;ve<ct;++ve){const we=ve*ne-Xe;for(let Ne=et;Ne<kt;++Ne){const Be=Ne*X-at;for(let Le=$;Le<E;++Le){const fe=Le*ue-bn,Qe=x*be+v*ve+w*Ne+T*Le,Ge=S*(R-1-we)+C*(A-1-Be)+_*(F-1-fe)+z*Me;for(let He=0;He<U;++He){const Ke=b[Qe+He],Ze=k[Ge+He];oe+=Ke*Ze}}}}p[g*be+f*Re+m*it+y*$t+Me]=oe}}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}const kie={kernelName:Rb,backendName:"cpu",kernelFunc:Iie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cie=Rt(Md,n=>Math.cos(n)),_ie={kernelName:Md,backendName:"cpu",kernelFunc:Cie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mie=Rt(Nd,n=>Math.cosh(n)),Nie={kernelName:Nd,backendName:"cpu",kernelFunc:Mie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eie(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,[c,d,h,p]=s.shape,g=i.shape[0],[f,m]=o,y=rt([g,f,m,p],"float32"),b=t.data.get(i.dataId).values,x=t.data.get(a.dataId).values,v=t.data.get(s.dataId).values,w=We(s.shape),T=We(y.shape);for(let k=0;k<g;k++){const S=k*4,C=b[S],_=b[S+1],z=b[S+2],P=b[S+3],R=x[k];if(R>=c)continue;const A=f>1?(z-C)*(d-1)/(f-1):0,F=m>1?(P-_)*(h-1)/(m-1):0;for(let B=0;B<f;B++){const K=f>1?C*(d-1)+B*A:.5*(C+z)*(d-1);if(K<0||K>d-1){for(let L=0;L<m;L++)for(let O=0;O<p;O++){const U=O+L*T[2]+B*T[1]+k*T[0];y.values[U]=u}continue}if(l==="bilinear"){const L=Math.floor(K),O=Math.ceil(K),U=K-L;for(let ee=0;ee<m;ee++){const G=m>1?_*(h-1)+ee*F:.5*(_+P)*(h-1);if(G<0||G>h-1){for(let ue=0;ue<p;ue++){const le=ue+ee*T[2]+B*T[1]+k*T[0];y.values[le]=u}continue}const Q=Math.floor(G),ne=Math.ceil(G),X=G-Q;for(let ue=0;ue<p;ue++){let le=ue+Q*w[2]+L*w[1]+R*w[0];const pe=v[le];le=ue+ne*w[2]+L*w[1]+R*w[0];const ge=v[le];le=ue+Q*w[2]+O*w[1]+R*w[0];const be=v[le];le=ue+ne*w[2]+O*w[1]+R*w[0];const Me=v[le],Re=pe+(ge-pe)*X,Xe=be+(Me-be)*X;le=ue+ee*T[2]+B*T[1]+k*T[0],y.values[le]=Re+(Xe-Re)*U}}}else for(let L=0;L<m;++L){const O=m>1?_*(h-1)+L*F:.5*(_+P)*(h-1);if(O<0||O>h-1){for(let G=0;G<p;G++){const Q=G+L*T[2]+B*T[1]+k*T[0];y.values[Q]=u}continue}const U=Math.round(O),ee=Math.round(K);for(let G=0;G<p;G++){const Q=G+U*w[2]+ee*w[1]+R*w[0],ne=G+L*T[2]+B*T[1]+k*T[0];y.values[ne]=v[Q]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const Rie={kernelName:Ab,backendName:"cpu",kernelFunc:Eie};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;Pe(s,"cumprod");const l=rn([i],s.shape.length);let u=s;l!=null&&(u=Hr({inputs:{x:s},backend:t,attrs:{perm:l}}));const c=mn(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=Vr(u.dtype,"int32"),h=wb(ie(u.shape),d),p=t.data.get(u.dataId).values,g=u.shape[u.shape.length-1],f=o?(y,b)=>y+g-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=g)for(let b=0;b<g;b++){const x=f(y,b);if(b===0)h[x]=a?1:p[x];else{const v=f(y,b-1);h[x]=a?p[v]*h[v]:p[x]*h[v]}}const m=t.makeTensorInfo(u.shape,d,h);if(l!=null){const y=sl(l),b=Hr({inputs:{x:m},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(u),b}return m}const Aie={kernelName:Lb,backendName:"cpu",kernelFunc:Lie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;Pe(s,"cumsum");const l=rn([i],s.shape.length);let u=s;l!=null&&(u=Hr({inputs:{x:s},backend:t,attrs:{perm:l}}));const c=mn(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=Vr(u.dtype,"int32"),h=sr(ie(u.shape),d),p=t.data.get(u.dataId).values,g=u.shape[u.shape.length-1],f=o?(y,b)=>y+g-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=g)for(let b=0;b<g;b++){const x=f(y,b);if(b===0)h[x]=a?0:p[x];else{const v=f(y,b-1);h[x]=a?p[v]+h[v]:p[x]+h[v]}}const m=t.makeTensorInfo(u.shape,d,h);if(l!=null){const y=sl(l),b=Hr({inputs:{x:m},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(u),b}return m}const Die={kernelName:Zf,backendName:"cpu",kernelFunc:zie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(s.shape.length===1){const l=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values,c=f_(l,u,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,c)}else if(s.shape.length===2){const l=t.bufferSync(s),u=t.bufferSync(i),c=G$(l,u,a,o);return t.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const $ie={kernelName:zb,backendName:"cpu",kernelFunc:Pie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:i,dataFormat:a}=r;M(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],d=l*i,h=u*i,p=c/(i*i),g=t.data.get(s.dataId).values,f=new Float32Array(o*d*h*p);let m=0;for(let y=0;y<o;++y)for(let b=0;b<d;++b){const x=Math.floor(b/i),v=b%i;for(let w=0;w<h;++w){const T=Math.floor(w/i),k=w%i,S=(v*i+k)*p;for(let C=0;C<p;++C){const _=C+S+c*(T+u*(x+l*y));f[m++]=g[_]}}}return t.makeTensorInfo([o,d,h,p],s.dtype,f)}const Gie={kernelName:Db,backendName:"cpu",kernelFunc:Fie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;Pe([s,i],"depthwiseConv2DNative");const c=We(s.shape),d=We(i.shape);let h=l;h==null&&(h=[1,1]),M(or(a,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`);const p=Xn(s.shape,i.shape,a,h,o,u,!0),{filterHeight:g,filterWidth:f,dilationHeight:m,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,T=new In(p.outShape,s.dtype),k=t.data.get(s.dataId).values,S=t.data.get(i.dataId).values,C=T.values;for(let _=0;_<p.batchSize;++_){const z=_*c[0],P=_*T.strides[0];for(let R=0;R<p.outHeight;++R){const A=P+R*T.strides[1],F=R*p.strideHeight-v;for(let B=0;B<g;++B){const K=F+B*m;if(K<0||K>=p.inHeight)continue;const L=B*d[0],O=z+K*c[1];for(let U=0;U<p.outWidth;++U){const ee=A+U*T.strides[2],G=U*p.strideWidth-x;for(let Q=0;Q<f;++Q){const ne=G+Q*y;if(ne<0||ne>=p.inWidth)continue;const X=L+Q*d[1],ue=O+ne*p.inChannels;let le=ee,pe=X;for(let ge=0;ge<p.inChannels;++ge){const be=k[ue+ge];for(let Me=0;Me<w;++Me)C[le+Me]+=be*S[pe+Me];le+=w,pe+=w}}}}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const Oie={kernelName:Hf,backendName:"cpu",kernelFunc:OF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;Pe([s,i],"depthwiseConv2dNativeBackpropFilter");const d=Xn(s.shape,c,a,o,l,u,!0),{strideHeight:h,strideWidth:p,filterHeight:g,filterWidth:f}=d,m=new In(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,v=t.data.get(s.dataId).values,w=new In(s.shape,s.dtype,v),T=t.data.get(i.dataId).values,k=new In(i.shape,i.dtype,T);for(let S=0;S<g;++S){const C=Math.max(0,Math.ceil((b-S)/h)),_=Math.min(d.outHeight,(d.inHeight+b-S)/h);for(let z=0;z<f;++z){const P=Math.max(0,Math.ceil((y-z)/p)),R=Math.min(d.outWidth,(d.inWidth+y-z)/p);for(let A=0;A<d.outChannels;++A){const F=Math.trunc(A/x),B=A%x;let K=0;for(let L=0;L<d.batchSize;++L)for(let O=C;O<_;++O){const U=S+O*h-b;for(let ee=P;ee<R;++ee){const G=z+ee*p-y;K+=w.get(L,U,G,F)*k.get(L,O,ee,A)}}m.set(K,S,z,F,B)}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const Vie={kernelName:Pb,backendName:"cpu",kernelFunc:Wie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bie(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;Pe([s,i],"depthwiseConv2DNativeBackpropInput");const d=We(s.shape),h=We(i.shape),p=Xn(c,i.shape,a,o,l,u,!0),g=new In(p.inShape,"float32"),f=g.values,[m,y,b]=g.strides,x=t.data.get(s.dataId).values,[v,w,T]=d,k=t.data.get(i.dataId).values,[S,C,_]=h,{batchSize:z,filterHeight:P,filterWidth:R,inChannels:A,inHeight:F,inWidth:B,outChannels:K,outHeight:L,outWidth:O,strideHeight:U,strideWidth:ee}=p,G=P-1-p.padInfo.top,Q=R-1-p.padInfo.left,ne=K/A;for(let X=0;X<z;++X)for(let ue=0;ue<A;++ue)for(let le=0;le<F;++le){const pe=le-G,ge=Math.max(0,Math.ceil(pe/U)),be=Math.min(L,(P+pe)/U);for(let Me=0;Me<B;++Me){const Re=Me-Q,Xe=Math.max(0,Math.ceil(Re/ee)),st=Math.min(O,(R+Re)/ee);let ct=0;for(let it=ge;it<be;++it){const at=it*U-pe;for(let et=Xe;et<st;++et){const kt=et*ee-Re,$t=v*X+w*it+T*et,bn=S*(P-1-at)+C*(R-1-kt)+_*ue;for(let $=0;$<ne;++$){const E=ue*ne+$,oe=x[$t+E],ve=k[bn+$];ct+=oe*ve}}}f[m*X+y*le+b*Me+ue]=ct}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const Xie={kernelName:$b,backendName:"cpu",kernelFunc:Bie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uie(n){const{inputs:e,backend:t}=n,{x:r}=e,s=ie(r.shape),i=t.data.get(r.dataId).values,a=rt([s,s],r.dtype),o=a.values;for(let u=0;u<i.length;u++)o[u*s+u]=i[u];const l=[...r.shape,...r.shape];return t.makeTensorInfo(l,a.dtype,a.values)}const Zie={kernelName:Fb,backendName:"cpu",kernelFunc:Uie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hie={kernelName:Kf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s}=n,{strides:i,pad:a,dilations:o}=t,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,d=l.data.get(s.dataId).values,h=s.shape.length,{batchSize:p,inHeight:g,inWidth:f,inChannels:m,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:T,filterWidth:k,dilationHeight:S,dilationWidth:C,outShape:_}=$m(r.shape,s.shape,i,a,"NHWC",o),z=ie(_),P=_.length,R=ln(r.dtype,z);for(let A=0;A<p;++A)for(let F=0;F<y;++F){const B=F*v-x.top;for(let K=0;K<b;++K){const L=K*w-x.left;for(let O=0;O<m;++O){let U=Number.MIN_SAFE_INTEGER;for(let G=0;G<T;++G){const Q=B+G*S;if(Q>=0&&Q<g)for(let ne=0;ne<k;++ne){const X=L+ne*C;if(X>=0&&X<f){const ue=bi([A,Q,X,O],c,We(r.shape)),le=bi([G,ne,O],h,We(s.shape)),pe=u[ue]+d[le];pe>U&&(U=pe)}}}const ee=bi([A,F,K,O],P,We(_));R[ee]=U}}}return{dataId:l.write(tl(R,r.dtype),_,r.dtype),shape:_,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kie={kernelName:T0,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:i}=n,{strides:a,pad:o,dilations:l}=t,u=e,c=Ns(r.shape,u.data.get(r.dataId).values),d=Ns(s.shape,u.data.get(s.dataId).values),{batchSize:h,inHeight:p,inWidth:g,inChannels:f,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:T,dilationHeight:k,dilationWidth:S,outShape:C}=$m(r.shape,s.shape,a,o,"NHWC",l);M(i.rank===C.length,()=>`Error in ${T0}, dy must have the same rank as output ${C.length}, but got ${i.rank}`);const _=Ns(C,u.data.get(i.dataId).values),z=UT(s.shape,s.dtype);for(let P=0;P<h;++P)for(let R=0;R<m;++R){const A=R*x-b.top;for(let F=0;F<y;++F){const B=F*v-b.left;for(let K=0;K<f;++K){let L=Number.MIN_SAFE_INTEGER,O=0,U=0;for(let ee=0;ee<w;++ee){const G=A+ee*k;if(G>=0&&G<p)for(let Q=0;Q<T;++Q){const ne=B+Q*S;if(ne>=0&&ne<g){const X=c[P][G][ne][K]+d[ee][Q][K];X>L&&(L=X,O=ee,U=Q)}}}z[O][U][K]+=_[P][R][F][K]}}}return{dataId:u.write(tl(z,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yie={kernelName:S0,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:i}=n,{strides:a,pad:o,dilations:l}=t,u=e,c=Ns(r.shape,u.data.get(r.dataId).values),d=Ns(s.shape,u.data.get(s.dataId).values),{batchSize:h,inHeight:p,inWidth:g,inChannels:f,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:T,dilationHeight:k,dilationWidth:S,outShape:C}=$m(r.shape,s.shape,a,o,"NHWC",l);M(i.rank===C.length,()=>`Error in ${S0}, dy must have the same rank as output ${C.length}, but got ${i.rank}`);const _=Ns(C,u.data.get(i.dataId).values),z=UT(r.shape,r.dtype);for(let P=0;P<h;++P)for(let R=0;R<m;++R){const A=R*x-b.top;for(let F=0;F<y;++F){const B=F*v-b.left;for(let K=0;K<f;++K){let L=Number.MIN_SAFE_INTEGER,O=A<0?0:A,U=B<0?0:B;for(let ee=0;ee<w;++ee){const G=A+ee*k;if(G>=0&&G<p)for(let Q=0;Q<T;++Q){const ne=B+Q*S;if(ne>=0&&ne<g){const X=c[P][G][ne][K]+d[ee][Q][K];X>L&&(L=X,O=G,U=ne)}}}z[P][O][U][K]+=_[P][R][F][K]}}}return{dataId:u.write(tl(z,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jie(n){const{inputs:e,backend:t,attrs:r}=n,{image:s}=e,{canvas:i,options:a}=r,{contextOptions:o,imageOptions:l}=a||{},u=(l==null?void 0:l.alpha)||1,c=(o==null?void 0:o.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const d=i.getContext(c,(o==null?void 0:o.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${c} type.`);const[h,p]=s.shape.slice(0,2),g=s.shape.length===2?1:s.shape[2],f=t.data.get(s.dataId).values,m=s.dtype==="float32"?255:1,y=new Uint8ClampedArray(p*h*4);for(let x=0;x<h*p;++x){const v=[0,0,0,255*u];for(let T=0;T<g;T++){const k=f[x*g+T];if(s.dtype==="float32"){if(k<0||k>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${k}.`)}else if(s.dtype==="int32"&&(k<0||k>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${k}.`);g===1?(v[0]=k*m,v[1]=k*m,v[2]=k*m):v[T]=k*m}const w=x*4;y[w+0]=Math.round(v[0]),y[w+1]=Math.round(v[1]),y[w+2]=Math.round(v[2]),y[w+3]=Math.round(v[3])}i.width=p,i.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),s}const Qie={kernelName:Gb,backendName:"cpu",kernelFunc:jie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mg(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;Pe(s,"sum");let o;s.dtype==="bool"?o=Yo({inputs:{x:s},backend:t,attrs:{dtype:"int32"}}):o=la({inputs:{x:s},backend:t});const l=o.shape.length,u=lt(i,o.shape),c=rn(u,l);let d=u,h=o;c!=null&&(h=Hr({inputs:{x:o},backend:t,attrs:{perm:c}}),d=mn(d.length,l)),lr("sum",d,h.shape.length);const[p,g]=Un(h.shape,d),f=Vr(h.dtype,"int32");let m=O0(t,p,f);const y=ie(g),b=t.data.get(m.dataId).values,x=t.data.get(h.dataId).values;for(let v=0;v<b.length;++v){const w=v*y;let T=0;for(let k=0;k<y;++k)T+=x[w+k];b[v]=T}if(a){const v=fn(m.shape,u),w=m;m=Ot({inputs:{x:m},backend:t,attrs:{shape:v}}),t.disposeIntermediateTensorInfo(w)}return t.disposeIntermediateTensorInfo(o),c!=null&&t.disposeIntermediateTensorInfo(h),m}const Jie={kernelName:_m,backendName:"cpu",kernelFunc:mg};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qie(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,i=e,{allDims:a,summedDims:o,idDims:l}=Ak(s,i.length);Dk(a.length,l,i);const{path:u,steps:c}=Pk(o,l),d=c.length;let h=null,p=a.length;const g=[];for(let f=0;f<d;++f){for(const m of c[f]){const{permutationIndices:y,expandDims:b}=zk(p,l[m]);let x;$k(y)?x=i[m]:(x=Hr({inputs:{x:i[m]},backend:t,attrs:{perm:y}}),g.push(x));const v=x.shape.slice();for(let w=0;w<b.length;++w)v.splice(b[w],0,1);ht(x.shape,v)||(x=Ot({inputs:{x},backend:t,attrs:{shape:v}}),g.push(x)),h===null?h=x:(h=Pv({inputs:{a:x,b:h},backend:t}),g.push(h))}f<d-1&&(u[f]>=0&&(h=mg({inputs:{x:h},backend:t,attrs:{axis:u[f]-(a.length-p),keepDims:!1}}),g.push(h)),p--)}for(const f of g)f!==h&&t.disposeIntermediateTensorInfo(f);return h}const eae={kernelName:Ob,backendName:"cpu",kernelFunc:qie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tae(n){const{inputs:e,backend:t}=n,{dy:r,y:s}=e;Pe([r,s],"eluGrad");const i=new Float32Array(ie(s.shape)),a=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values;for(let l=0;l<a.length;++l){const u=a[l];u>=0?i[l]=o[l]:i[l]=o[l]*(u+1)}return t.makeTensorInfo(s.shape,"float32",i)}const nae={kernelName:Wb,backendName:"cpu",kernelFunc:tae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rae=Ck,sae=_k,iae=Mk,aae=Nk,oae=Ek,lae=Rk,uae=Rt(Ld,n=>{const e=Math.sign(n),t=Math.abs(n),r=1/(1+rae*t);return e*(1-((((lae*r+oae)*r+aae)*r+iae)*r+sae)*r*Math.exp(-t*t))}),cae={kernelName:Ld,backendName:"cpu",kernelFunc:uae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B0(n){const{inputs:e,backend:t,attrs:r}=n,{input:s}=e,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(M(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+i+1),o.splice(l,0,1),Ot({inputs:{x:s},backend:t,attrs:{shape:o}})}const dae={kernelName:jf,backendName:"cpu",kernelFunc:B0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hae=yn((n,e)=>n/e),v_=zn(Ed,hae),p2={kernelName:Ed,backendName:"cpu",kernelFunc:v_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(n,e,t){const r=n.shape,s=r[0],i=r[1],a=t.data.get(n.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],c=ie(u),d=Vn("float32",c),h=Vn("float32",c);for(let m=0;m<s;m++){const y=gu({inputs:{x:o},backend:t,attrs:{begin:[m,0],size:[1,i]}}),b=gu({inputs:{x:l},backend:t,attrs:{begin:[m,0],size:[1,i]}}),x=rs({inputs:{real:y,imag:b},backend:t}),{real:v,imag:w}=pae(x,e,t),T=Va(v,w);for(let k=0;k<i;k++){const S=Lk(T,k);d[m*i+k]=S.real,h[m*i+k]=S.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x)}const p=t.makeTensorInfo(u,"float32",d),g=t.makeTensorInfo(u,"float32",h),f=rs({inputs:{real:p,imag:g},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),f}function pae(n,e,t){const r=ie(n.shape),s=t.data.get(n.dataId),i=t.data.get(s.complexTensorInfos.real.dataId).values,a=t.data.get(s.complexTensorInfos.imag.dataId).values;if(fae(r)){const o=f2(i,a,r,e,t),l=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(l,"float32",o.real),c=t.makeTensorInfo(l,"float32",o.imag),d=t.makeTensorInfo([],"float32",Ha(r,"float32")),h=la({inputs:{x:d},backend:t}),p=p2.kernelFunc({inputs:{a:u,b:d},backend:t}),g=p2.kernelFunc({inputs:{a:c,b:h},backend:t}),f=t.data.get(p.dataId).values,m=t.data.get(g.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),{real:f,imag:m}}return o}else{const o=Va(i,a),l=mae(o,r,e);return JD(l)}}function fae(n){return(n&n-1)===0}function f2(n,e,t,r,s){if(t===1)return{real:n,imag:e};const i=Va(n,e),a=t/2,o=qD(i),l=o.real,u=o.imag,c=[l.length],d=s.makeTensorInfo(c,"float32",l),h=s.makeTensorInfo(c,"float32",u),p=rs({inputs:{real:d,imag:h},backend:s}),g=eP(i),f=g.real,m=g.imag,y=[f.length],b=s.makeTensorInfo(y,"float32",f),x=s.makeTensorInfo(y,"float32",m),v=rs({inputs:{real:b,imag:x},backend:s}),w=f2(l,u,a,r,s),T=w.real,k=w.imag,S=[T.length],C=s.makeTensorInfo(S,"float32",T),_=s.makeTensorInfo(S,"float32",k),z=rs({inputs:{real:C,imag:_},backend:s}),P=f2(f,m,a,r,s),R=P.real,A=P.imag,F=[R.length],B=s.makeTensorInfo(F,"float32",R),K=s.makeTensorInfo(F,"float32",A),L=rs({inputs:{real:B,imag:K},backend:s}),O=nP(t,r),U=[O.real.length],ee=s.makeTensorInfo(U,"float32",O.real),G=s.makeTensorInfo(U,"float32",O.imag),Q=rs({inputs:{real:ee,imag:G},backend:s}),ne=Pv({inputs:{a:Q,b:L},backend:s}),X=ud({inputs:{a:z,b:ne},backend:s}),ue=b_({inputs:{a:z,b:ne},backend:s}),le=mu({inputs:{input:X},backend:s}),pe=mu({inputs:{input:ue},backend:s}),ge=cd({inputs:{input:X},backend:s}),be=cd({inputs:{input:ue},backend:s}),Me=dd({inputs:[le,pe],backend:s,attrs:{axis:0}}),Re=dd({inputs:[ge,be],backend:s,attrs:{axis:0}}),Xe=s.data.get(Me.dataId).values,st=s.data.get(Re.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(ee),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(Q),s.disposeIntermediateTensorInfo(ne),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(ue),s.disposeIntermediateTensorInfo(le),s.disposeIntermediateTensorInfo(ge),s.disposeIntermediateTensorInfo(pe),s.disposeIntermediateTensorInfo(be),s.disposeIntermediateTensorInfo(Me),s.disposeIntermediateTensorInfo(Re),{real:Xe,imag:st}}function mae(n,e,t){const r=new Float32Array(e*2);for(let s=0;s<e;s++){let i=0,a=0;for(let o=0;o<e;o++){const l=rP(s*o,e,t),u=Lk(n,o);i+=u.real*l.real-u.imag*l.imag,a+=u.real*l.imag+u.imag*l.real}t&&(i/=e,a/=e),tP(r,i,a,s)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gae(n){const{inputs:e,backend:t}=n,{input:r}=e,s=ie(r.shape),i=r.shape[r.shape.length-1],a=s/i,o=Ot({inputs:{x:r},backend:t,attrs:{shape:[a,i]}}),l=WF(o,!1,t),u=Ot({inputs:{x:l},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),u}const yae={kernelName:Vb,backendName:"cpu",kernelFunc:gae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w_(n){const{backend:e,attrs:t}=n,{shape:r,value:s,dtype:i}=t,a=i||Cu(s),o=ln(a,ie(r));return xae(o,s),e.makeTensorInfo(r,a,o)}const bae={kernelName:Bb,backendName:"cpu",kernelFunc:w_};function xae(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vae={kernelName:Xb,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,s=t,i=Vn(r.dtype,ie(r.shape)),[a,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let d=0;d<a;d++){const h=d*l*o*u;for(let p=0;p<o;p++){const g=p*(l*u);for(let f=0;f<l;f++){const m=f*u;for(let y=0;y<u;y++){const b=Math.round(l-f-1),x=h+g+m+y;let v=c[x];if(b>=0&&b<l){const w=b*u,T=h+g+w+y;v=c[T]}i[x]=v}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wae(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:g}=r;let f=GF({inputs:{x:s,filter:i},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(a){const m=f;if(c==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const y=Ot({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});f=ud({inputs:{a:f,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else f=ud({inputs:{a:f,b:a},backend:t});t.disposeIntermediateTensorInfo(m)}if(p){const m=f;if(c==="NCHW"&&p==="prelu"&&o.shape.length===1&&o.shape[0]!==1){const y=Ot({inputs:{x:o},backend:t,attrs:{shape:[o.shape[0],1,1]}});f=V0(t,f,p,y,g),t.disposeIntermediateTensorInfo(y)}else f=V0(t,f,p,o,g);t.disposeIntermediateTensorInfo(m)}return f}const Sae={kernelName:af,backendName:"cpu",kernelFunc:wae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tae(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:g}=r;let f=OF({inputs:{x:s,filter:i},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(a){const m=f;f=ud({inputs:{a:f,b:a},backend:t}),t.disposeIntermediateTensorInfo(m)}if(p){const m=f;f=V0(t,f,p,o,g),t.disposeIntermediateTensorInfo(m)}return f}const Iae={kernelName:of,backendName:"cpu",kernelFunc:Tae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kae(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,i=ie(r.shape),a=s.shape,o=a[a.length-1],[l,u,c,d]=uv(r,s);if(u===0)return t.makeTensorInfo(l,r.dtype,[]);const h=t.data.get(s.dataId).values,p=t.bufferSync(r),g=j$(h,p,r.dtype,u,o,c,d,r.shape,i);return t.makeTensorInfo(l,r.dtype,g.values)}const Cae={kernelName:Ub,backendName:"cpu",kernelFunc:kae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ae(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:i}=e,{axis:a,batchDims:o}=r;Pe([s,i],"gatherV2");const l=lt(a,s.shape)[0],u=t.data.get(i.dataId).values,c=s.shape[l];for(let v=0;v<u.length;++v){const w=u[v];M(w<=c-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${c-1}]`)}let d=o;o==null&&(d=0);const h=ie(i.shape),p=Gk(s,i,l,d),g=Ot({inputs:{x:s},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=Ot({inputs:{x:i},backend:t,attrs:{shape:[p.batchSize,h/p.batchSize]}}),m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=t.bufferSync(f),b=t.bufferSync(g),x=Q$(b,y,m);return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),t.makeTensorInfo(p.outputShape,x.dtype,x.values)}const Mae={kernelName:Jf,backendName:"cpu",kernelFunc:_ae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nae(n){const{inputs:e,backend:t}=n,{input:r}=e,s=ie(r.shape),i=r.shape[r.shape.length-1],a=s/i,o=Ot({inputs:{x:r},backend:t,attrs:{shape:[a,i]}}),l=WF(o,!0,t),u=Ot({inputs:{x:l},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),u}const Eae={kernelName:Zb,backendName:"cpu",kernelFunc:Nae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rae=Rt(Gd,n=>Number.isFinite(n)?1:0,"bool"),Lae={kernelName:Gd,backendName:"cpu",kernelFunc:Rae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aae=Rt(Od,n=>Math.abs(n)===1/0?1:0,"bool"),zae={kernelName:Od,backendName:"cpu",kernelFunc:Aae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dae=Rt(Wd,n=>Number.isNaN(n)?1:0,"bool"),Pae={kernelName:Wd,backendName:"cpu",kernelFunc:Dae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ae(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:i}=t,a=nF(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}const Fae={kernelName:Kb,backendName:"cpu",kernelFunc:$ae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gae=Rt(Bd,n=>Math.log1p(n)),Oae={kernelName:Bd,backendName:"cpu",kernelFunc:Gae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wae=yn((n,e)=>n&&e),Vae=zn(rm,Wae,null,"bool"),Bae={kernelName:rm,backendName:"cpu",kernelFunc:Vae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xae=Rt(sm,n=>n?0:1,"bool"),Uae={kernelName:sm,backendName:"cpu",kernelFunc:Xae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zae=yn((n,e)=>n||e),Hae=zn(im,Zae,null,"bool"),Kae={kernelName:im,backendName:"cpu",kernelFunc:Hae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yae(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r;Pe(s,"LRN");const u=s.shape[3],c=u-1,d=t.data.get(s.dataId).values,h=ie(s.shape),p=new Float32Array(h);function g(f){const m=f%u;let y=f-m+Math.max(0,m-i);const b=f-m+Math.min(m+i,c);let x=0;for(;y<=b;y++){const v=d[y];x+=v*v}return x}for(let f=0;f<h;f++){const m=g(f),y=d[f]*Math.pow(a+o*m,-l);p[f]=y}return t.makeTensorInfo(s.shape,s.dtype,p)}const jae={kernelName:am,backendName:"cpu",kernelFunc:Yae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qae(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r;Pe(a,"LRNGrad");const d=ie(a.shape),h=a.shape[3],p=t.data.get(a.dataId).values,g=t.data.get(s.dataId).values,f=t.data.get(i.dataId).values,m=new Float32Array(d),y=d;for(let b=0;b<y;b++){const x=b%h,v=b-x+Math.max(0,x-o),w=b-x+Math.min(h,x+o+1);let T=0;for(let k=v;k<w;k++)T+=Math.pow(g[k],2);T=u*T+l;for(let k=v;k<w;k++){let S=-2*u*c*g[k]*f[b]/T;b===k&&(S+=Math.pow(T,-c)),S*=p[b],m[k]+=S}}return t.makeTensorInfo(a.shape,s.dtype,m)}const Jae={kernelName:Yb,backendName:"cpu",kernelFunc:Qae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=t;let l=s.shape;const u=l.length,c=lt(i,l);let d=c;const h=rn(d,u);let p=o.data.get(s.dataId).values;if(h!=null){const v=new Array(u);for(let w=0;w<v.length;w++)v[w]=l[h[w]];p=g_(p,l,s.dtype,h,v),d=mn(d.length,u),l=v}Pe(s,"max"),lr("max",d,u);const[g,f]=Un(l,d),m=ie(f),y=sF(p,m,g,s.dtype),b=o.write(y,g,s.dtype);let x=g;return a&&(x=fn(g,c)),{dataId:b,shape:x,dtype:s.dtype}}const qae={kernelName:om,backendName:"cpu",kernelFunc:VF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eoe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Pe(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;M(or(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=ti(s.shape,i,a,u,o,l);let d;if(c.filterWidth===1&&c.filterHeight===1&&ht(c.inShape,c.outShape))d=la({inputs:{x:s},backend:t});else{const h=t.data.get(s.dataId).values,p=We(s.shape),g=x_(h,s.shape,s.dtype,p,c,"max");d=t.makeTensorInfo(c.outShape,s.dtype,g.values)}return d}const toe={kernelName:lm,backendName:"cpu",kernelFunc:eoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function noe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;Pe(s,"maxPool3d");const c=Ka(s.shape,i,a,1,o,l,u),d=t.data.get(s.dataId).values,h=FF(d,s.shape,s.dtype,We(s.shape),c,"max");return t.makeTensorInfo(h.shape,"float32",h.values)}const roe={kernelName:um,backendName:"cpu",kernelFunc:noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function soe(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;Pe([s,i],"maxPool3DGrad");const c=Ka(i.shape,a,o,1,l,u),d=t.bufferSync(i),h=Zse(d,c),p=c.strideDepth,g=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,T=x-1-c.padInfo.front,k=w-1-c.padInfo.left,S=v-1-c.padInfo.top,C=rt(i.shape,"float32"),_=t.bufferSync(s);for(let z=0;z<c.batchSize;++z)for(let P=0;P<c.inChannels;++P)for(let R=0;R<c.inDepth;++R)for(let A=0;A<c.inHeight;++A)for(let F=0;F<c.inWidth;++F){const B=R-T,K=A-S,L=F-k;let O=0;for(let U=0;U<x;U+=m){const ee=(B+U)/p;if(!(ee<0||ee>=c.outDepth||Math.floor(ee)!==ee))for(let G=0;G<v;G+=y){const Q=(K+G)/g;if(!(Q<0||Q>=c.outHeight||Math.floor(Q)!==Q))for(let ne=0;ne<w;ne+=b){const X=(L+ne)/f;if(X<0||X>=c.outWidth||Math.floor(X)!==X)continue;const ue=x*v*w-1-h.get(z,ee,Q,X,P),le=U*v*w+G*w+ne,pe=ue===le?1:0;if(pe===0)continue;const ge=_.get(z,ee,Q,X,P);O+=ge*pe}}}C.set(O,z,R,A,F,P)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const ioe={kernelName:Qb,backendName:"cpu",kernelFunc:soe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aoe(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i,output:a}=e,o=i;Pe([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=ti(o.shape,l,u,1,c,d),p=t.data.get(o.dataId).values,g=rt(h.outShape,o.dtype,$F(p,o.shape,o.dtype,h).values),f=h.strideHeight,m=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=v-1-h.padInfo.left,T=x-1-h.padInfo.top,k=rt(o.shape,"float32"),S=t.data.get(s.dataId).values,C=rt(s.shape,"float32",S);for(let _=0;_<h.batchSize;++_)for(let z=0;z<h.inChannels;++z)for(let P=0;P<h.inHeight;++P)for(let R=0;R<h.inWidth;++R){const A=P-T,F=R-w;let B=0;for(let K=0;K<x;K+=y){const L=(A+K)/f;if(!(L<0||L>=h.outHeight||Math.floor(L)!==L))for(let O=0;O<v;O+=b){const U=(F+O)/m;if(U<0||U>=h.outWidth||Math.floor(U)!==U)continue;const ee=x*v-1-g.get(_,L,U,z),G=K*v+O,Q=ee===G?1:0;if(Q===0)continue;const ne=C.get(_,L,U,z);B+=ne*Q}}k.set(B,_,P,R,z)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const ooe={kernelName:jb,backendName:"cpu",kernelFunc:aoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function loe(n,e,t,r,s){const i=We(e),a=x_(n,e,t,i,s,"max"),o=$F(n,e,t,s,!0,r);return[a.values,o.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uoe={kernelName:Jb,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=t;Pe(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=ti(r.shape,s,i,[1,1],a),[d,h]=loe(u,r.shape,r.dtype,o,c),p=l.write(d,c.outShape,r.dtype),g=l.write(h,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:g,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function coe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=lt(i,s.shape),l=Un(s.shape,o)[1],u=ie(l),c=[],d=t.makeTensorInfo([],"float32",new Float32Array([u]));c.push(d);const h=Yo({inputs:{x:s},backend:t,attrs:{dtype:"float32"}});c.push(h);const p=v_({inputs:{a:h,b:d},backend:t});c.push(p);const g=mg({inputs:{x:p},backend:t,attrs:{axis:i,keepDims:a}});return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),g}const doe={kernelName:cm,backendName:"cpu",kernelFunc:coe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hoe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;Pe(s,"min");const o=lt(i,s.shape);let l=o;const u=rn(l,s.shape.length);let c=s;u!=null&&(c=Hr({inputs:{x:s},backend:t,attrs:{perm:u}}),l=mn(l.length,s.shape.length)),lr("min",l,c.shape.length);const[d,h]=Un(c.shape,l),p=ie(h),g=sr(ie(d),c.dtype),f=t.data.get(c.dataId).values;for(let y=0;y<g.length;++y){const b=y*p;let x=f[b];for(let v=0;v<p;++v){const w=f[b+v];(Number.isNaN(w)||w<x)&&(x=w)}g[y]=x}u!=null&&t.disposeIntermediateTensorInfo(c);const m=t.makeTensorInfo(d,c.dtype,g);if(a){const y=fn(d,o),b=Ot({inputs:{x:m},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(m),b}return m}const poe={kernelName:dm,backendName:"cpu",kernelFunc:hoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function foe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:i,mode:a}=r;Pe(s,"mirrorPad");const o=i.map((b,x)=>b[0]+s.shape[x]+b[1]),l=i.map(b=>b[0]),u=i.map((b,x)=>b[0]+s.shape[x]),c=a==="reflect"?0:1,d=t.data.get(s.dataId).values,h=s.shape.length,p=We(s.shape),g=ie(o),f=o.length,m=We(o),y=Vn(s.dtype,g);for(let b=0;b<g;b++){let x=_u(b,f,m);for(let w=0;w<f;w++)x[w]<l[w]?x[w]=l[w]*2-x[w]-c:x[w]>=u[w]&&(x[w]=(u[w]-1)*2-x[w]+c);x=x.map((w,T)=>w-l[T]);const v=bi(x,h,p);y[b]=d[v]}return{dataId:t.write(y,o,s.dtype),shape:o,dtype:s.dtype}}const moe={kernelName:hm,backendName:"cpu",kernelFunc:foe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const goe=yn((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),yoe=zn(Zd,goe),boe={kernelName:Zd,backendName:"cpu",kernelFunc:yoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:i}=r,a=s.shape.length;let o=i;if(o===-1&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=lt([o],s.shape),u=VF({inputs:{x:s},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=fn(u.shape,l),d=Ot({inputs:{x:u},backend:t,attrs:{shape:c}}),h=b_({inputs:{a:s,b:d},backend:t}),p=Z$({inputs:{x:h},backend:t}),g=mg({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),f=Ot({inputs:{x:g},backend:t,attrs:{shape:c}}),m=v_({inputs:{a:p,b:f},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),m}const xoe={kernelName:Em,backendName:"cpu",kernelFunc:BF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function voe(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r;Pe(s,"multinomial");const l=o?s:BF({inputs:{logits:s},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],d=t.data.get(l.dataId).values,h=[u,i],p=sr(ie(h),"int32");for(let g=0;g<u;++g){const f=g*c,m=new Float32Array(c-1);m[0]=d[f];for(let x=1;x<m.length;++x)m[x]=m[x-1]+d[f+x];const y=xh.alea(a.toString()),b=g*i;for(let x=0;x<i;++x){const v=y();p[b+x]=m.length;for(let w=0;w<m.length;w++)if(v<m[w]){p[b+x]=w;break}}}return o||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(h,"int32",p)}const woe={kernelName:qb,backendName:"cpu",kernelFunc:voe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Soe=iv;function Toe(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;Pe(s,"NonMaxSuppression");const u=t.data.get(s.dataId).values,c=t.data.get(i.dataId).values,{selectedIndices:d}=Soe(u,c,a,o,l);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Ioe={kernelName:ex,backendName:"cpu",kernelFunc:Toe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const koe=av;function Coe(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Pe(s,"NonMaxSuppressionPadded");const c=t.data.get(s.dataId).values,d=t.data.get(i.dataId).values,{selectedIndices:h,validOutputs:p}=koe(c,d,a,o,l,u);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const _oe={kernelName:tx,backendName:"cpu",kernelFunc:Coe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Moe=ov;function Noe(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Pe(s,"NonMaxSuppressionWithScore");const c=t.data.get(s.dataId).values,d=t.data.get(i.dataId).values,h=a,p=o,g=l,f=u,{selectedIndices:m,selectedScores:y}=Moe(c,d,h,p,g,f);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const Eoe={kernelName:nx,backendName:"cpu",kernelFunc:Noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Roe(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:i,depth:a,onValue:o,offValue:l}=r;Pe(s,"oneHot");const u=ie(s.shape),c=new Float32Array(u*a);c.fill(l);const d=t.data.get(s.dataId).values;for(let h=0;h<u;++h)d[h]>=0&&d[h]<a&&(c[h*a+d[h]]=o);return t.makeTensorInfo([...s.shape,a],i,c)}const Loe={kernelName:gm,backendName:"cpu",kernelFunc:Roe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X0(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){const s=mu({inputs:{input:r},backend:t}),i=X0({inputs:{x:s},backend:t}),a=cd({inputs:{input:r},backend:t}),o=X0({inputs:{x:a},backend:t}),l=rs({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return w_({backend:t,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Aoe={kernelName:zm,backendName:"cpu",kernelFunc:X0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){const s=mu({inputs:{input:r},backend:t}),i=XF({inputs:{x:s},backend:t}),a=cd({inputs:{input:r},backend:t}),o=X0({inputs:{x:a},backend:t}),l=rs({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return w_({backend:t,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const zoe={kernelName:mm,backendName:"cpu",kernelFunc:XF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UF(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return B0({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach(c=>{ar(i,c.shape,"All tensors passed to stack must have matching shapes"),M(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const d=B0({inputs:{input:c},backend:t,attrs:{dim:s}});return o.push(d),d}),u=dd({inputs:l,backend:t,attrs:{axis:s}});return o.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const Doe={kernelName:ym,backendName:"cpu",kernelFunc:UF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Poe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:i,constantValue:a}=r;Pe(s,"pad");const o=i.map((y,b)=>y[0]+s.shape[b]+y[1]),l=i.map(y=>y[0]),u=t.data.get(s.dataId).values,c=ie(s.shape),d=s.shape.length,h=We(s.shape),p=ie(o),g=o.length,f=We(o),m=Vn(s.dtype,p);a!==0&&m.fill(a);for(let y=0;y<c;y++){const b=_u(y,d,h).map((v,w)=>v+l[w]),x=bi(b,g,f);m[x]=u[y]}return{dataId:t.write(m,o,s.dtype),shape:o,dtype:s.dtype}}const ZF={kernelName:bm,backendName:"cpu",kernelFunc:Poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $oe=yn((n,e)=>Math.pow(n,e)),Foe=zn(Kd,$oe),Goe={kernelName:Kd,backendName:"cpu",kernelFunc:Foe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ooe(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=e,o=s.map(m=>t.data.get(m.dataId).values),l=s.map(m=>m.shape),u=t.data.get(i.dataId).values,c=t.data.get(a.dataId).values,[d,h,p]=cF(o,l,u,i.shape,i.dtype,c,a.shape),g=d.map(m=>t.makeTensorInfo([m.length],"int32",m)),f=t.makeTensorInfo(p,i.dtype,h);return g.concat([f])}const Woe={kernelName:rx,backendName:"cpu",kernelFunc:Ooe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Voe(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:i}=e,a=t.data.get(r.dataId).values,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,[u,c]=dF(a,r.shape,r.dtype,o,s.shape,l,i.shape),d=t.makeTensorInfo([u.length],"int32",u),h=t.makeTensorInfo([c.length],r.dtype,c);return[d,h]}const Boe={kernelName:sx,backendName:"cpu",kernelFunc:Voe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xoe(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=r,u=t.data.get(s.dataId).values,c=t.data.get(i.dataId).values,d=t.data.get(a.dataId).values,h=o.map(m=>t.data.get(m.dataId).values),p=o.map(m=>m.shape),[g,f]=hF(u,s.shape,c,i.shape,i.dtype,d,a.shape,h,p,l);return t.makeTensorInfo(g,i.dtype,f)}const Uoe={kernelName:ix,backendName:"cpu",kernelFunc:Xoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zoe(n){const{backend:e,attrs:t}=n,{start:r,stop:s,dtype:i,step:a}=t,o=pF(r,s,a,i);return e.makeTensorInfo([o.length],i,o)}const Hoe={kernelName:ax,backendName:"cpu",kernelFunc:Zoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Koe=Rt(Yd,n=>1/n),Yoe={kernelName:Yd,backendName:"cpu",kernelFunc:Koe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function joe(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;Pe(s,"resizeBilinear");const l=We(s.shape),[u,c]=o,[d,h,p,g]=s.shape,f=t.data.get(s.dataId).values,m=new Float32Array(ie([d,u,c,g])),y=[i&&u>1?h-1:h,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let T=0;T<d;T++)for(let k=0;k<u;k++){let S;a?S=v*(k+.5)-.5:S=v*k;const C=Math.max(0,Math.floor(S)),_=S-C,z=Math.min(h-1,Math.ceil(S)),P=T*l[0]+C*l[1],R=T*l[0]+z*l[1];for(let A=0;A<c;A++){let F;a?F=w*(A+.5)-.5:F=w*A;const B=Math.max(0,Math.floor(F)),K=F-B,L=Math.min(p-1,Math.ceil(F)),O=P+B*l[2],U=R+B*l[2],ee=P+L*l[2],G=R+L*l[2];for(let Q=0;Q<g;Q++){const ne=f[O+Q],X=f[U+Q],ue=f[ee+Q],le=f[G+Q],pe=ne+(ue-ne)*K,ge=X+(le-X)*K,be=pe+(ge-pe)*_;m[x++]=be}}}return t.makeTensorInfo([d,u,c,g],"float32",m)}const Qoe={kernelName:Tm,backendName:"cpu",kernelFunc:joe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Joe(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r;Pe([i,s],"resizeBilinearGrad");const o=We(s.shape),[l,u,c,d]=s.shape,[,h,p]=i.shape,g=new Float32Array(l*u*c*d),f=[a&&h>1?u-1:u,a&&p>1?c-1:c],m=[a&&h>1?h-1:h,a&&p>1?p-1:p],y=f[0]/m[0],b=f[1]/m[1],x=t.data.get(i.dataId).values;let v=0;for(let w=0;w<l;w++){const T=w*o[0];for(let k=0;k<h;k++){const S=k*y,C=Math.floor(S),_=Math.min(Math.ceil(S),u-1),z=T+C*o[1],P=T+_*o[1],R=S-C,A=1-R;for(let F=0;F<p;F++){const B=F*b,K=Math.floor(B),L=Math.min(Math.ceil(B),c-1),O=B-K,U=1-O,ee=z+K*o[2],G=z+L*o[2],Q=P+K*o[2],ne=P+L*o[2],X=A*U,ue=A*O,le=R*U,pe=R*O;for(let ge=0;ge<d;ge++){const be=x[v++];g[ee+ge]+=be*X,g[G+ge]+=be*ue,g[Q+ge]+=be*le,g[ne+ge]+=be*pe}}}}return t.makeTensorInfo([l,c,u,d],"float32",g)}const qoe={kernelName:ux,backendName:"cpu",kernelFunc:Joe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ele(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;Pe(s,"resizeNearestNeighbor");const l=We(s.shape),[u,c]=o,[d,h,p,g]=s.shape,f=t.data.get(s.dataId).values,m=new Float32Array(d*u*c*g),y=[i&&u>1?h-1:h,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let T=0;T<d;T++){const k=T*l[0];for(let S=0;S<u;S++){const C=a?x*(S+.5):x*S;let _=Math.min(h-1,i?Math.round(C):Math.floor(C));a&&(_=Math.max(0,_));const z=k+_*l[1];for(let P=0;P<c;P++){const R=a?v*(P+.5):v*P;let A=Math.min(p-1,i?Math.round(R):Math.floor(R));a&&(A=Math.max(0,A));const F=z+A*l[2];for(let B=0;B<g;B++){const K=f[F+B];m[w++]=K}}}}return t.makeTensorInfo([d,u,c,g],s.dtype,m)}const tle={kernelName:Sm,backendName:"cpu",kernelFunc:ele};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nle(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r;Pe([i,s],"resizeNearestNeighborGrad");const o=We(s.shape),l=We(i.shape),[u,c,d,h]=s.shape,[,p,g]=i.shape,f=new Float32Array(u*c*d*h),m=t.data.get(i.dataId).values,y=[a&&p>1?c-1:c,a&&g>1?d-1:d],b=[a&&p>1?p-1:p,a&&g>1?g-1:g],x=y[0]/b[0],v=y[1]/b[1],w=1/x,T=1/v,k=Math.ceil(w)*2+2,S=Math.ceil(T)*2+2;for(let C=0;C<u;C++){const _=C*o[0];for(let z=0;z<c;z++){const P=_+z*o[1],R=Math.floor(z*w),A=Math.floor(R-k/2);for(let F=0;F<d;F++){const B=P+F*o[2],K=Math.floor(F*T),L=Math.floor(K-S/2);for(let O=0;O<h;O++){let U=0;for(let ee=0;ee<k;ee++){const G=ee+A;if(G<0||G>=p)continue;const Q=_+G*l[1],ne=G*x,X=Math.min(c-1,a?Math.round(ne):Math.floor(ne));if(z===X)for(let ue=0;ue<S;ue++){const le=ue+L;if(le<0||le>=g)continue;const pe=Q+le*l[2],ge=le*v,be=Math.min(d-1,a?Math.round(ge):Math.floor(ge));F===be&&(U+=m[pe+O])}}f[B+O]=U}}}}return t.makeTensorInfo(s.shape,s.dtype,f)}const rle={kernelName:lx,backendName:"cpu",kernelFunc:nle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sle(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:i}=r;Pe(s,"reverse");const a=s.shape.length,o=lt(i,s.shape);if(a===0)return la({inputs:{x:s},backend:t});const l=new In(s.shape,s.dtype),u=t.bufferSync(s);for(let c=0;c<l.size;c++){const d=l.indexToLoc(c),h=d.slice();o.forEach(p=>h[p]=s.shape[p]-1-h[p]),l.set(u.get(...h),...d)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const ile={kernelName:Im,backendName:"cpu",kernelFunc:sle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ale={kernelName:Cx,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:i,center:a}=e,o=t,l=Vn(r.dtype,ie(r.shape)),[u,c,d,h]=r.shape,[p,g]=Tk(a,c,d),f=255,m=Math.sin(s),y=Math.cos(s),b=o.data.get(r.dataId).values;for(let x=0;x<u;x++){const v=x*d*c*h;for(let w=0;w<c;w++){const T=w*(d*h);for(let k=0;k<d;k++){const S=k*h;for(let C=0;C<h;C++){const _=[u,w,k,C],z=_[2],P=_[1];let R=(z-p)*y-(P-g)*m,A=(z-p)*m+(P-g)*y;R=Math.round(R+p),A=Math.round(A+g);let F=i;if(typeof i!="number"&&(C===3?F=f:F=i[C]),R>=0&&R<d&&A>=0&&A<c){const K=A*(d*h),L=R*h,O=v+K+L+C;F=b[O]}const B=v+T+S+C;l[B]=F}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ole=Rt(Jd,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),lle={kernelName:Jd,backendName:"cpu",kernelFunc:ole};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ule(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=ll(i,s,a),h=!0,p=t.bufferSync(s),g=t.bufferSync(i),f=Gl(p,g,a,d,u,l,o,c,0,h);return t.makeTensorInfo(a,f.dtype,f.values)}const cle={kernelName:cx,backendName:"cpu",kernelFunc:ule};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dle(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<e?t=s+1:r=s;return r}function hle(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<=e?t=s+1:r=s;return r}function ple(n,e,t,r,s,i){const a=ln("int32",t*s);for(let o=0;o<t;++o){const l=n.slice(o*r,(o+1)*r),u=o*s;for(let c=0;c<s;++c)a[u+c]=i==="left"?dle(l,e[c+u]):hle(l,e[c+u])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fle(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:i}=e,{side:a}=r,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,u=ple(o,l,s.shape[0],s.shape[1],i.shape[1],a);return t.makeTensorInfo(i.shape,"int32",u)}const mle={kernelName:hx,backendName:"cpu",kernelFunc:fle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gle(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:i}=e;Pe([r,s,i],"select");const a=r.shape.length,o=t.data.get(r.dataId).values,l=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values,c=Vr(s.dtype,i.dtype),d=sr(ie(s.shape),c);let h=0;const p=a===0||a>1||s.shape.length===1?1:ie(s.shape.slice(1));for(let g=0;g<o.length;g++)for(let f=0;f<p;f++)o[g]===1?d[h++]=l[g]:d[h++]=u[g];return t.makeTensorInfo(s.shape,c,d)}const yle={kernelName:km,backendName:"cpu",kernelFunc:gle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ble=hv,xle=pv,vle=Rt(eh,n=>n>=0?xle*n:ble*(Math.exp(n)-1)),wle={kernelName:eh,backendName:"cpu",kernelFunc:vle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sle=Rt(rh,n=>n<0?-1:n>0?1:0),Tle={kernelName:rh,backendName:"cpu",kernelFunc:Sle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ile=Rt(th,n=>Math.sin(n)),kle={kernelName:th,backendName:"cpu",kernelFunc:Ile};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cle=Rt(nh,n=>Math.sinh(n)),_le={kernelName:nh,backendName:"cpu",kernelFunc:Cle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mle=11920928955078125e-23,N3=Math.log(Mle)+2,Nle=Rt(ih,n=>{const e=n>-N3,t=n<N3,r=Math.exp(n);let s;return t?s=r:e?s=n:s=Math.log(1+r),s}),Ele={kernelName:ih,backendName:"cpu",kernelFunc:Nle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rle(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,paddings:a}=r;Pe([s],"spaceToBatchND");const o=ie(i),l=[[0,0]];l.push(...a);for(let m=1+i.length;m<s.shape.length;++m)l.push([0,0]);const u=ZF.kernelFunc({inputs:{x:s},backend:t,attrs:{paddings:l,constantValue:0}}),c=ng(u.shape,i,o,!1),d=rg(c.length,i.length,!1),h=sg(u.shape,i,o,!1),p=Ot({inputs:{x:u},backend:t,attrs:{shape:c}}),g=Hr({inputs:{x:p},backend:t,attrs:{perm:d}}),f=Ot({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),f}const Lle={kernelName:Mm,backendName:"cpu",kernelFunc:Rle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ale(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:i,defaultValue:a}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=t.data.get(r.dataId).values,l=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values,c=t.data.get(a.dataId).values[0],[d,h,p,g,f]=yF(o,r.shape,r.dtype,l,s.dtype,u,c);return[t.makeTensorInfo(h,r.dtype,d),t.makeTensorInfo([h[0]],s.dtype,p),t.makeTensorInfo([g.length],"bool",new Uint8Array(g.map(m=>Number(m)))),t.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}const zle={kernelName:px,backendName:"cpu",kernelFunc:Ale};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dle(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:i}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(t.data.get(s.dataId).values),o=t.data.get(r.dataId).values,l=Array.from(t.data.get(i.dataId).values),[u,c,d]=bF(o,r.shape,r.dtype,a,l);return[t.makeTensorInfo(c,r.dtype,u),t.makeTensorInfo([d.length],i.dtype,new Int32Array(d))]}const Ple={kernelName:fx,backendName:"cpu",kernelFunc:Dle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $le(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,[u,c]=y_(a,r.shape,r.dtype,o,l,!0);return t.makeTensorInfo(c,r.dtype,u)}const Fle={kernelName:mx,backendName:"cpu",kernelFunc:$le};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gle(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,[u,c]=y_(a,r.shape,r.dtype,o,l);return t.makeTensorInfo(c,r.dtype,u)}const Ole={kernelName:gx,backendName:"cpu",kernelFunc:Gle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wle(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=ll(i,s,o),p=!1,g=t.bufferSync(s);let f;switch(i.dtype){case"bool":{const m=t.bufferSync(i),y=!!t.data.get(a.dataId).values[0];f=Gl(g,m,o,h,c,u,l,d,y,p);break}case"float32":{const m=t.bufferSync(i),y=t.data.get(a.dataId).values[0];f=Gl(g,m,o,h,c,u,l,d,y,p);break}case"int32":{const m=t.bufferSync(i),y=t.data.get(a.dataId).values[0];f=Gl(g,m,o,h,c,u,l,d,y,p);break}case"string":{const m=t.bufferSync(i),y=$a(t.data.get(a.dataId).values[0]);f=Gl(g,m,o,h,c,u,l,d,y,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return t.makeTensorInfo(o,f.dtype,f.values)}const Vle={kernelName:yx,backendName:"cpu",kernelFunc:Wle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ble(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=lt(a,s.shape)[0],l=Fk(s,i,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map(d=>{const h=[...c];h[o]=d;const p=gu({inputs:{x:s},backend:t,attrs:{begin:u,size:h}});return u[o]+=d,p})}const Xle={kernelName:Nm,backendName:"cpu",kernelFunc:Ble};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ule={kernelName:bx,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,r=e;Pe(t,"square");const s=r.data.get(t.dataId).values,i=new Float32Array(s.length);for(let a=0;a<s.length;++a){const o=s[a];i[a]=o*o}return{dataId:r.write(i,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zle=Rt(hh,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),Hle={kernelName:hh,backendName:"cpu",kernelFunc:Zle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kle(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r;Pe(s,"stridedSlice");const{finalShapeSparse:p,finalShape:g,isIdentity:f,sliceDim0:m,isSimpleSlice:y,begin:b,end:x,strides:v}=vk(s.shape,i,a,o,l,u,c,d,h);let w;if(f)w=Ot({inputs:{x:s},backend:t,attrs:{shape:g}});else if(m||y){M(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const T=yk(b,x,v),k=gu({inputs:{x:s},backend:t,attrs:{begin:b,size:T}});w=Ot({inputs:{x:k},backend:t,attrs:{shape:g}}),t.disposeIntermediateTensorInfo(k)}else{const T=t.bufferSync(s),k=wF(p,T,v,b);w=t.makeTensorInfo(g,k.dtype,k.values)}return w}const Yle={kernelName:xx,backendName:"cpu",kernelFunc:Kle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jle(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=e,h=t.data.get(c.dataId).values,p=t.data.get(d.dataId).values,[g,f]=SF(h,p,s,i,a,o,l,u);return[t.makeTensorInfo([g.length],"string",g),t.makeTensorInfo(d.shape,"int32",f)]}const Qle={kernelName:vx,backendName:"cpu",kernelFunc:jle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jle(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:i,delimiter:a}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=t.data.get(i.dataId).values,l=t.data.get(a.dataId).values[0],[u,c,d]=TF(o,l,s),h=c.length;return[t.makeTensorInfo([h,2],"int32",u),t.makeTensorInfo([h],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const qle={kernelName:wx,backendName:"cpu",kernelFunc:Jle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eue(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(i.dataId).values,o=IF(a,s);return t.makeTensorInfo(i.shape,"int32",o)}const tue={kernelName:Sx,backendName:"cpu",kernelFunc:eue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nue=Rt(uh,n=>Math.tan(n)),rue={kernelName:uh,backendName:"cpu",kernelFunc:nue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sue=Rt(ch,n=>Math.tanh(n)),iue={kernelName:ch,backendName:"cpu",kernelFunc:sue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aue(n){const{inputs:e,backend:t}=n,{tensor:r,indices:s,updates:i}=e,{sliceRank:a,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=ll(i,s,r.shape),d=!1,h=t.bufferSync(s),p=t.bufferSync(i),g=t.bufferSync(r),f=Gl(h,p,r.shape,c,l,o,a,u,g,d);return t.makeTensorInfo(r.shape,f.dtype,f.values)}const oue={kernelName:dx,backendName:"cpu",kernelFunc:aue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lue(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:i}=r;Pe(s,"tile");const a=CF(t.bufferSync(s),i);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const uue={kernelName:dh,backendName:"cpu",kernelFunc:lue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cue(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:i,sorted:a}=r;Pe(s,"topk");const o=t.data.get(s.dataId).values,[l,u]=MF(o,s.shape,s.dtype,i,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const due={kernelName:Tx,backendName:"cpu",kernelFunc:cue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hue(n){const{inputs:e,attrs:t,backend:r}=n,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=t,[c,d,h,p]=s.shape,[g,f]=u??[d,h],m=[c,g,f,p],y=We(s.shape),b=y[0],x=y[1],v=y[2],w=We(m),T=w[0],k=w[1],S=w[2],C=Vn(s.dtype,ie(m));C.fill(l);const _=r.data.get(s.dataId).values,z=r.data.get(i.dataId).values;for(let P=0;P<c;++P){const R=i.shape[0]===1?z:z.subarray(P*8,P*8+8);for(let A=0;A<g;++A)for(let F=0;F<f;++F)for(let B=0;B<p;++B){let K;const L=R[6]*F+R[7]*A+1;if(L===0)continue;const O=(R[0]*F+R[1]*A+R[2])/L,U=(R[3]*F+R[4]*A+R[5])/L,ee=E3(O,h,o),G=E3(U,d,o);switch(a){case"nearest":K=bue(_,d,h,b,x,v,P,G,ee,B,l);break;case"bilinear":K=xue(_,d,h,b,x,v,P,G,ee,B,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const Q=P*T+A*k+F*S+B;C[Q]=K}return r.makeTensorInfo(m,s.dtype,C)}return{dataId:r.write(C,m,s.dtype),shape:s.shape,dtype:s.dtype}}const pue={kernelName:Ix,backendName:"cpu",kernelFunc:hue};function E3(n,e,t){switch(t){case"reflect":return fue(n,e);case"wrap":return mue(n,e);case"nearest":return yue(n,e);case"constant":default:return gue(n)}}function fue(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=2*e;t<r&&(t=r*Math.trunc(-t/r)+t),t=t<-e?t+r:-t-1}else if(t>e-1)if(e<=1)t=0;else{const r=2*e;t-=r*Math.trunc(t/r),t>=e&&(t=r-t-1)}return Go(0,t,e-1)}function mue(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=e-1;t+=e*(Math.trunc(-t/r)+1)}else if(t>e-1)if(e<=1)t=0;else{const r=e-1;t-=e*Math.trunc(t/r)}return Go(0,t,e-1)}function gue(n,e){return n}function yue(n,e){return Go(0,n,e-1)}function gp(n,e,t,r,s,i,a,o,l,u,c){const d=a*r+o*s+l*i+u;return 0<=o&&o<e&&0<=l&&l<t?n[d]:c}function bue(n,e,t,r,s,i,a,o,l,u,c){const d=Math.round(o),h=Math.round(l);return gp(n,e,t,r,s,i,a,d,h,u,c)}function xue(n,e,t,r,s,i,a,o,l,u,c){const d=Math.floor(o),h=Math.floor(l),p=d+1,g=h+1,f=(g-l)*gp(n,e,t,r,s,i,a,d,h,u,c)+(l-h)*gp(n,e,t,r,s,i,a,d,g,u,c),m=(g-l)*gp(n,e,t,r,s,i,a,p,h,u,c)+(l-h)*gp(n,e,t,r,s,i,a,p,g,u,c);return(p-o)*f+(o-d)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vue(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:i}=e;Pe(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=NF(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}const wue={kernelName:kx,backendName:"cpu",kernelFunc:vue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sue(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],l=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==i&&(l[u++]=s.shape[p]);const c=new Array(a).fill(0),d=s.shape.slice();d[i]=1;const h=new Array(o);for(let p=0;p<h.length;p++){c[i]=p;const g=gu({inputs:{x:s},backend:t,attrs:{begin:c,size:d}});h[p]=Ot({inputs:{x:g},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(g)}return h}const Tue={kernelName:Lm,backendName:"cpu",kernelFunc:Sue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iue(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:i}=e,{numSegments:a}=r;Pe(s,"unsortedSegmentSum");const o=s.shape.length,l=i.shape.length,u=[],c=[],d=o-l;let h=i;for(let g=0;g<d;++g){const f=B0({inputs:{input:h},backend:t,attrs:{dim:g+1}});h=f,c.push(f)}for(let g=0;g<a;++g){const f=Ha(g,"int32"),m=t.makeTensorInfo([],"int32",f),y=X$({inputs:{a:m,b:h},backend:t}),b=Yo({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),x=Pv({inputs:{a:b,b:s},backend:t}),v=mg({inputs:{x},backend:t,attrs:{axis:0,keepDims:!1}});u.push(v),c.push(m),c.push(y),c.push(b),c.push(x),c.push(v)}const p=UF({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),p}const kue={kernelName:Am,backendName:"cpu",kernelFunc:Iue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cue=[vse,tre,Sse,Ise,ore,Cse,Mse,Ese,Lse,zse,Pse,Fse,Ose,Bse,Use,Kse,jse,Jse,eie,bse,nie,sie,aie,ure,lie,ire,dre,cie,nre,hie,fie,mie,yie,xie,wie,Tie,kie,_ie,Nie,Rie,Aie,Die,$ie,Gie,Oie,Vie,Xie,Zie,Hie,Kie,Yie,Qie,eae,dse,nae,hre,cae,pre,dae,mre,yae,bae,vae,yre,xre,Sae,Iae,Cae,Mae,wre,Tre,rre,Eae,pie,Lae,zae,Pae,hse,kre,_re,Fae,Nre,Oae,Bae,Uae,Kae,jae,Jae,qae,Rre,toe,roe,ioe,ooe,uoe,doe,poe,Are,moe,boe,woe,Dre,$re,Ioe,_oe,Eoe,Gre,Loe,zoe,Doe,ZF,Goe,fse,Vre,Woe,Boe,Uoe,Hoe,sre,p2,Yoe,mse,gse,yse,Qoe,qoe,tle,rle,ile,ale,lle,jre,cle,mle,yle,wle,Jre,Tle,kle,_le,qre,xoe,Ele,Lle,zle,Ple,Fle,Ole,Vle,Xle,nse,Ule,sse,ase,Hle,Yle,Qle,qle,tue,cse,Jie,rue,iue,oue,uue,due,pue,Ore,wue,Tue,kue,Aoe];for(const n of Cue)jr(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nl={},dy={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function HF(n,e){Nl[n]=e}function Ci(n,e){if(!(n in Nl)||e!=null){const r=Mue(n,e);if(r!==null)Nl[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=Nl[n];return t==null||t.isContextLost()?(delete Nl[n],Ci(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Nl[n])}function _ue(n){if(!q().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Mue(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??_ue(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete Nl[n]},!1),q().getBool("SOFTWARE_WEBGL_ENABLED")&&(dy.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",dy)||t.getContext("experimental-webgl",dy):t.getContext("webgl2",dy)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xf;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(xf||(xf={}));var Is;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Is||(Is={}));var qn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(qn||(qn={}));function gg(n,e){return[e,n]}function Nue(n,e){return n*e}function hy(n){const e=ie(n),t=Math.ceil(e/4);return x0(t)}function _h(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function Eue(n,e){const[t,r]=_h(n,e);return t*r*4}function S_(n,e){const t=n;let r,s,i,a,o,l,u,c,d,h;return q().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,i=t.RGBA16F,a=t.RGBA32F,o=t.RED,u=4,c=1,d=t.HALF_FLOAT,h=t.FLOAT,l=t.RGBA8):(r=n.RGBA,s=n.RGBA,i=n.RGBA,a=t.RGBA,o=n.RGBA,u=4,c=4,d=e!=null?e.HALF_FLOAT_OES:null,h=n.FLOAT,l=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(n,e){const t=e();return q().getBool("DEBUG")&&Rue(n),t}function Rue(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+YF(n,e))}const Lue=596e-10,Aue=65504;function KF(n){return!!(q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||Lue<Math.abs(n)&&Math.abs(n)<Aue)}function YF(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function yp(n,e){return eo(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function jF(n,e){const t=eo(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ke(n,()=>n.shaderSource(t,e)),ke(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function QF(n,e){const t=eo(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ke(n,()=>n.shaderSource(t,e)),ke(n,()=>n.compileShader(t)),q().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw T_(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const zue=/ERROR: [0-9]+:([0-9]+):/g;function T_(n,e){const t=zue.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),i=s.length.toString().length+2,a=s.map((d,h)=>Bl((h+1).toString(),i)+d);let o=0;for(let d=0;d<a.length;d++)o=Math.max(a[d].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Bl(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function JF(n){return eo(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function qF(n,e){if(ke(n,()=>n.linkProgram(e)),!q().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Oy(n,e){if(ke(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function eG(n,e){const t=eo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ke(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),ke(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function tG(n,e){const t=eo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ke(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),ke(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function Due(){return q().getNumber("WEBGL_VERSION")===2?1:4}function nG(n){return eo(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function rG(n,e){const t=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function sG(n){return eo(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function m2(n,e,t,r,s,i,a){const o=n.getAttribLocation(e,t);return o===-1?!1:(ke(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),ke(n,()=>n.vertexAttribPointer(o,s,n.FLOAT,!1,i,a)),ke(n,()=>n.enableVertexAttribArray(o)),!0)}function iG(n,e,t){cG(n,t),ke(n,()=>n.activeTexture(n.TEXTURE0+t)),ke(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function Pue(n,e){cG(n,e),ke(n,()=>n.activeTexture(n.TEXTURE0+e)),ke(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function aG(n,e,t){return eo(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function oG(n,e,t){return n.getUniformLocation(e,t)}function lG(n,e,t,r){ke(n,()=>iG(n,e,r)),ke(n,()=>n.uniform1i(t,r))}function $ue(n){ke(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,null)),ke(n,()=>n.viewport(0,0,n.canvas.width,n.canvas.height)),ke(n,()=>n.scissor(0,0,n.canvas.width,n.canvas.height))}function Wy(n,e,t){ke(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),ke(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function g2(n,e){ke(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),ke(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function bp(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+uG(n,e))}function uG(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function eo(n,e,t){const r=ke(n,()=>e());if(r==null)throw new Error(t);return r}function cG(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function yu(n,e=2){return ie(n.slice(0,n.length-e))}function bu(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function xp(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[yu(n),...bu(n)]),e}function dG(n,e=!1){let t=q().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=q().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&q().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((o,l)=>l>=n.length-2?vb(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Za(n).newShape);let s=ie(n),i=null;n.length<=1&&s<=t?i=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?i=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?i=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?i=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?i=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(i=[n[0],n[1]*n[2]*n[3]]);const a=i!=null&&Math.max(...i)>r&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(i==null||a)if(e){const o=yu(n);let l=2,u=2;n.length&&([l,u]=bu(n)),s=o*(l/2)*(u/2),i=x0(s).map(c=>c*2)}else i=x0(s);return i}function py(n){return n%2===0}function vf(n,e){if(n=n.slice(-2),e=e.slice(-2),ht(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||py(t)&&py(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&py(n[0])&&py(e[0])}let Vy,By;function hG(n){if(Vy==null){const e=Ci(n);Vy=e.getParameter(e.MAX_TEXTURE_SIZE)}return Vy}function Fue(){Vy=null}function Gue(){By=null}function pG(n){if(By==null){const e=Ci(n);By=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,By)}function fG(n){if(n===0)return 0;let e;const t=Ci(n);return ks(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:ks(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function ks(n,e){return n.getExtension(e)!=null}function y2(n){try{if(Ci(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function mG(n){if(n===0)return!1;const e=Ci(n);if(n===1){if(!ks(e,"OES_texture_float"))return!1}else if(!ks(e,"EXT_color_buffer_float"))return!1;return b2(e)}function gG(n){if(n===0)return!1;const e=Ci(n);if(n===1){if(!ks(e,"OES_texture_float")||!ks(e,"WEBGL_color_buffer_float"))return!1}else{if(ks(e,"EXT_color_buffer_float"))return b2(e);const t="EXT_color_buffer_half_float";if(ks(e,t)){const r=e.getExtension(t);return Oue(e,r)}return!1}return b2(e)}function b2(n){const e=S_(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const s=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),s}function Oue(n,e){const t=S_(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const s=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,s),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(s),i}function yG(n){return n!==2?!1:Ci(n).fenceSync!=null}function Mh(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&M(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}const Wue=Object.freeze(Object.defineProperty({__proto__:null,assertNotComplex:Mh,bindCanvasToFramebuffer:$ue,bindColorTextureToFramebuffer:Wy,bindTextureToProgramUniformSampler:lG,bindTextureUnit:iG,bindVertexBufferToProgramAttribute:m2,callAndCheck:ke,canBeRepresented:KF,createFragmentShader:QF,createFramebuffer:sG,createProgram:JF,createStaticIndexBuffer:tG,createStaticVertexBuffer:eG,createTexture:nG,createVertexShader:jF,getBatchDim:yu,getExtensionOrThrow:yp,getFramebufferErrorMessage:uG,getMaxTexturesInShader:pG,getNumChannels:Due,getProgramUniformLocation:oG,getProgramUniformLocationOrThrow:aG,getRowsCols:bu,getShapeAs3D:xp,getTextureShapeFromLogicalShape:dG,getWebGLDisjointQueryTimerVersion:fG,getWebGLErrorMessage:YF,getWebGLMaxTextureSize:hG,hasExtension:ks,isCapableOfRenderingToFloatTexture:mG,isDownloadFloatTextureEnabled:gG,isReshapeFree:vf,isWebGLFenceEnabled:yG,isWebGLVersionEnabled:y2,linkProgram:qF,logShaderSourceAndInfoLog:T_,resetMaxTextureSize:Fue,resetMaxTexturesInShader:Gue,unbindColorTextureFromFramebuffer:g2,unbindTextureUnit:Pue,validateFramebuffer:bp,validateProgram:Oy,validateTextureSize:rG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $e=q();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>y2(2)?2:y2(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>hG($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>pG($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=$e.getNumber("WEBGL_VERSION");return n===0?0:fG(n)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!jT());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>mG($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>gG($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>yG($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>jT()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);$e.registerFlag("WEBGL_EXP_CONV",()=>!1);$e.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>$e.getBool("IS_TEST"));$e.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);$e.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);$e.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);$e.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Er(){let n,e,t,r,s,i,a,o,l,u;return q().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o=q().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ou(n,e,t="index"){const r=We(e);return r.map((s,i)=>{const a=`int ${n[i]} = ${t} / ${s}`,o=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${s}`:`index -= ${n[i]} * ${s}`;return`${a}; ${o};`}).join("")}function $v(n,e,t="index"){const r=We(e);return r.map((s,i)=>{const a=`int ${n[i]} = ${t} / outShapeStrides[${i}]`,o=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * outShapeStrides[${i}]`:`index -= ${n[i]} * outShapeStrides[${i}]`;return`${a}; ${o};`}).join("")}function Vue(n,e){const t=n.length,r=n.map(i=>`${e}[${i}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let i=t-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s}function Bue(n,e,t="index"){const r=n.map((i,a)=>a),s=Vue(r,e);return s.map((i,a)=>{const o=`int ${n[a]} = ${t} / ${s[a]}`,l=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${s[a]}`:`index -= ${n[a]} * ${s[a]}`;return`${o}; ${l};`}).join("")}function I_(n){const e=We(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function k_(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const bG=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:xG}=bP;function Xue(n,e,t){const r=[];if(n.forEach(h=>{const p=ie(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${p>1?`[${p}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`)),t.enableShapeUniforms){const{uniformShape:g}=C_(t.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(g.length){case 1:r.push(`uniform int ${h.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${h.name}Shape;`);break}r.push(`uniform ivec2 ${h.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(h=>{r.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});const s=r.join(`
`),i=n.map(h=>Uue(h,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,o=Er(),l=Kue(o);let u,c,d=Que(o);return e.isPacked?(u=Zue(e.logicalShape,a,t.enableShapeUniforms),c=jue(o)):(u=Hue(e.logicalShape,a,t.enableShapeUniforms),c=Yue(o)),t.packedInputs&&(d+=tce),[d,l,c,s,u,i,t.userCode].join(`
`)}function Nh(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return pce(n,e);case 1:return mce(n,e);case 2:return yce(n,e);case 3:return xce(n,e);case 4:return wce(n,e);case 5:return Sce(n);case 6:return Tce(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function vG(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return hce(n);case 1:return fce(n,e);case 2:return gce(n,e);case 3:return bce(n,e);default:return vce(n,e)}}function Uue(n,e,t=!1,r){let s="";t?s+=vG(n,r):s+=Nh(n,r);const i=n.shapeInfo.logicalShape,a=e.logicalShape;return i.length<=a.length&&(t?s+=Ice(n,e):s+=kce(n,e)),s}function Zue(n,e,t){switch(n.length){case 0:return wG();case 1:return nce(n,e,t);case 2:return cce(n,e,t);case 3:return sce(n,e,t);default:return ace(n,e,t)}}function Hue(n,e,t){switch(n.length){case 0:return wG();case 1:return rce(n,e,t);case 2:return dce(n,e,t);case 3:return ice(n,e,t);case 4:return oce(n,e,t);case 5:return lce(n,e);case 6:return uce(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function Kue(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function Yue(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function jue(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function Que(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Jue}
    ${que}
    ${ece}
  `}const Jue=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,que=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ece=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,tce=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function wG(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function nce(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function rce(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function sce(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),i=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function ice(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${$v(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=Ou(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function ace(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),i=s*Math.ceil(n[n.length-2]/2);let a=i,o="",l="b, r, c";for(let u=2;u<n.length-1;u++)a*=n[n.length-u-1],o=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+o,l=`b${u}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${l});
    }
  `}function oce(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${$v(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=Ou(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function lce(n,e){const t=Ou(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function uce(n,e){const t=Ou(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function cce(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(ht(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function dce(n,e,t){return ht(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Wu(n){return`offset${n}`}function hce(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Er();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function pce(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,i]=n.shapeInfo.texShape;if(s===1&&i===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Wu(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[o,l]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function fce(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,i=Er();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${i.texture2D}(${t}, uv);
    }
  `}function mce(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Eh(n)}
      }
    `;const s=n.shapeInfo.texShape,i=s[0],a=s[1];if(a===1&&i===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=Wu(t);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);
        return sampleTexture(${t}, uv);
      }
    `:i===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${o});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});
      return sampleTexture(${t}, uv);
    }
  `}function gce(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.shapeInfo.texShape,a=i[0],o=i[1],l=Er();if(i!=null&&ht(t,i))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function yce(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.shapeInfo.texShape;if(i!=null&&ht(t,i)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const h=i[0],p=i[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:o}=Za(t),l=a;if(l.length<t.length){const h=Rh(n,l),p=["row","col"];return`
      ${Nh(h,e)}
      float ${s}(int row, int col) {
        return ${s}(${Lh(p,o)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Eh(n)}
      }
    `;const u=i[0],c=i[1],d=Wu(r);return c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:u===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${r}, uv);
  }
`}function bce(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(t[0]===1){const h=t.slice(1),p=[1,2],g=Rh(n,h),f=["b","row","col"];return`
        ${vG(g,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${Lh(f,p)});
        }
      `}const o=Er();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;const l=a[0],u=a[1],c=Math.ceil(t[2]/2),d=c*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${d}, ${c}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function xce(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t[1]*t[2],a=t[2],{newShape:o,keptDims:l}=Za(t),u=o;if(u.length<t.length){const f=Rh(n,u),m=["row","col","depth"];return`
        ${Nh(f,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${Lh(m,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${a}, 1)));
        ${Eh(n)}
      }
    `;const c=n.shapeInfo.texShape,d=c[0],h=c[1],p=n.shapeInfo.flatOffset;if(h===i&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(h===a&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;const g=Wu(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${g};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${a} + depth + ${g};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${r}, uv);
      }
  `}function vce(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Er();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const i=n.shapeInfo.logicalShape,a=i.length,o=n.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],d=Math.ceil(i[a-1]/2);let h=d*Math.ceil(i[a-2]/2),p="int b, int row, int col",g=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let f=2;f<a-1;f++)p=`int b${f}, `+p,h*=i[a-f-1],g=`b${f} * ${h} + `+g;return`
    vec4 ${r}(${p}) {
      int index = ${g};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${s.texture2D}(${t}, uv);
    }
  `}function wce(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t[3],a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:u}=Za(t);if(l.length<t.length){const b=Rh(n,l),x=["row","col","depth","depth2"];return`
      ${Nh(b,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${Lh(x,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${a}, ${i}, 1)));
        ${Eh(n)}
      }
    `;const c=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1],g=`int stride2 = ${r}Shape[3];`,f=`int stride1 = ${r}Shape[2] * stride2;`,m=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&c==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${g}
        ${f}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(p===i&&c==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;const y=Wu(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${g}
      ${f}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function Sce(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],i=e[3]*s,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=Za(e);if(l.length<e.length){const f=Rh(n,l),m=["row","col","depth","depth2","depth3"];return`
      ${Nh(f)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Lh(m,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${a}, ${i}, ${s})) +
          depth3;
        ${Eh(n)}
      }
    `;const c=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&c==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===s&&c==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=Wu(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} + depth * ${i} +
          depth2 * ${s} + depth3 + ${g};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Tce(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:i}=Za(e);if(s.length<e.length){const m=Rh(n,s),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Nh(m)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Lh(y,i)});
      }
    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Eh(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],g=h[1];if(g===c&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(g===a&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Wu(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${a} + depth4 + ${f};
      vec2 uv = uvFromFlat(${p}, ${g}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Eh(n){const e=n.name,t=ie(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Ice(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",i=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=xG(n.shapeInfo.logicalShape,e.logicalShape),l=zt(a),u=a-i;let c;const d=["x","y","z","w","u","v"];i===0?c="":a<2&&o.length>=1?c="coords = 0;":c=o.map(m=>`coords.${d[m+u]} = 0;`).join(`
`);let h="";a<2&&i>0?h="coords":h=n.shapeInfo.logicalShape.map((m,y)=>`coords.${d[y+u]}`).join(", ");let p="return outputValue;";const g=ie(n.shapeInfo.logicalShape)===1,f=ie(e.logicalShape)===1;if(i===1&&!g&&!f)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!f)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(o.length){const m=i-2,y=i-1;o.indexOf(m)>-1&&o.indexOf(y)>-1?p="return vec4(outputValue.x);":o.indexOf(m)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${r}(${h});
      ${p}
    }
  `}function kce(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,a=n.shapeInfo.texShape,o=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&o===l&&n.shapeInfo.flatOffset==null&&ht(a,i))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=zt(l),c=xG(n.shapeInfo.logicalShape,e.logicalShape),d=l-o;let h;const p=["x","y","z","w","u","v"];o===0?h="":l<2&&c.length>=1?h="coords = 0;":h=c.map(f=>`coords.${p[f+d]} = 0;`).join(`
`);let g="";return l<2&&o>0?g="coords":g=n.shapeInfo.logicalShape.map((f,m)=>`coords.${p[m+d]}`).join(", "),`
    float ${s}() {
      ${u} coords = getOutputCoords();
      ${h}
      return get${r}(${g});
    }
  `}function zt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function C_(n,e,t){const{newShape:r,keptDims:s}=Za(e),i=e.length,a=n&&i===3&&e[0]===1,o=a?e.slice(1):r,l=!n&&i>1&&!ht(e,t)&&r.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:s}}function Rh(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Lh(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cce(n,e,t,r){const s=t.map((c,d)=>{const h={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(h.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),i=s.map(c=>c.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=Xue(s,a,e),l=QF(n.gl,o),u=n.createProgram(l);return q().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},SG(n,e,u)))}function SG(n,e,t){const r=[],s=[];let i,a,o,l=null,u=null;u=n.getUniformLocation(t,"NAN",!1),q().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const c=!1;for(const d of e.variableNames){const h={name:d,uniform:n.getUniformLocation(t,d,c),offset:n.getUniformLocation(t,`offset${d}`,c)};e.enableShapeUniforms&&(h.shape=n.getUniformLocation(t,`${d}Shape`,c),h.texShape=n.getUniformLocation(t,`${d}TexShape`,c)),r.push(h)}if(e.enableShapeUniforms&&(i=n.getUniformLocation(t,"outShape",c),o=n.getUniformLocation(t,"outShapeStrides",c),a=n.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(const d of e.customUniforms)s.push(n.getUniformLocation(t,d.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:a}}function R3(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,i=e[r],a=i.shape;if(!ht(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&i.isUniform)return;const o=t.texShape,l=i.isUniform?null:i.texData.texShape;if(!ht(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function _ce(n,e,t,r,s){e.program.enableShapeUniforms||(R3(e.inShapeInfos,t),R3([e.outShapeInfo],[r]));const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):n.setOutputMatrixTexture(i.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),q().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const u=t[l],{uniform:c,offset:d,shape:h,texShape:p}=e.variablesLocations[l];if(h){const{uniformShape:g}=C_(e.program.packedInputs,u.shape,u.texData.texShape);switch(g.length){case 1:n.gl.uniform1iv(h,new Int32Array(g));break;case 2:n.gl.uniform2iv(h,new Int32Array(g));break;case 3:n.gl.uniform3iv(h,new Int32Array(g));break;case 4:n.gl.uniform4iv(h,new Int32Array(g));break}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(ie(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let g=u.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),n.gl.uniform1fv(c,g)}continue}u.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const o=e.outShapeLocation;if(o)switch(r.shape.length){case 1:n.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(o,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const l=We(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],d=s[l];if(u.type==="float")n.gl.uniform1fv(c,d);else if(u.type==="vec2")n.gl.uniform2fv(c,d);else if(u.type==="vec3")n.gl.uniform3fv(c,d);else if(u.type==="vec4")n.gl.uniform4fv(c,d);else if(u.type==="int")n.gl.uniform1iv(c,d);else if(u.type==="ivec2")n.gl.uniform2iv(c,d);else if(u.type==="ivec3")n.gl.uniform3iv(c,d);else if(u.type==="ivec4")n.gl.uniform4iv(c,d);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function Mce(n,e,t){let r="";e.concat(t).forEach(a=>{const o=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const l=a.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:d}=C_(n.packedInputs,a.shape,l);let h="",p="",g="";if(c.length===1&&n.packedInputs){const w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];h=`${w[0]>1}_${w[1]>1}`}else if(c.length===2&&!n.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!n.packedInputs){const w=We(c);g=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}const f=a.shape.length,m=c.length===2&&ht(a.shape,l),y=ie(a.shape)===1,b=du(a.shape,t.shape),x=!n.packedInputs&&f===t.shape.length&&ht(l,t.texData.texShape),v=n.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${f}_${x}_${u?d:""}_${c.length}_${y}_${b}_${m}_${h}_${p}_${g}_${v}_${o}`}else{const l=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${l}_${o}`}});const s=n.userCode;let i=n.constructor.name;return i+="_"+r+"_"+s+`${q().getNumber("WEBGL_VERSION")}`,i}function mr(n){return q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nce{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=xf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Er();this.outputShape=e,this.enableShapeUniforms=mr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?$v(["r","c","d"],e):Ou(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ece{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=xf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Er();this.outputShape=e,this.enableShapeUniforms=mr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?$v(["r","c","d"],e):Ou(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rce{constructor(e){this.variableNames=["A"],this.outTexUsage=Is.DOWNLOAD;const t=Er();this.outputShape=e,this.userCode=`
      ${bG}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lce{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Is.DOWNLOAD;const t=Er();this.outputShape=e,this.userCode=`
      ${bG}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ace={R:0,G:1,B:2,A:3};let L3=class{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Er();this.outputShape=e,this.enableShapeUniforms=mr(this.outputShape.length);let i="result";t&&(i="floor(result * 255. + 0.5)");let a="";for(let o=0;o<r.length;o++){const l=r[o];a+=`
          if(offset == ${o}) {
            result = values[${Ace[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?k_():I_(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zce{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Er();this.outputShape=e,this.enableShapeUniforms=mr(this.outputShape.length);let s="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){const l=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?k_():I_(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(n){const e=Er(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return jF(n,t)}function IG(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return eG(n,e)}function kG(n){const e=new Uint16Array([0,1,2,2,1,3]);return tG(n,e)}function yg(n,e,t,r,s,i){rG(e,t);const a=nG(n),o=n.TEXTURE_2D;return ke(n,()=>n.bindTexture(o,a)),ke(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),ke(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),ke(n,()=>n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST)),ke(n,()=>n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST)),q().getNumber("WEBGL_VERSION")===1?ke(n,()=>n.texImage2D(o,0,r,e,t,0,s,i,null)):ke(n,()=>n.texStorage2D(o,1,r,e,t)),ke(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function __(n){return n.internalFormatFloat}function CG(n,e,t,r){const[s,i]=gg(e,t);return yg(n,s,i,__(r),r.textureFormatFloat,n.FLOAT)}function M_(n){return n.internalFormatHalfFloat}function _G(n,e,t,r){const[s,i]=gg(e,t);return yg(n,s,i,M_(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function N_(n){return n.downloadTextureFormat}function MG(n,e,t,r){const[s,i]=gg(e,t);return yg(n,s,i,N_(r),n.RGBA,n.UNSIGNED_BYTE)}function E_(n){return n.internalFormatPackedFloat}function NG(n,e,t,r){const[s,i]=_h(e,t);return yg(n,s,i,E_(r),n.RGBA,n.FLOAT)}function R_(n){return n.internalFormatPackedHalfFloat}function EG(n,e,t,r){const[s,i]=_h(e,t);return yg(n,s,i,R_(r),n.RGBA,r.textureTypeHalfFloat)}function RG(n,e,t){return ke(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),m2(n,e,"clipSpacePos",t,3,20,0)&&m2(n,e,"uv",t,2,20,12)}function LG(n,e,t,r,s,i){ke(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,o,l;s instanceof Uint8Array?(a=new Uint8Array(t*r*4),o=n.UNSIGNED_BYTE,l=n.RGBA):(a=new Float32Array(t*r*4),o=n.FLOAT,l=i.internalFormatPackedFloat),a.set(s),q().getNumber("WEBGL_VERSION")===2?ke(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,o,a)):ke(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,r,0,n.RGBA,o,a)),ke(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function AG(n,e,t){ke(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?q().getNumber("WEBGL_VERSION")===2?ke(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):ke(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):q().getNumber("WEBGL_VERSION")===2?ke(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):ke(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),ke(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function zG(n,e,t,r){const s=n.createBuffer();ke(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const i=4*4*e*t;return ke(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),ke(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),ke(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function DG(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function PG(n,e,t,r){const[s,i]=gg(e,t),a=4,o=new Uint8Array(Nue(e*t,a));return ke(n,()=>n.readPixels(0,0,s,i,r.downloadTextureFormat,n.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function $G(n,e,t,r,s,i,a,o){const l=n,u=new Float32Array(Eue(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function FG(n,e,t){const r=new Float32Array(e*t*4);return ke(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}const Dce=Object.freeze(Object.defineProperty({__proto__:null,bindVertexProgramAttributeStreams:RG,createBufferFromOutputTexture:zG,createFloat16MatrixTexture:_G,createFloat16PackedMatrixTexture:EG,createFloat32MatrixTexture:CG,createIndexBuffer:kG,createPackedMatrixTexture:NG,createUnsignedBytesMatrixTexture:MG,createVertexBuffer:IG,createVertexShader:TG,downloadByteEncodedFloatMatrixFromOutputTexture:PG,downloadFloat32MatrixFromBuffer:DG,downloadMatrixFromPackedOutputTexture:FG,downloadPackedMatrixFromBuffer:$G,getInternalFormatForFloat16MatrixTexture:M_,getInternalFormatForFloat16PackedMatrixTexture:R_,getInternalFormatForFloat32MatrixTexture:__,getInternalFormatForPackedMatrixTexture:E_,getInternalFormatForUnsignedBytesMatrixTexture:N_,uploadDenseMatrixToTexture:LG,uploadPixelDataToTexture:AG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xy{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=q().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,HF(t,e)):this.gl=Ci(t),e=this.gl,q().getNumber("WEBGL_VERSION")===2){const i=e;this.createVertexArray=()=>ke(i,()=>i.createVertexArray()),this.bindVertexArray=a=>ke(i,()=>i.bindVertexArray(a)),this.deleteVertexArray=a=>ke(i,()=>i.deleteVertexArray(a)),this.getVertexArray=()=>ke(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(e!=null){const i=e.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ke(e,()=>i.createVertexArrayOES()),this.bindVertexArray=a=>ke(e,()=>i.bindVertexArrayOES(a)),this.deleteVertexArray=a=>ke(e,()=>i.deleteVertexArrayOES(a)),this.getVertexArray=()=>ke(e,()=>e.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),q().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=yp(this.gl,i),ks(this.gl,a))this.textureHalfFloatExtension=yp(this.gl,a);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),ks(this.gl,s))this.colorBufferHalfFloatExtension=yp(this.gl,s);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",ks(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(ks(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=IG(this.gl),this.indexBuffer=kG(this.gl),this.framebuffer=sG(this.gl),this.textureConfig=S_(this.gl,this.textureHalfFloatExtension)}get debug(){return q().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ke(e,()=>e.finish()),ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.deleteFramebuffer(this.framebuffer)),ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ke(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),CG(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),_G(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),MG(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),AG(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),LG(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),EG(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),NG(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(g2(this.gl,this.framebuffer),this.outputTexture=null),ke(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>PG(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,i,a){return $G(this.gl,e,t,r,s,i,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return DG(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=zG(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(q().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,i=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(i,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=i}else q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>FG(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=TG(t));const r=JF(t);ke(t,()=>t.attachShader(r,this.vertexShader)),ke(t,()=>t.attachShader(r,e)),qF(t,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&Oy(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;ke(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),RG(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ke(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Oy(this.gl,this.program),ke(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?aG(this.gl,e,t):oG(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ke(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),lG(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,i]=_h(t,r);this.setOutputMatrixTextureDriver(e,s,i)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Oy(this.gl,this.program),bp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ke(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ke(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=yp(this.gl,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),i=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,i),i}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await $S(()=>this.disposed||this.isQueryAvailable(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),i=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=Pce(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in q().platform&&(r=q().platform.setTimeoutCustom.bind(q().platform)),$S(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Wy(this.gl,e,this.framebuffer),this.debug&&bp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Wy(this.gl,this.outputTexture,this.framebuffer),this.debug&&bp(this.gl)):g2(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;Wy(s,e,this.framebuffer),this.debug&&bp(s),this.outputTexture=e,ke(s,()=>s.viewport(0,0,t,r)),ke(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),ke(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function Pce(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:$ce,bincountImpl:GG,bincountReduceImpl:Fce,bitwiseAndImpl:Gce,castImpl:Oce,ceilImpl:Wce,concatImpl:Vce,equalImpl:Bce,expImpl:Xce,expm1Impl:Uce,floorImpl:Zce,gatherNdImpl:Hce,gatherV2Impl:Kce,greaterImpl:Yce,greaterEqualImpl:jce,lessImpl:Qce,lessEqualImpl:Jce,linSpaceImpl:qce,logImpl:ede,maxImpl:tde,maximumImpl:nde,minimumImpl:rde,multiplyImpl:sde,negImpl:ide,notEqualImpl:ade,prodImpl:ode,raggedGatherImpl:lde,raggedRangeImpl:ude,raggedTensorToTensorImpl:cde,rangeImpl:dde,rsqrtImpl:hde,scatterImpl:pde,sigmoidImpl:fde,simpleAbsImpl:OG,sliceImpl:mde,sparseFillEmptyRowsImpl:gde,sparseReshapeImpl:yde,sparseSegmentReductionImpl:WG,sqrtImpl:bde,staticRegexReplaceImpl:xde,stridedSliceImpl:vde,stringNGramsImpl:wde,stringSplitImpl:Sde,stringToHashBucketFastImpl:Tde,subImpl:Ide,tileImpl:kde,topKImpl:Cde,transposeImpl:L_,uniqueImpl:_de}=EF;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VG(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Ir(n,e){return e===1?[n]:VG(n,e)}function Mde(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nde{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=mr(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Ir("rc",this.rank),r=zt(this.rank),s=this.getOutOfBoundsCondition(t),i=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)i=`${e[e.length-1-a]},`+i;t.push(i)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=mr(this.outputShape.length);let r="";for(let s=0;s<4;s++){let i="thisRC = rc;";s%2===1&&(i+="thisRC.z += 1;"),s>1&&(i+="thisRC.y += 1;"),r+=`
        ${i}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${Ede(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?k_():I_(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function Ede(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?Bue(["r","c","d"],"inputShape"):Ou(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rde{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const s=z3(t,r),i=D3(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const a=A3(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let o;return s===qn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===qn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===qn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===qn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===qn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const i=z3(r,s),a=D3(t,i,s);a in this.freeTextures||(this.freeTextures[a]=[]);const o=A3(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,s),l=q().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[a],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Lde(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F||e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function A3(n,e,t,r,s){const i=Ade(e,r);let a;if(s){const[l,u]=_h(n[0],n[1]);a=l*u}else{const[l,u]=gg(n[0],n[1]);a=l*u}const o=Lde(t,i);return a*o}function Ade(n,e){switch(n){case qn.PACKED_2X2_FLOAT32:return E_(e);case qn.PACKED_2X2_FLOAT16:return R_(e);case qn.UNPACKED_FLOAT32:return __(e);case qn.UNPACKED_FLOAT16:return M_(e);case qn.PACKED_4X1_UNSIGNED_BYTE:return N_(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function zde(n){return q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?qn.PACKED_2X2_FLOAT32:qn.UNPACKED_FLOAT32:n?qn.PACKED_2X2_FLOAT16:qn.UNPACKED_FLOAT16}function z3(n,e){if(n===Is.UPLOAD)return qn.PACKED_2X2_FLOAT32;if(n===Is.RENDER||n==null)return zde(e);if(n===Is.DOWNLOAD||n===Is.PIXELS)return qn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function D3(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ji=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=mr(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const ri="if (isnan(x)) return x;",Dde="return x;",P3="return abs(x);",Pde="return (x >= 0.0) ? x : (exp(x) - 1.0);",$de=ri+`
  return (x < 0.0) ? 0.0 : x;
`,Fde=ri+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ho="return x;",Gde="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ode="return x;",Wde=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Vde=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Bde=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Xde="return 1.0 / (1.0 + exp(-1.0 * x));";class So{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=mr(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ude{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=mr(this.outputShape.length);const t=e.length,r=Ir("rc",t),s=zt(t),i=Mde(t,r),a=r.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zde=qx,Hde=1e-7,Kde=1e-4,hw={};function Yde(n){return n in hw||(hw[n]={}),hw[n]}const jde=q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Qde=600;function Jde(){return q().global.screen==null?1024:q().global.screen.height*q().global.screen.width*window.devicePixelRatio*Qde/1024/1024}class bg extends xb{nextDataId(){return bg.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Xy)t=e;else{const r=Ci(q().getNumber("WEBGL_VERSION"),e);t=new Xy(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=Ci(q().getNumber("WEBGL_VERSION"));t=new Xy(r),this.binaryCache=Yde(q().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Rde(this.gpgpu),this.numMBBeforeWarning=Jde(),this.texData=new WT(this,Dt())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,i,a){const o=this.makeTensorInfo(t,r),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[s,i]},l.texShape=[s,i];const u=xp(t),c=new L3(u,!1,a),d=this.runWebGLProgram(c,[o],r,[[s,i]]);return d.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(o),d.dataId}write(e,t,r){if((q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||q().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:Is.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,i){if(q().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:Is.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:i,slice:a,shape:o,isPacked:l}=t;if(a!=null){let h;l?h=new So(o,ho):h=new ji(o,ho);const p=this.runWebGLProgram(h,[{dataId:e,shape:o,dtype:s}],s),g=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),g}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const u=this.activeTimers!=null;let c;u&&(c=Qn());let d;if(s==="complex64"){const h=this.readSync(i.real.dataId),p=this.readSync(i.imag.dataId);d=Va(h,p)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Qn()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const g=this.pendingRead.get(e);return new Promise(f=>g.push(f))}const t=this.texData.get(e),{values:r,shape:s,slice:i,dtype:a,complexTensorInfos:o,isPacked:l}=t;if(i!=null){let g;l?g=new So(s,ho):g=new ji(s,ho);const f=this.runWebGLProgram(g,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(r!=null)return this.convertAndCacheOnCPU(e);if(q().getBool("DEBUG")&&!q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&q().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&q().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const g=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(g.texture.texture,...hy(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const g=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=g[0],m=g[1];d=Va(f,m)}else if(u==null)d=this.getValuesFromTexture(e);else{const g=ie(s);d=this.gpgpu.downloadFloat32MatrixFromBuffer(u,g)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const g=this.gpgpu.gl;ke(g,()=>g.deleteBuffer(u))}const h=this.convertAndCacheOnCPU(e,d),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(g=>g(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Dt().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:i,slice:a,dtype:o,isPacked:l,texture:u}=r;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;l?p=new So(i,ho):p=new ji(i,ho);const g=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:o}],o),f=this.readToGPU(g,t);return this.disposeIntermediateTensorInfo(g),f}if(u==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),d=Dt().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>$a(s));return rt(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return rt(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!KF(r))throw q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),i=ie(t);if(q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),p=this.texData.get(h.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...hy(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(h),g}const a=q().getBool("WEBGL_PACK")&&s===!0,o=a?xp(t):t,l=a?new Lce(o):new Rce(o),u=this.runWebGLProgram(l,[{shape:o,dtype:r,dataId:e}],"float32"),c=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const i=ia(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=ia(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(i);o.kernelMs=yz(l),o.getExtraProfileInfo=()=>l.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Qn(),endMs:null}}endTimer(e){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Qn(),e)}async getQueryTime(e){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:i,isPacked:a,slice:o}=this.texData.get(e),l=o&&o.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,i,a)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=jde){return q().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&ie(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){ws("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Zde(e.shape,t)}packedUnaryOp(e,t,r){const s=new So(e.shape,t),i=this.compileAndRun(s,[e],r);return Dt().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=OG(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,P3,e.dtype);const t=new ji(e.shape,P3),r=this.compileAndRun(t,[e]);return Dt().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Hi(r[0])){const i=r.map(a=>ta(a));s=this.write(i,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return Dt().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new Ude(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Nde(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[yu(e.shape),...bu(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},i=[yu(t),...bu(t)],a=new BG(i,r),o=!0,l=[r],u=this.runWebGLProgram(a,[s],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:i,dtype:a}=r;if(t!=null){const h=ie(i),p=t[0]*t[1]*4;M(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=xp(i);let l;s?l=new Ece(o):l=new Nce(o);const u=!0,c=[t??hy(o)],d=this.runWebGLProgram(l,[{shape:o,dtype:a,dataId:e}],a,c,u,t);return{dtype:a,shape:i,dataId:d.dataId}}runWebGLProgram(e,t,r,s,i=!1,a){const o=this.makeTensorInfo(e.outputShape,r),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===xf.DENSE){const y=a??hy(e.outputShape);l.texShape=y.map(b=>b*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),ie(o.shape)===0)return l.values=Vn(o.dtype,0),o;const u=[],c=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!e.packedInputs&&ie(y.shape)<=q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!e.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),u.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!vf(b.shape,y.shape)){const x=y,v=y.shape;y.shape=b.shape,y=this.packedReshape(y,v),u.push(y),b=this.texData.get(y.dataId),x.shape=v}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(o.dataId);const d={shape:o.shape,texData:l,isUniform:!1},h=Mce(e,c,d),p=this.getAndSaveBinary(h,()=>Cce(this.gpgpu,e,c,d)),g=this.activeTimers!=null;let f;g&&(f=this.startTimer()),q().get("ENGINE_COMPILE_ONLY")||_ce(this.gpgpu,p,c,d,s),u.forEach(y=>this.disposeIntermediateTensorInfo(y)),g&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=q().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const y=Qn();y-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!q().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){const y=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),y}return o}compileAndRun(e,t,r,s,i=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,i)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=j(()=>{if(!q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=q().getBool("DEBUG");q().set("DEBUG",!1);const t=this.abs(Ve(1e-8)).dataSync()[0];if(q().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Hde:Kde}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:i,texture:a,usage:o,isPacked:l}=t;if(a!=null)return;const u=this.activeTimers!=null;let c;u&&(c=Qn());let d=t.texShape;if(d==null&&(d=dG(r,l),t.texShape=d),i!=null){const h=xp(r);let p,g=d[1],f=d[0];const m=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!m)&&([g,f]=_h(d[0],d[1])),l?p=new zce(h,m):p=new L3(h,m);const y=m?[f,g]:d,b=this.makeTensorInfo(y,s),x=this.texData.get(b.dataId);m?x.usage=Is.PIXELS:x.usage=Is.UPLOAD,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),g,f,i);const v=[[f,g]],w=this.runWebGLProgram(p,[b],s,v,!0),T=this.texData.get(w.dataId);t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,q().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=T.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(b),u&&(this.uploadWaitMs+=Qn()-c)}else{const h=this.acquireTexture(d,o,s,l);t.texture=h}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=qde(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*rf(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(i){throw i}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await tg(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(T_(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:s,nanLoc:i,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:l}=SG(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=i,e.outShapeLocation=a,e.outShapeStridesLocation=o,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:s,height:i,width:a,channels:o}=e,l=Dt().backend;if(!l.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(s,t,r,i,a,o);return Dt().makeTensorFromDataId(u,t,r,l)}}bg.nextDataId=0;function qde(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(){q().set("WEBGL_FORCE_F16_TEXTURES",!0)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */QT()&&qT("webgl",()=>new bg,2);const ehe={forceHalfFloat:XG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A_=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class xu{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=qe(t,r),this.enableShapeUniforms=mr(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vu=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Ah{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=qe(t,r);const i=this.outputShape.length;this.enableShapeUniforms=mr(i);let a="";if(s)if(i===0||ie(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${zt(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const o=Ir("coords",i);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${o[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${o[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${o[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${o[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hs(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const the={kernelName:Fd,backendName:"webgl",kernelFunc:hs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cl(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,i=t.makeTensorInfo(r.shape,"complex64"),a=t.texData.get(i.dataId),o=hs({inputs:{x:r},backend:t}),l=hs({inputs:{x:s},backend:t});return a.complexTensorInfos={real:o,imag:l},i}const nhe={kernelName:Mb,backendName:"webgl",kernelFunc:cl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UG="return (a < 0.) ? b * a : a;",ZG=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function rhe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:i}=r,a=t.makeTensorInfo([],"float32",Ha(i,"float32")),o=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ah(ZG,s.shape,a.shape):new xu(UG,s.shape,a.shape),l=t.runWebGLProgram(o,[s,a],"float32");return t.disposeIntermediateTensorInfo(a),l}const she={kernelName:em,backendName:"webgl",kernelFunc:rhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG="return (a < 0.) ? b * a : a;",KG=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function ihe(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,i=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ah(KG,r.shape,s.shape):new xu(HG,r.shape,s.shape);return t.runWebGLProgram(i,[r,s],"float32")}const ahe={kernelName:xm,backendName:"webgl",kernelFunc:ihe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zh="if (isnan(x)) return x;";function vt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){const d=o.texData.get(a.dataId),h=t(d.values,l);return o.makeTensorInfo(a.shape,l,h)}const u=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new So(a.shape,e):c=new ji(a.shape,n),o.runWebGLProgram(c,[a],l)}}function ur({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&l.dtype==="complex64"){const g=c.texData.get(l.dataId),f=c.texData.get(u.dataId),[m,y]=[[g.complexTensorInfos.real,f.complexTensorInfos.real],[g.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(x=>{const[v,w]=x,T={dataId:v.dataId,dtype:v.dtype,shape:l.shape},k={dataId:w.dataId,dtype:w.dtype,shape:u.shape},S=new xu(n,l.shape,u.shape);return c.runWebGLProgram(S,[T,k],Vr(v.dtype,w.dtype))}),b=cl({inputs:{real:m,imag:y},backend:c});return c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(y),b}const d=i||Vr(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&s!=null){const g=c.texData.get(l.dataId).values,f=c.texData.get(u.dataId).values,m=l.dtype==="string"?Ba(g):g,y=l.dtype==="string"?Ba(f):f,[b,x]=s(l.shape,u.shape,m,y,d),v=c.makeTensorInfo(x,d),w=c.texData.get(v.dataId);return w.values=b,v}const h=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return h?p=new Ah(e,l.shape,u.shape,t):p=new xu(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],d)}}function wf(n,e=!1){if(n==="linear")return e?Ode:Dde;if(n==="relu")return e?Vde:$de;if(n==="elu")return e?Wde:Pde;if(n==="relu6")return e?Bde:Fde;if(n==="prelu")return e?KG:HG;if(n==="leakyrelu")return e?ZG:UG;if(n==="sigmoid")return e?Xde:Gde;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YG{constructor(e,t,r,s=!1,i=!1,a=!1,o=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=mr(this.outputShape.length);const c=s?e[1]:e[2],d=Math.ceil(c/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=i?"rc.z, i * 2":"i * 2, rc.z",g=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",y="";o&&(l?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,y="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",v="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${x};
        int batchB = ${v};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${g[0]} * ${f[0]});
          result += (${g[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $3={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let F3=class{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=qe(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G3="return a * b;";function z_(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,i=Vr(r.dtype,s.dtype);if(r.dtype==="complex64"){const o=t.texData.get(r.dataId),l=t.texData.get(s.dataId),u=new F3($3.REAL,r.shape,s.shape),c=new F3($3.IMAG,r.shape,s.shape),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape}],h=t.runWebGLProgram(u,d,"float32"),p=t.runWebGLProgram(c,d,"float32"),g=cl({inputs:{real:h,imag:p},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),g}if(t.shouldExecuteOnCPU([r,s])){const o=t.texData.get(r.dataId),l=t.texData.get(s.dataId),[u,c]=sde(r.shape,s.shape,o.values,l.values,i),d=t.makeTensorInfo(c,i),h=t.texData.get(d.dataId);return h.values=u,d}let a;return q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Ah(G3,r.shape,s.shape):a=new xu(G3,r.shape,s.shape),t.runWebGLProgram(a,[r,s],i)}const ohe={kernelName:Hd,backendName:"webgl",kernelFunc:z_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lhe(n,e,t){const r=[yu(n.shape),...bu(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},i=[yu(e),...bu(e)],a=new BG(i,r),o=!0,l=[r],u=t.runWebGLProgram(a,[s],n.dtype,l,o);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:i}=r,a=t,o=ie(s.shape),l=BT(i,o),u=ie(l);M(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=a.texData.get(s.dataId);return c.isPacked&&!vf(s.shape,l)&&!(c.texture!==null&&vf(c.shape,l))?lhe(s,l,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype})}const uhe={kernelName:wm,backendName:"webgl",kernelFunc:Ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let O3=class{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:i,outSize:a}=e;this.outputShape=[s,a];const o=Math.floor(r/4)*4,l=r%4;let u="sumValue += dot(values, ones);";if(t!=null){const d=1/t;u=`sumValue += dot(values * ${su(d)?d.toPrecision(2):d}, ones);`}let c="";i%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class che{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:i,outSize:a}=e;this.outputShape=[s,a];let o="0.0",l="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",l="min"):t==="max"&&(o="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const c=Math.floor(r/4)*4,d=r%4;let h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let g="";i%r>0&&(g=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${g}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dhe(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=dv(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function Bu(n,e,t,r){const s=dhe(n.shape);let i=n;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,d;t==="mean"?c=a===0?new O3({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:u},o):new O3({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:u}):c=new che({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:u},t),d=i,i=r.runWebGLProgram(c,[i],e),d.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(d)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hhe{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;const s=zt(this.rank),i=phe(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function phe(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fhe{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let c=0;c<r.length;c++)r[c]=e[t[c]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=zt(this.rank),i=VG("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=i[c];const o=`vec2(${a.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${r[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fv(n,e,t){const r=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fhe(n.shape,e):new hhe(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mhe(n,e,t,r){const s=e,i=n.shape.length,a=lt(s,n.shape);let o=a;const l=rn(o,i),u=l!=null;let c=n;u&&(c=Fv(n,l,r),o=mn(o.length,i)),lr("sum",o,i);const[d,h]=Un(c.shape,o);let p=d;t&&(p=fn(d,a));const g=ie(h),f=ie(n.shape)/g,m=Ie({inputs:{x:c},attrs:{shape:[f,g]},backend:r}),y=_x(n.dtype),b=Bu(m,y,"sum",r),x=Ie({inputs:{x:b},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(c),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gv(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;return mhe(s,i,a,t)}const ghe={kernelName:_m,backendName:"webgl",kernelFunc:Gv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:i}=r,a=t,o=s.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=s.shape[i[c]];let u;if(a.shouldExecuteOnCPU([s])){const c=a.texData.get(s.dataId).values,d=L_(c,s.shape,s.dtype,i,l);u=a.makeTensorInfo(l,s.dtype);const h=a.texData.get(u.dataId);h.values=d}else u=Fv(s,i,a);return u}const yhe={kernelName:Xl,backendName:"webgl",kernelFunc:_r};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG=1e3;function U0({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,d=t?n.shape[u-2]:n.shape[u-1],h=r?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],g=r?e.shape[c-2]:e.shape[c-1],f=n.shape.slice(0,-2),m=e.shape.slice(0,-2),y=ie(f),b=ie(m),x=qe(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,g]);M(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const v=t?[y,d,p]:[y,p,d],w=r?[b,g,h]:[b,h,g],T=Ie({inputs:{x:n},backend:s,attrs:{shape:v}}),k=Ie({inputs:{x:e},backend:s,attrs:{shape:w}}),S=[T,k],C=Math.max(y,b),_=t?T.shape[1]:T.shape[2],z=i!=null,P=a!=null,R=l==="leakyrelu",A=l!=null?wf(l,!0):null,F=z||P||R||A!=null;let B;if((p===1||g===1)&&_>jG&&F===!1){let L=T,O=k;t&&(L=_r({inputs:{x:T},backend:s,attrs:{perm:[0,2,1]}}),S.push(L)),r&&(O=_r({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(O));const U=g!==1,ee=g===1;let G=L;U&&(G=Ie({inputs:{x:L},backend:s,attrs:{shape:[C,_,1]}}),S.push(G));const Q=g===1?2:1;let ne=O;ee&&(ne=Ie({inputs:{x:O},backend:s,attrs:{shape:[C,1,_]}}),S.push(ne));const X=z_({inputs:{a:G,b:ne},backend:s});B=Gv({inputs:{x:X},backend:s,attrs:{axis:Q,keepDims:!0}}),S.push(X)}else{const L=Vr(n.dtype,e.dtype),O=new YG(v,w,[C,p,g],t,r,z,A,P,R),U=[T,k];if(i!=null&&U.push(i),P&&U.push(a),R){const ee=s.makeTensorInfo([],"float32",Ha(o,"float32"));U.push(ee),S.push(ee)}B=s.runWebGLProgram(O,U,L)}const K=Ie({inputs:{x:B},backend:s,attrs:{shape:x}});S.push(B);for(const L of S)s.disposeIntermediateTensorInfo(L);return K}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bhe(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;return U0({a:s,b:i,transposeA:l,transposeB:u,backend:t,bias:a,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}const xhe={kernelName:sf,backendName:"webgl",kernelFunc:bhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W3="return abs(x);";function vhe(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const i=t.texData.get(r.dataId),a=OG(i.values);return t.makeTensorInfo(r.shape,r.dtype,a)}let s;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new So(r.shape,W3):s=new ji(r.shape,W3),t.runWebGLProgram(s,[r],r.dtype)}const whe={kernelName:Lf,backendName:"webgl",kernelFunc:vhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const She=ri+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,The=vt({opSnippet:She}),Ihe={kernelName:bd,backendName:"webgl",kernelFunc:The};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const khe=ri+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Che=vt({opSnippet:khe}),_he={kernelName:xd,backendName:"webgl",kernelFunc:Che};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V3="return a + b;",Mhe=ur({opSnippet:V3,packedOpSnippet:V3,supportsComplex:!0,cpuKernelImpl:$ce}),Nhe={kernelName:Mu,backendName:"webgl",kernelFunc:Mhe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ehe{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((i,a)=>`T${a}`);const r=[];this.variableNames.forEach(i=>{r.push(`float v${i} = get${i}AtOutCoords();`)});const s=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rhe{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((i,a)=>`T${a}`);const r=[];this.variableNames.forEach(i=>{r.push(`vec4 v${i} = get${i}AtOutCoords();`)});const s=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uy(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return hs({inputs:{x:r[0]},backend:t});if(r.length>q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const o=Math.floor(r.length/2),l=Uy({inputs:r.slice(0,o),backend:t}),u=Uy({inputs:r.slice(o),backend:t});return Uy({inputs:[l,u],backend:t})}const s=r.map(o=>o.dtype).reduce((o,l)=>Vr(o,l)),i=r.map(o=>o.shape),a=q().getBool("WEBGL_PACK")?new Rhe(r[0].shape,i):new Ehe(r[0].shape,i);return t.runWebGLProgram(a,r,s)}const Lhe={kernelName:Af,backendName:"webgl",kernelFunc:Uy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ahe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=lt(i,s.shape);let u=l;const c=rn(u,o);let d=s;c!=null&&(d=_r({inputs:{x:s},backend:t,attrs:{perm:c}}),u=mn(u.length,o)),lr("all",u,o);const[h,p]=Un(d.shape,u),g=ie(p),f=Ie({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),m=Bu(f,f.dtype,"all",t);let y;if(a){const b=fn(h,l);y=Ie({inputs:{x:m},backend:t,attrs:{shape:b}})}else y=Ie({inputs:{x:m},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),c!=null&&t.disposeIntermediateTensorInfo(d),y}const zhe={kernelName:Sb,backendName:"webgl",kernelFunc:Ahe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dhe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=lt(i,s.shape);let u=l;const c=rn(u,o);let d=s;c!=null&&(d=_r({inputs:{x:s},backend:t,attrs:{perm:c}}),u=mn(u.length,o)),lr("any",u,o);const[h,p]=Un(d.shape,u),g=ie(p),f=Ie({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),m=Bu(f,f.dtype,"any",t);let y;if(a){const b=fn(h,l);y=Ie({inputs:{x:m},backend:t,attrs:{shape:b}})}else y=Ie({inputs:{x:m},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),c!=null&&t.disposeIntermediateTensorInfo(d),y}const Phe={kernelName:Tb,backendName:"webgl",kernelFunc:Dhe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $he{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:i,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[i,a];const o=t==="max"?">":"<",l=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fhe{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,M(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const i=e[e.length-1],a=Math.ceil(i/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=zt(l),c=Ir("coords",l);let d,h;if(a===1){h=l+1;const S=zt(h);d=`
        ${S} sourceLocR = ${S}(${c.join()}, 0);
        ++${c[l-1]};
        ${S} sourceLocG = ${S}(${c.join()}, 0);
        ++${c[l-2]};
        ${S} sourceLocA = ${S}(${c.join()}, 0);
        --${c[l-1]};
        ${S} sourceLocB = ${S}(${c.join()}, 0);
        --${c[l-2]};`}else h=l,d=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),g="."+p[h-1],f=p.map(S=>"int "+S),m=Ir("sourceLocR",h-1).concat("inIdx.r"),y=Ir("sourceLocG",h-1).concat("inIdx.g"),b=Ir("sourceLocB",h-1).concat("inIdx.b"),x=Ir("sourceLocA",h-1).concat("inIdx.a"),v=r==="max"?"greaterThan":"lessThan",w=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()})));`,T=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${g}, sourceLocG${g},
          sourceLocB${g}, sourceLocA${g}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${T};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${T};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QG(n,e,t,r=null){let s=e.shape[0],i=e.shape[1];r!=null&&(s=r.shape[0],i=r.shape[1]);const a=dv(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},l=new $he(o,t,r==null),u=[e];r!=null&&u.push(r);const c=n.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const d=QG(n,e,t,c);return n.disposeIntermediateTensorInfo(c),d}function JG(n,e,t,r=null){const s=r!=null?r.shape:e.shape,i=s[s.length-1],a=dv(i),o=new Fhe(s,a,t,r==null),l=r==null?[e]:[e,r],u=n.runWebGLProgram(o,l,"int32");if(u.shape.length===e.shape.length){const c=JG(n,e,t,u);return n.disposeIntermediateTensorInfo(u),c}return u}function qG(n,e,t,r){const s=[t];if(lr("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!q().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const i=[],a=n.texData.get(e.dataId),o=a!==null&&a.isPacked;let l=e;o&&(l=n.unpackTensor(e),i.push(l));const[u,c]=Un(l.shape,s),d=ie(c),h=Ie({inputs:{x:l},backend:n,attrs:{shape:[-1,d]}});i.push(h);const p=QG(n,h,r);i.push(p);const g=Ie({inputs:{x:p},backend:n,attrs:{shape:u}});return i.forEach(f=>n.disposeIntermediateTensorInfo(f)),g}return JG(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ghe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;let a=lt(i,s.shape);const o=rn(a,s.shape.length);let l=s;const u=[];o!=null&&(l=_r({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=mn(a.length,l.shape.length)),lr("argMax",[a[0]],l.shape.length);const c=qG(t,l,a[0],"max");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),c}const Ohe={kernelName:zf,backendName:"webgl",kernelFunc:Ghe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Whe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;let a=lt(i,s.shape);const o=rn(a,s.shape.length);let l=s;const u=[];o!=null&&(l=_r({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=mn(a.length,l.shape.length)),lr("argMin",[a[0]],l.shape.length);const c=qG(t,l,a[0],"min");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),c}const Vhe={kernelName:Df,backendName:"webgl",kernelFunc:Whe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bhe=ri+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Xhe=vt({opSnippet:Bhe}),Uhe={kernelName:vd,backendName:"webgl",kernelFunc:Xhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zhe=ri+"return log(x + sqrt(x * x + 1.0));",Hhe=vt({opSnippet:Zhe}),Khe={kernelName:wd,backendName:"webgl",kernelFunc:Hhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yhe=ri+`
  return atan(x);
`,jhe=vt({opSnippet:Yhe}),Qhe={kernelName:Sd,backendName:"webgl",kernelFunc:jhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jhe=A_+`
  return atan(a, b);
`,qhe=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Vu+`
  return result;
`,epe=ur({opSnippet:Jhe,packedOpSnippet:qhe}),tpe={kernelName:Id,backendName:"webgl",kernelFunc:epe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const npe=ri+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,rpe=vt({opSnippet:npe}),spe={kernelName:Td,backendName:"webgl",kernelFunc:rpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sf{constructor(e,t,r,s=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),r){const S=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${l});
        const ivec2 pads = ivec2(${p}, ${g});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?i?m:y:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const x="max";let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / max(count, 1.0)");const w=Math.floor(a/4)*4,T=a%4,k=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${p}, ${g});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${w};
          if (${T===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${T===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${T===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${v});
      }
    `}}class D_{constructor(e,t,r,s=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,g=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,y=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x=t==="avg";let v="0.0";if(x||(v="-1.0 / 1e-20"),r){const _=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${l}, ${u});
        const ivec3 pads = ivec3(${m}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${g};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${_} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${g} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let T=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(T="avgValue / max(count, 1.0)");const k=Math.floor(a/4)*4,S=a%4,C=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${l}, ${u});
      const ivec3 pads = ivec3(${m}, ${y}, ${b});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${g};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${C}
            }

            int xC = xCCorner + ${k};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${C}
            }
          }
        }
        setOutput(${T});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ipe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Mh(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;M(or(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=ti(s.shape,i,a,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&ht(c.inShape,c.outShape))return hs({inputs:{x:s},backend:t});const d=new Sf(c,"avg",!1);return t.runWebGLProgram(d,[s],"float32")}const ape={kernelName:Pf,backendName:"webgl",kernelFunc:ipe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ope(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=[1,1,1],d=Ka(s.shape,i,a,c,o,l,u),h=new D_(d,"avg",!1);return t.runWebGLProgram(h,[s],"float32")}const lpe={kernelName:$f,backendName:"webgl",kernelFunc:ope};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class upe{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,d=u-1-e.padInfo.left,h=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class cpe{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,g=d-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,y=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${g}, ${f}, ${m});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dpe(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,d=[1,1,1],h=Ka(a.shape,o,l,d,u,c),p=new cpe(h);return t.runWebGLProgram(p,[s],a.dtype)}const hpe={kernelName:kb,backendName:"webgl",kernelFunc:dpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ppe(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i;Mh([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=ti(a.shape,o,l,1,u),d=new upe(c);return t.runWebGLProgram(d,[s],a.dtype)}const fpe={kernelName:Ib,backendName:"webgl",kernelFunc:ppe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mpe(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;return U0({a:s,b:i,transposeA:a,transposeB:o,backend:t})}const gpe={kernelName:Ff,backendName:"webgl",kernelFunc:mpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ype{constructor(e,t,r,s,i,a){this.outputShape=[],this.variableNames=["x","mean","variance"],qe(e,t),qe(e,r);let o="0.0";s!=null&&(qe(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";i!=null&&(qe(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bpe{constructor(e,t,r,s,i,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],qe(e,t),qe(e,r);let o="vec4(0.0)";s!=null&&(qe(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(qe(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xpe=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=n;M(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(o==null||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const u=[r,s,i];let c=null;a!=null&&(c=a.shape,u.push(a));let d=null;o!=null&&(d=o.shape,u.push(o));const h=q().getBool("WEBGL_PACK_NORMALIZATION")?new bpe(r.shape,s.shape,i.shape,c,d,l):new ype(r.shape,s.shape,i.shape,c,d,l);return e.runWebGLProgram(h,u,u[0].dtype)},vpe={kernelName:Qf,backendName:"webgl",kernelFunc:xpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wpe{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=zt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=Spe(this.rank);let s;const i=e.map((a,o)=>`sourceLoc.${x2[o]} = start[${o}] + coords.${x2[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const x2=["x","y","z","w","u","v"];function Spe(n){if(n===1)return"sourceLoc";if(n<=6)return x2.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tpe{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=zt(this.rank),r=Ir("coords",this.rank),s=Ir("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${i})`,o=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,d)=>`start[${d}]`).join()});`:e.map((c,d)=>`${s[d]} = ${r[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${o}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ipe(n,e,t,r){const s=r.texData.get(n.dataId),i=r.makeTensorInfo(t,n.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=t,a.dtype=n.dtype;let o=xk(e,We(n.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||n.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),i}function Dh(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,size:a}=r,[o,l]=cv(s,i,a);if(gk(s,o,l),ie(l)===0)return t.makeTensorInfo(l,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const d=t.texData.get(s.dataId),h=mde(d.values,o,l,s.shape,s.dtype);return t.makeTensorInfo(l,s.dtype,h)}const{isPacked:u}=t.texData.get(s.dataId),c=bk(s.shape,o,l);if(u||!c){const d=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tpe(l):new wpe(l),h=[o];return t.runWebGLProgram(d,[s],s.dtype,h)}return t.uploadToGPU(s.dataId),Ipe(s,o,l,t)}const kpe={kernelName:Cm,backendName:"webgl",kernelFunc:Dh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cpe=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,crops:a}=r;M(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((b,x)=>b*x),l=ng(s.shape,i,o),u=rg(l.length,i.length),c=sg(s.shape,i,o),d=Ik(a,i.length),h=kk(c,a,i.length),p=[],g=Ie({inputs:{x:s},backend:t,attrs:{shape:l}}),f=_r({inputs:{x:g},backend:t,attrs:{perm:u}}),m=Ie({inputs:{x:f},backend:t,attrs:{shape:c}}),y=Dh({inputs:{x:m},backend:t,attrs:{begin:d,size:h}});return p.push(g),p.push(f),p.push(m),p.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},_pe={kernelName:Gf,backendName:"webgl",kernelFunc:Cpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mpe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a}=r,o=t.readSync(s.dataId),l=t.readSync(i.dataId),u=GG(o,l,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,u)}const Npe={kernelName:Cb,backendName:"webgl",kernelFunc:Mpe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Epe=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Rpe=`
  return float(int(a.r) & int(b.r));
`;function Lpe(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,i=q().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=q().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,s])||a===1){const l=t.texData.get(r.dataId).values,u=t.texData.get(s.dataId).values,[c,d]=Gce(r.shape,s.shape,l,u,r.dtype),h=t.makeTensorInfo(d,r.dtype),p=t.texData.get(h.dataId);return p.values=c,h}let o;return i?o=new Ah(Epe,r.shape,s.shape,!1):o=new xu(Rpe,r.shape,s.shape),t.runWebGLProgram(o,[r,s],r.dtype)}const Ape={kernelName:Of,backendName:"webgl",kernelFunc:Lpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zpe(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,i=t.readSync(r.dataId),a=t.readSync(s.dataId),o=qe(Array.from(i),Array.from(a));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const Dpe={kernelName:_b,backendName:"webgl",kernelFunc:zpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ppe="return float(a != b);",eO=ur({opSnippet:Ppe,cpuKernelImpl:ade,dtype:"bool"}),$pe={kernelName:fm,backendName:"webgl",kernelFunc:eO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xg(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return hs({inputs:{x:s.complexTensorInfos.real},backend:t})}const Fpe={kernelName:ox,backendName:"webgl",kernelFunc:xg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gpe="return float(int(x));";function Ope(n,e){const t=new ji(n.shape,Gpe),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:i}=r;if(i==="complex64"){if(s.dtype==="complex64")return hs({inputs:{x:s},backend:t});const a=Sn(s.shape),o=v2({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),l=cl({inputs:{real:o,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(o),l}if(s.dtype==="complex64"){const a=xg({inputs:{input:s},backend:t}),o=v2({inputs:{x:a},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(a),o}if(!XT(s.dtype,i)){const a=hs({inputs:{x:s},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:i}}if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId).values,[o,l,u]=Oce(a,s.shape,s.dtype,i);return t.makeTensorInfo(o,l,u)}if(i==="int32")return Ope(s,t);if(i==="bool"){const a=t.makeTensorInfo([],"bool",Vn("bool",1)),o=eO({inputs:{a:s,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),o}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const Wpe={kernelName:kd,backendName:"webgl",kernelFunc:v2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B3="return ceil(x);",Vpe=vt({opSnippet:B3,packedOpSnippet:B3,cpuKernelImpl:Wce}),Bpe={kernelName:Cd,backendName:"webgl",kernelFunc:Vpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xpe{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Upe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zpe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:i,clipValueMax:a}=r;let o;q().getBool("WEBGL_PACK_CLIP")?o=new Upe(s.shape):o=new Xpe(s.shape);const l=[[i],[a]];return t.runWebGLProgram(o,[s],s.dtype,l)}const Hpe={kernelName:_d,backendName:"webgl",kernelFunc:Zpe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kpe{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Ype(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),i=new Kpe(r.shape),a=[X3(r,s.complexTensorInfos.real),X3(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(i,a,a[0].dtype)}const jpe={kernelName:Wf,backendName:"webgl",kernelFunc:Ype};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qpe{constructor(e){this.outputShape=[],this.outputShape=ra(e,1),this.variableNames=e.map((a,o)=>`T${o}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const o=t[a-1];r.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}const s=t.length,i=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jpe{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ra(e,t);const r=this.outputShape,s=r.length,i=zt(s),a=Ir("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let f=1;f<l.length;f++)l[f]=l[f-1]+e[f][t];const u=o[t],c=o.slice(-2),d=o.join();let h=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${d}), vec2(${c.join()}));
        }`;for(let f=1;f<l.length;f++){const m=l[f-1];h+=`
        if (${u} < ${l[f]}  && ${u} >= ${l[f-1]}) {
          return getChannel(
            getT${f}(${fy(o,u,m)}),
            vec2(${fy(c,u,m)}));
        }`}const p=l.length,g=l[l.length-1];h+=`
        return getChannel(
          getT${p}(${fy(o,u,g)}),
          vec2(${fy(c,u,g)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${h}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function fy(n,e,t){const r=n.indexOf(e);return n.map((s,i)=>i===r?`${s} - ${t}`:s).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return hs({inputs:{x:s.complexTensorInfos.imag},backend:t})}const qpe={kernelName:Hb,backendName:"webgl",kernelFunc:Ov};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vp(n,e,t){const r=n[0].dtype;if(r==="complex64"){const p=n.map(b=>xg({inputs:{input:b},backend:t})),g=n.map(b=>Ov({inputs:{input:b},backend:t})),f=vp(p,e,t),m=vp(g,e,t),y=cl({inputs:{real:f,imag:m},backend:t});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),g.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),y}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const p=n.map(v=>{const w=[-1,ie(v.shape.slice(e))];return Ie({inputs:{x:v},backend:t,attrs:{shape:w}})}),g=p.map(v=>({vals:t.readSync(v.dataId),shape:v.shape})),f=ra(p.map(v=>v.shape),1),m=p[0].shape[0]===1,y=Vce(g,f,r,m),b=ra(n.map(v=>v.shape),e),x=t.makeTensorInfo(b,r,y);return p.forEach(v=>t.disposeIntermediateTensorInfo(v)),x}const i=n.filter(p=>ie(p.shape)>0),a=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const p=a?new ji(n[0].shape,ho):new So(n[0].shape,ho);return t.runWebGLProgram(p,n,r)}const o=q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const p=[];for(let f=0;f<i.length;f+=o){const m=i.slice(f,f+o);p.push(vp(m,e,t))}const g=vp(p,e,t);for(const f of p)t.disposeIntermediateTensorInfo(f);return g}if(a){const p=new Jpe(i.map(g=>g.shape),e);return t.runWebGLProgram(p,i,r)}const{tensors2D:l,outShape:u}=efe(i,e,t),c=new Qpe(l.map(p=>p.shape)),d=t.runWebGLProgram(c,l,r);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const h=Ie({inputs:{x:d},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(d),h}function efe(n,e,t){const r=ra(n.map(s=>s.shape),e);return{tensors2D:n.map(s=>Ie({inputs:{x:s},attrs:{shape:[-1,ie(s.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,i=lt(s,e[0].shape)[0],a=e.map(u=>u.shape);wk(a,i);const o=ra(e.map(u=>u.shape),i);if(ie(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>ie(u.shape)>0);return l.length===1?hs({inputs:{x:l[0]},backend:t}):vp(l,i,t)}const tfe={kernelName:Vf,backendName:"webgl",kernelFunc:tO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nO{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,g=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",y=m?1:2,b=m?2:3,x=m?3:1;let v="",w="";r&&(s?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:i?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:v=`
          float activation(float x) {
            ${r}
          }
        `,w="result = activation(result);");const T=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${g}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${g}) *
                    getW(wR, wC, ${g}, d2);
              } else {
                dotProd +=
                    getX(batch, ${g}, xR, xC) *
                    getW(wR, wC, ${g}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${g}, d2),
                getW(wR, wC, ${g} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${g}),
                  getX(batch, xR, xC, ${g} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${g}, xR, xC),
                  getX(batch, ${g} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${g}, d2),
                getW(wR, wC, ${g} + 1, d2),
                getW(wR, wC, ${g} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${g}),
                  getX(batch, xR, xC, ${g} + 1),
                  getX(batch, xR, xC, ${g} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${g}, xR, xC),
                  getX(batch, ${g} + 1, xR, xC),
                  getX(batch, ${g} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${T}
        ${w}
        setOutput(result);
      }
    `}}class nfe{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,g=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${g}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${g}) *
                  getW(wF, wR, wC, ${g}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${g}),
                  getX(batch, xF, xR, xC, ${g} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${g}, d2),
                  getW(wF, wR, wC, ${g} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${g}),
                  getX(batch, xF, xR, xC, ${g} + 1),
                  getX(batch, xF, xR, xC, ${g} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${g}, d2),
                  getW(wF, wR, wC, ${g} + 1, d2),
                  getW(wF, wR, wC, ${g} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rO{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=mr(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<c;m++)h+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;h+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<c;m++)h+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(d+1)/2;m++){const y=m*2;if(h+=`
           xC = xCCorner + ${y*l};
           `,o===1){if(y<c&&(a%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?h+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){const b=a%2===0?vb(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:h+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):b===1?h+=`
                     xC${y+1} = xTexelC${y};
                     `:h+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(a%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(h+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(h+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(h+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",g="";r&&(s?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:i?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:p=`vec4 activation(vec4 x) {
           ${r}
         }`,g="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${f}
         ${g}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rfe{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=mr(this.outputShape.length);const{dataFormat:r}=t,s=Er(),i=r==="channelsLast",a=i?1:2,o=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let d=0;d<=1;d++)u+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z0(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function sO({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=n.shape,u=r.texData.get(n.dataId),c=t.inChannels,d=l[0]*l[1]*l[2],h=t.outChannels,p=t.dataFormat==="channelsLast",g=!1,f=!1;let m;const y=[];if(i!=null){const b=Z0(i.shape,p);b!=null&&(i=Ie({inputs:{x:i},backend:r,attrs:{shape:b}}),y.push(i))}if(s!=null){const b=Z0(s.shape,p);b!=null&&(s=Ie({inputs:{x:s},backend:r,attrs:{shape:b}}),y.push(s))}if(!((d===1||h===1)&&c>jG)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&ht(u.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),x={dataId:n.dataId,shape:[1,b,t.inChannels],dtype:n.dtype},v=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,M(vf(u.shape,x.shape),()=>`packed reshape ${u.shape} to ${x.shape} isn't free`);const w=Ie({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(w);const T=U0({a:x,b:w,backend:r,transposeA:g,transposeB:f,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),k=r.texData.get(T.dataId);M(k.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=v,k.shape=t.outShape,m=hs({inputs:{x:T},backend:r}),m.shape=t.outShape,y.push(T)}else{const b=t.outHeight*t.outWidth,x=Ie({inputs:{x:n},backend:r,attrs:{shape:p?[t.batchSize,b,t.inChannels]:[t.batchSize,t.inChannels,b]}}),v=Ie({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),w=U0({a:p?x:v,b:p?v:x,transposeA:!p,transposeB:f,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});m=Ie({inputs:{x:w},backend:r,attrs:{shape:t.outShape}}),y.push(x),y.push(v),y.push(w)}for(const b of y)r.disposeIntermediateTensorInfo(b);return m}function iO({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:d,outHeight:h,dataFormat:p}=t,g=p==="channelsLast",f=l*u*c,m=h*d,y=[t.batchSize,f,m],b=!0,x=!1,v=[];if(i!=null){const L=Z0(i.shape,g);L!=null&&(i=Ie({inputs:{x:i},backend:r,attrs:{shape:L}}),v.push(i))}if(s!=null){const L=Z0(s.shape,g);L!=null&&(s=Ie({inputs:{x:s},backend:r,attrs:{shape:L}}),v.push(s))}const w=Ie({inputs:{x:e},backend:r,attrs:{shape:[1,f,ie(e.shape)/f]}});v.push(w);const T=new rfe(y,t),k=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],S=r.runWebGLProgram(T,[n],"float32",k),C=Ie({inputs:{x:S},backend:r,attrs:{shape:y}});v.push(S),v.push(C);const _=s!=null,z=i!=null,P=o==="leakyrelu",R=o?wf(o,!0):null,A=new YG(g?C.shape:w.shape,g?w.shape:C.shape,g?[t.batchSize,m,t.outChannels]:[t.batchSize,t.outChannels,m],b,x,_,R,z,P),F=g?[C,w]:[w,C];if(s&&F.push(s),z&&F.push(i),P){const L=r.makeTensorInfo([],"float32",Ha(a,"float32"));F.push(L),v.push(L)}const B=r.runWebGLProgram(A,F,"float32"),K=Ie({inputs:{x:B},backend:r,attrs:{shape:t.outShape}});v.push(B);for(const L of v)r.disposeIntermediateTensorInfo(L);return K}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sfe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,d=Ya(l),h=Xn(s.shape,i.shape,a,u,o,c,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=sO({x:s,filter:i,convInfo:h,backend:t});else if(h.strideWidth<=2&&d==="channelsLast"&&q().getBool("WEBGL_EXP_CONV")){const f=new rO(h),m=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=t.runWebGLProgram(f,[s,i],"float32",m)}else if(q().getBool("WEBGL_CONV_IM2COL"))p=iO({x:s,filter:i,convInfo:h,backend:t});else{const f=new nO(h);p=t.runWebGLProgram(f,[s,i],"float32")}const g=Ie({inputs:{x:p},backend:t,attrs:{shape:h.outShape}});return t.disposeIntermediateTensorInfo(p),g}const ife={kernelName:Bf,backendName:"webgl",kernelFunc:sfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class afe{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,i=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ofe{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,l=r-1-e.padInfo.left,u=a?1:2,c=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class lfe{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,i=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${i};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ufe{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=t-1-e.padInfo.front,u=r-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cfe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,d=Ya(l),h=Xn(s.shape,c,a,1,o,u,!1,d),p=new afe(h);return t.runWebGLProgram(p,[s,i],"float32")}const dfe={kernelName:Nb,backendName:"webgl",kernelFunc:cfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hfe{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=mr(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,s=t-1-e.padInfo.top,i=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pfe(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,d=Ya(u),h=Xn(a,i.shape,o,1,l,c,!1,d);if(q().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const p=[[h.strideHeight,h.strideWidth]],g=new hfe(h);return t.runWebGLProgram(g,[s,i],"float32",p)}else{const p=new ofe(h);return t.runWebGLProgram(p,[s,i],"float32")}}const ffe={kernelName:Xf,backendName:"webgl",kernelFunc:pfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mfe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=rl(s.shape,i.shape,a,l,o),c=new nfe(u);return t.runWebGLProgram(c,[s,i],"float32")}const gfe={kernelName:Uf,backendName:"webgl",kernelFunc:mfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yfe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r,u=rl(s.shape,l,a,1,o),c=new lfe(u);return t.runWebGLProgram(c,[s,i],"float32")}const bfe={kernelName:Eb,backendName:"webgl",kernelFunc:yfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xfe(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r,u=rl(l,i.shape,o,1,a),c=new ufe(u);return t.runWebGLProgram(c,[s,i],"float32")}const vfe={kernelName:Rb,backendName:"webgl",kernelFunc:xfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wfe=zh+`
  return cos(x);
`,Sfe=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Vu}
  return result;
`,Tfe=vt({opSnippet:wfe,packedOpSnippet:Sfe}),Ife={kernelName:Md,backendName:"webgl",kernelFunc:Tfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kfe=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Cfe=vt({opSnippet:kfe}),_fe={kernelName:Nd,backendName:"webgl",kernelFunc:Cfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mfe{constructor(e,t,r,s,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,l,u]=e,[c]=t,[d,h]=r;this.outputShape=[c,d,h,u];const p=s==="bilinear"?1:0,[g,f]=[`${o-1}.0`,`${l-1}.0`],[m,y,b]=d>1?[`${(o-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${g} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${g}`],[x,v,w]=h>1?[`${(l-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${v};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${g} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nfe=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,c=new Mfe(s.shape,i.shape,o,l,u);return t.runWebGLProgram(c,[s,i,a],"float32")},Efe={kernelName:Ab,backendName:"webgl",kernelFunc:Nfe};var Tf;(function(n){n.Prod="*",n.Sum="+"})(Tf||(Tf={}));let U3=class{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,a=this.op===Tf.Prod?"1.0":"0.0",o=r?a:`getX(${Z3(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";r?(u=s?`end != ${l-1}`:"end != 0",c=s?"end + 1":"end - 1"):(u=s?`end + pow2 < ${l}`:"end >= pow2",c=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${zt(i)} coords = getOutputCoords();
        int end = ${H3(i,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${H3(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${Z3(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function Z3(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function H3(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(n,e,t,r,s,i){const a=e.shape.length,o=rn([r],a);let l=e;o!=null&&(l=_r({inputs:{x:e},backend:t,attrs:{perm:o}}));const u=mn(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=l.shape[u];let d=hs({inputs:{x:l},backend:t});for(let h=0;h<=Math.ceil(Math.log2(c))-1;h++){const p=new U3(n,l.shape,!1,i),g=[[h]],f=d;d=t.runWebGLProgram(p,[d],d.dtype,g),t.disposeIntermediateTensorInfo(f)}if(s){const h=new U3(n,l.shape,s,i),p=d;d=t.runWebGLProgram(h,[d],d.dtype),t.disposeIntermediateTensorInfo(p)}if(o!=null){const h=sl(o),p=_r({inputs:{x:d},backend:t,attrs:{perm:h}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(l),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rfe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;return aO(Tf.Prod,s,t,i,a,o)}const Lfe={kernelName:Lb,backendName:"webgl",kernelFunc:Rfe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Afe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;return aO(Tf.Sum,s,t,i,a,o)}const zfe={kernelName:Zf,backendName:"webgl",kernelFunc:Afe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dfe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(s.shape.length===1){const l=t.readSync(s.dataId),u=t.readSync(i.dataId),c=GG(l,u,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,c)}else if(s.shape.length===2){const l=t.bufferSync(s),u=t.bufferSync(i),c=Fce(l,u,a,o);return t.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const Pfe={kernelName:zb,backendName:"webgl",kernelFunc:Dfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $fe{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ffe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:i,dataFormat:a}=r,o=s.shape[0],l=a==="NHWC"?s.shape[1]:s.shape[2],u=a==="NHWC"?s.shape[2]:s.shape[3],c=a==="NHWC"?s.shape[3]:s.shape[1],d=l*i,h=u*i,p=c/(i*i),g=a==="NHWC"?[o,d,h,p]:[o,p,d,h],f=new $fe(g,i,a);return t.runWebGLProgram(f,[s],s.dtype)}const Gfe={kernelName:Db,backendName:"webgl",kernelFunc:Ffe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oO{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=mr(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";r&&(s?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:i?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:u=`
          float activation(float x) {
            ${r}
          }
        `,c="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lO{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=mr(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<d;y++)p+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<d;y++)p+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(h+1)/2;y++){const b=y*2;if(p+=`
          xC = xCCorner + ${b*u};
          `,l===1){if(b<d&&(o%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<d)){const x=o%2===0?vb(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):x===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<d&&(o%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<d&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<d&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<d&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let g="",f="";r&&(s?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:i?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:g=`vec4 activation(vec4 x) {
          ${r}
        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ofe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;c==null&&(c=[1,1]),M(or(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const d=Xn(s.shape,i.shape,a,c,o,u,!0);let h;q().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new lO(d):h=new oO(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(h,[s,i],"float32",p)}const Wfe={kernelName:Hf,backendName:"webgl",kernelFunc:Ofe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vfe{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,i=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Bfe{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,a=t-1-e.padInfo.top,o=r-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xfe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,d=Xn(s.shape,c,a,o,l,u,!0),h=new Vfe(d);return t.runWebGLProgram(h,[s,i],"float32")}const Ufe={kernelName:Pb,backendName:"webgl",kernelFunc:Xfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zfe(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,d=Xn(c,i.shape,a,o,l,u,!0),h=new Bfe(d);return t.runWebGLProgram(h,[s,i],"float32")}const Hfe={kernelName:$b,backendName:"webgl",kernelFunc:Zfe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kfe{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yfe(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],i=ie(r.shape),a=Ie({inputs:{x:r},backend:t,attrs:{shape:[i]}}),o=new Kfe(i),l=t.runWebGLProgram(o,[a],a.dtype),u=Ie({inputs:{x:l},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const jfe={kernelName:Fb,backendName:"webgl",kernelFunc:Yfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qfe{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:i,strideWidth:a,filterHeight:o,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:d,left:h}=s;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${a});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jfe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=$m(s.shape,i.shape,a,o,"NHWC",l);let c;const d=new Qfe(u);c=t.runWebGLProgram(d,[s,i],"float32");const h=Ie({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),h}const qfe={kernelName:Kf,backendName:"webgl",kernelFunc:Jfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eme(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,i=e,{allDims:a,summedDims:o,idDims:l}=Ak(s,i.length);Dk(a.length,l,i);const{path:u,steps:c}=Pk(o,l),d=c.length;let h=null,p=a.length;const g=[];for(let f=0;f<d;++f){for(const m of c[f]){const{permutationIndices:y,expandDims:b}=zk(p,l[m]);let x;$k(y)?x=i[m]:(x=_r({inputs:{x:i[m]},backend:t,attrs:{perm:y}}),g.push(x));const v=x.shape.slice();for(let w=0;w<b.length;++w)v.splice(b[w],0,1);ht(x.shape,v)||(x=Ie({inputs:{x},backend:t,attrs:{shape:v}}),g.push(x)),h===null?h=x:(h=z_({inputs:{a:x,b:h},backend:t}),g.push(h))}f<d-1&&(u[f]>=0&&(h=Gv({inputs:{x:h},backend:t,attrs:{axis:u[f]-(a.length-p),keepDims:!1}}),g.push(h)),p--)}for(const f of g)f!==h&&t.disposeIntermediateTensorInfo(f);return h}const tme={kernelName:Ob,backendName:"webgl",kernelFunc:eme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nme="return (x >= 0.0) ? x : (exp(x) - 1.0);",rme=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,sme=vt({opSnippet:nme,packedOpSnippet:rme}),ime={kernelName:Rd,backendName:"webgl",kernelFunc:sme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ame="return (b >= 0.0) ? a : a * (b + 1.0);",ome=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,lme=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,i=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ah(ome,r.shape,s.shape):new xu(ame,r.shape,s.shape);return t.runWebGLProgram(i,[r,s],r.dtype)},ume={kernelName:Wb,backendName:"webgl",kernelFunc:lme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cme=`
  return vec4(equal(a, b));
`,dme="return float(a == b);",hme=ur({opSnippet:dme,packedOpSnippet:cme,dtype:"bool",cpuKernelImpl:Bce}),pme={kernelName:Yf,backendName:"webgl",kernelFunc:hme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fme=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Ck};
  float a1 = ${_k};
  float a2 = ${Mk};
  float a3 = ${Nk};
  float a4 = ${Ek};
  float a5 = ${Rk};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,mme=vt({opSnippet:fme}),gme={kernelName:Ld,backendName:"webgl",kernelFunc:mme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yme=zh+`
  return exp(x);
`,bme=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uO=vt({opSnippet:yme,packedOpSnippet:bme,cpuKernelImpl:Xce,dtype:"float32"}),xme={kernelName:Ad,backendName:"webgl",kernelFunc:uO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(M(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),o.splice(l,0,1),Ie({inputs:{x:i},backend:r,attrs:{shape:o}})}const vme={kernelName:jf,backendName:"webgl",kernelFunc:w2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K3="return exp(x) - 1.0;",wme=vt({opSnippet:K3,packedOpSnippet:K3,cpuKernelImpl:Uce}),Sme={kernelName:zd,backendName:"webgl",kernelFunc:wme};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Y3=class{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const i=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(n,e,t){const r=t.texData.get(n.dataId),s=ie(n.shape),i=n.shape[n.shape.length-1],a=s/i,o=Ie({inputs:{x:n},backend:t,attrs:{shape:[a,i]}}),l=o.shape,u=new Y3("real",l,e),c=new Y3("imag",l,e),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],h=t.runWebGLProgram(u,d,"float32"),p=t.runWebGLProgram(c,d,"float32"),g=cl({inputs:{real:h,imag:p},backend:t});t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p);const f=Ie({inputs:{x:g},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(g),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tme(n){const{inputs:e,backend:t}=n,{input:r}=e;return cO(r,!1,t)}const Ime={kernelName:Vb,backendName:"webgl",kernelFunc:Tme};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kme{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vg(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:i}=t;if(i=i||Cu(s),i==="string"){const a=ln(i,ie(r));return a.fill(s),e.makeTensorInfo(r,i,a)}else{const a=new kme(r,s),o=[[s]];return e.runWebGLProgram(a,[],i,o)}}const Cme={kernelName:Bb,backendName:"webgl",kernelFunc:vg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _me{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mme={kernelName:Xb,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new _me(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j3="return floor(x);",Nme=vt({opSnippet:j3,packedOpSnippet:j3,cpuKernelImpl:Zce}),Eme={kernelName:Dd,backendName:"webgl",kernelFunc:Nme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rme=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Lme=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Ame=ur({opSnippet:Rme,packedOpSnippet:Lme,dtype:"int32"}),zme={kernelName:Pd,backendName:"webgl",kernelFunc:Ame};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dme{constructor(e){this.variableNames=["A"];const t=Er(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pme{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Er(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $me={kernelName:I0,backendName:"webgl",kernelFunc:Fme};let ic,pw=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Fme(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:i}=r,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],d=[u,l,i];if(o||a){const f=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ic==null||f!==pw)&&(pw=f,ic=document.createElement("canvas").getContext("2d",{willReadFrequently:pw})),ic.canvas.width=l,ic.canvas.height=u,ic.drawImage(s,0,0,l,u),s=ic.canvas}const h=t.makeTensorInfo(c,"int32");t.texData.get(h.dataId).usage=Is.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(h.dataId),s);const p=q().getBool("WEBGL_PACK")?new Pme(d):new Dme(d),g=t.runWebGLProgram(p,[h],"int32");return t.disposeData(h.dataId),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gme(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:g}=r,f=Ya(c),m=Xn(s.shape,i.shape,l,d,u,h,!1,f);let y;const b=[],x=a!=null,v=o!=null,w=p==="leakyrelu",T=()=>{const S=[s,i],C=(_,z)=>{if(z==="NCHW"&&_.shape.length===1&&_.shape[0]!==1){const P=Ie({inputs:{x:_},backend:t,attrs:{shape:[_.shape[0],1,1]}});return b.push(P),P}return _};if(x&&S.push(C(a,c)),v&&S.push(C(o,c)),w){const _=t.makeTensorInfo([],"float32",Ha(g,"float32"));S.push(_),b.push(_)}return S};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))y=sO({x:s,filter:i,convInfo:m,backend:t,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:g});else if(m.strideWidth<=2&&f==="channelsLast"&&q().getBool("WEBGL_EXP_CONV")){const S=p?wf(p,!0):null,C=new rO(m,x,S,v,w),_=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],z=T();y=t.runWebGLProgram(C,z,"float32",_)}else if(q().getBool("WEBGL_CONV_IM2COL"))y=iO({x:s,filter:i,convInfo:m,backend:t,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:g});else{const S=p?wf(p,!1):null,C=new nO(m,x,S,v,w),_=T();y=t.runWebGLProgram(C,_,"float32")}const k=Ie({inputs:{x:y},backend:t,attrs:{shape:m.outShape}});return b.push(y),b.forEach(S=>t.disposeIntermediateTensorInfo(S)),k}const Ome={kernelName:af,backendName:"webgl",kernelFunc:Gme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wme(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,g=[];let f=c;f==null&&(f=[1,1]),M(or(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);const m=Xn(s.shape,i.shape,l,f,u,d,!0),y=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,b=h?wf(h,y):null,x=[s,i],v=a!=null,w=o!=null,T=h==="leakyrelu";if(v&&x.push(a),w&&x.push(o),T){const _=t.makeTensorInfo([],"float32",Ha(p,"float32"));x.push(_),g.push(_)}let k;y?k=new lO(m,v,b,w,T):k=new oO(m,v,b,w,T);const S=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],C=t.runWebGLProgram(k,x,"float32",S);return g.forEach(_=>t.disposeIntermediateTensorInfo(_)),C}const Vme={kernelName:of,backendName:"webgl",kernelFunc:Wme};class Bme{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const i=zt(r.length);let a=`
    int index;`;for(let o=0;o<this.sliceDim;o++)a+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xme(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,i=s.shape,a=i[i.length-1],o=ie(r.shape),[l,u,c,d]=uv(r,s),h=Ie({inputs:{x:s},backend:t,attrs:{shape:[u,a]}}),p=Ie({inputs:{x:r},backend:t,attrs:{shape:[ie(r.shape)/c,c]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const y=t.readSync(s.dataId),b=t.bufferSync(r),x=Hce(y,b,r.dtype,u,a,c,d,r.shape,o);return t.makeTensorInfo(l,r.dtype,x.values)}const g=new Bme(a,d,[u,c],r.shape),f=t.runWebGLProgram(g,[p,h],p.dtype),m=Ie({inputs:{x:f},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}const Ume={kernelName:Ub,backendName:"webgl",kernelFunc:Xme};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zme{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=zt(this.rank),s=Hme(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function Hme(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:i}=e,{axis:a,batchDims:o}=r,l=lt(a,s.shape)[0];if(q().get("DEBUG")){const b=t.readSync(i.dataId),x=s.shape[l];for(let v=0;v<b.length;++v){const w=b[v];M(w<=x-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${x-1}]`)}}const u=Gk(s,i,l,o),c=ie(i.shape),d=[],h=Ie({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Ie({inputs:{x:i},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(h),d.push(p);const g=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([s,i])||s.dtype==="string"){const b=t.bufferSync(p),x=t.bufferSync(h),v=Kce(x,b,g);return d.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(u.outputShape,v.dtype,v.values)}const f=new Zme(h.shape,g),m=t.runWebGLProgram(f,[h,p],h.dtype);d.push(m);const y=Ie({inputs:{x:m},backend:t,attrs:{shape:u.outputShape}});return d.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}const Kme={kernelName:Jf,backendName:"webgl",kernelFunc:dO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yme="return float(a > b);",jme=`
  return vec4(greaterThan(a, b));
`,Qme=ur({opSnippet:Yme,packedOpSnippet:jme,cpuKernelImpl:Yce,dtype:"bool"}),Jme={kernelName:qf,backendName:"webgl",kernelFunc:Qme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qme="return float(a >= b);",ege=`
  return vec4(greaterThanEqual(a, b));
`,tge=ur({opSnippet:qme,packedOpSnippet:ege,dtype:"bool",cpuKernelImpl:jce}),nge={kernelName:$d,backendName:"webgl",kernelFunc:tge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rge(n){const{inputs:e,backend:t}=n,{input:r}=e;return cO(r,!0,t)}const sge={kernelName:Zb,backendName:"webgl",kernelFunc:rge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ige="return float(!isnan(x) && !isinf(x));",age=vt({opSnippet:ige,dtype:"bool"}),oge={kernelName:Gd,backendName:"webgl",kernelFunc:age};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lge="return float(isinf(x));",uge=vt({opSnippet:lge,dtype:"bool"}),cge={kernelName:Od,backendName:"webgl",kernelFunc:uge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dge="return float(isnan(x));",hge=vt({opSnippet:dge,dtype:"bool"}),pge={kernelName:Wd,backendName:"webgl",kernelFunc:hge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fge="return float(a < b);",mge=`
  return vec4(lessThan(a, b));
`,gge=ur({opSnippet:fge,packedOpSnippet:mge,cpuKernelImpl:Qce,dtype:"bool"}),yge={kernelName:tm,backendName:"webgl",kernelFunc:gge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bge="return float(a <= b);",xge=`
  return vec4(lessThanEqual(a, b));
`,vge=ur({opSnippet:bge,packedOpSnippet:xge,cpuKernelImpl:Jce,dtype:"bool"}),wge={kernelName:nm,backendName:"webgl",kernelFunc:vge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sge(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:i}=t,a=qce(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}const Tge={kernelName:Kb,backendName:"webgl",kernelFunc:Sge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ige=zh+`
  return x < 0.0 ? 0./0. : log(x);
`,kge=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Cge=vt({opSnippet:Ige,packedOpSnippet:kge,cpuKernelImpl:ede}),_ge={kernelName:Vd,backendName:"webgl",kernelFunc:Cge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mge=zh+`
  return log(1.0 + x);
`,Nge=vt({opSnippet:Mge}),Ege={kernelName:Bd,backendName:"webgl",kernelFunc:Nge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rge="return float(a >= 1.0 && b >= 1.0);",Lge=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Age=ur({opSnippet:Rge,packedOpSnippet:Lge,dtype:"bool"}),zge={kernelName:rm,backendName:"webgl",kernelFunc:Age};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dge="return float(!(x >= 1.0));",Pge=vt({opSnippet:Dge}),$ge={kernelName:sm,backendName:"webgl",kernelFunc:Pge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fge="return float(a >= 1.0 || b >= 1.0);",Gge=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Oge=ur({opSnippet:Fge,packedOpSnippet:Gge,dtype:"bool"}),Wge={kernelName:im,backendName:"webgl",kernelFunc:Oge};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vge{constructor(e,t,r,s,i){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;this.outputShape=e;let l;const u=`float(${r}) + float(${s}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bge{constructor(e,t,r,s,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;this.outputShape=e;let l;const u=`float(${r}) + float(${s}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xge=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r,u=q().getBool("WEBGL_PACK_NORMALIZATION")?new Bge(s.shape,i,a,o,l):new Vge(s.shape,i,a,o,l);return t.runWebGLProgram(u,[s],s.dtype)},Uge={kernelName:am,backendName:"webgl",kernelFunc:Xge};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zge{constructor(e,t,r,s,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hge=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r,d=new Zge(s.shape,o,l,u,c);return t.runWebGLProgram(d,[s,i,a],s.dtype)},Kge={kernelName:Yb,backendName:"webgl",kernelFunc:Hge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yge(n,e,t,r){const s=ie(e),i=ie(n.shape)/s,a=Ie({inputs:{x:n},attrs:{shape:[i,s]},backend:r}),o=Bu(a,n.dtype,"max",r),l=Ie({inputs:{x:o},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,l=lt(i,s.shape);let u=l;const c=rn(u,o),d=c!=null,h=t.shouldExecuteOnCPU([s]);let p=s;if(d){if(h){const b=t.texData.get(p.dataId).values,x=new Array(o);for(let T=0;T<x.length;T++)x[T]=s.shape[c[T]];const v=L_(b,s.shape,s.dtype,c,x);p=t.makeTensorInfo(x,s.dtype);const w=t.texData.get(p.dataId);w.values=v}else p=Fv(s,c,t);u=mn(u.length,o)}lr("max",u,o);const[g,f]=Un(p.shape,u);let m=g;a&&(m=fn(g,l));let y;if(h){const b=t.texData.get(p.dataId).values,x=tde(b,ie(f),m,s.dtype);y=t.makeTensorInfo(m,s.dtype);const v=t.texData.get(y.dataId);v.values=x}else y=Yge(p,f,m,t);return d&&t.disposeIntermediateTensorInfo(p),y}const jge={kernelName:om,backendName:"webgl",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qge=A_+`
  return max(a, b);
`,Jge=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Vu+`
  return result;
`,qge=ur({opSnippet:Qge,packedOpSnippet:Jge,cpuKernelImpl:nde}),eye={kernelName:Xd,backendName:"webgl",kernelFunc:qge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tye(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Mh(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;M(or(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=ti(s.shape,i,a,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&ht(c.inShape,c.outShape))return hs({inputs:{x:s},backend:t});const d=new Sf(c,"max",!1);return t.runWebGLProgram(d,[s],s.dtype)}const nye={kernelName:lm,backendName:"webgl",kernelFunc:tye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rye(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=[1,1,1],d=Ka(s.shape,i,a,c,o,u,l),h=new D_(d,"max",!1);return t.runWebGLProgram(h,[s],s.dtype)}const sye={kernelName:um,backendName:"webgl",kernelFunc:rye};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iye{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=i-1-e.padInfo.top,l=a-1-e.padInfo.left,u=i*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class aye{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=l-1-e.padInfo.front,h=u-1-e.padInfo.top,p=c-1-e.padInfo.left,g=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${g} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oye(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,d=[1,1,1],h=Ka(a.shape,o,l,d,u,c),p=new D_(h,"max",!0),g=t.runWebGLProgram(p,[a],a.dtype),f=new aye(h),m=t.runWebGLProgram(f,[s,g],a.dtype);return t.disposeIntermediateTensorInfo(g),m}const lye={kernelName:Qb,backendName:"webgl",kernelFunc:oye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uye(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i,output:a}=e,o=i;Mh([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=ti(o.shape,l,u,1,c,d),p=!0,g=new Sf(h,"max",p),f=t.runWebGLProgram(g,[o],o.dtype),m=new iye(h),y=t.runWebGLProgram(m,[s,f],o.dtype);return t.disposeIntermediateTensorInfo(f),y}const cye={kernelName:jb,backendName:"webgl",kernelFunc:uye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dye(n,e,t,r){let s=new Sf(t,"max",!1);const i=r.runWebGLProgram(s,[n],"float32");s=new Sf(t,"max",!0,!0,e);const a=r.runWebGLProgram(s,[n],"float32");return[i,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hye={kernelName:Jb,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=t;M(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];M(or(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ti(r.shape,s,i,u,a),[d,h]=dye(r,o,c,l);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pye(n,e,t,r){const s=ie(e),i=ie(n.shape)/s,a=Ie({inputs:{x:n},attrs:{shape:[i,s]},backend:r}),o=Bu(a,"float32","mean",r),l=Ie({inputs:{x:o},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fye={kernelName:cm,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:i}=e,a=t,o=r.shape.length,l=lt(i,r.shape);let u=l;const c=rn(u,o),d=c!=null,h=a.shouldExecuteOnCPU([r]),p=[];let g=r;if(d){if(h){const x=a.texData.get(g.dataId).values,v=new Array(o);for(let k=0;k<v.length;k++)v[k]=r.shape[c[k]];const w=L_(x,r.shape,r.dtype,c,v);g=a.makeTensorInfo(v,r.dtype);const T=a.texData.get(g.dataId);T.values=w}else g=Fv(r,c,a);p.push(g),u=mn(u.length,o)}lr("sum",u,o);const[f,m]=Un(g.shape,u);let y=f;s&&(y=fn(f,l));const b=pye(g,m,y,a);for(const x of p)a.disposeIntermediateTensorInfo(x);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mye(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=lt(i,s.shape);let u=l;const c=rn(u,o);let d=s;c!=null&&(d=_r({inputs:{x:s},backend:t,attrs:{perm:c}}),u=mn(u.length,s.shape.length)),lr("min",u,o);const[h,p]=Un(d.shape,u),g=ie(p),f=Ie({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),m=Bu(f,f.dtype,"min",t);let y;if(a){const b=fn(h,l);y=Ie({inputs:{x:m},backend:t,attrs:{shape:b}})}else y=Ie({inputs:{x:m},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),c!=null&&t.disposeIntermediateTensorInfo(d),y}const gye={kernelName:dm,backendName:"webgl",kernelFunc:mye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yye=A_+`
  return min(a, b);
`,bye=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Vu+`
  return result;
`,xye=ur({opSnippet:yye,packedOpSnippet:bye,cpuKernelImpl:rde}),vye={kernelName:Ud,backendName:"webgl",kernelFunc:xye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wye{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((c,d)=>c[0]+e[d]+c[1]);const s=e.length,i=zt(s),a=t.map(c=>c[0]).join(","),o=t.map((c,d)=>c[0]+e[d]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${o});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sye{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((g,f)=>g[0]+e[f]+g[1]);const s=e.length,i=zt(s),a=t.map(g=>g[0]).join(","),o=t.map((g,f)=>g[0]+e[f]).join(","),l=Ir("rc",s),u=Ir("source",s),c=`${l[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${u.slice(-2).join()})`,h=r==="reflect"?0:1;let p="";if(s===1){const g=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${g}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${l[s-1]} += 1;
        if(${c}) {
          ${g}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{const g=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${g}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${l[s-1]} += 1;
        if(${c}) {
          ${g}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${l[s-2]} += 1;
        if(${l[s-2]} < ${this.outputShape[s-2]}) {
          ${g}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${l[s-1]} += 1;
          if(${c}) {
            ${g}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${o});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tye=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:i}=t,a=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sye(r.shape,s,i):new wye(r.shape,s,i);return e.runWebGLProgram(a,[r],r.dtype)},Iye={kernelName:hm,backendName:"webgl",kernelFunc:Tye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kye=`if (b == 0.0) return NAN;
  return mod(a, b);`,Cye=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Vu+`
  return result;
`,_ye=ur({opSnippet:kye,packedOpSnippet:Cye}),Mye={kernelName:Zd,backendName:"webgl",kernelFunc:_ye};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nye{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eye=`
if (a == b) {
  return 1.0;
};
return a / b;`,Rye=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,pO=ur({opSnippet:Eye,packedOpSnippet:Rye,checkOutOfBounds:!0}),Lye={kernelName:Ed,backendName:"webgl",kernelFunc:pO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q3="return a - b;",fO=ur({opSnippet:Q3,packedOpSnippet:Q3,supportsComplex:!0,cpuKernelImpl:Ide}),Aye={kernelName:lh,backendName:"webgl",kernelFunc:fO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:i}=r,a=lt([i],s.shape),o=hO({inputs:{x:s},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),l=fn(o.shape,a),u=Ie({inputs:{x:o},backend:t,attrs:{shape:l}}),c=fO({inputs:{a:s,b:u},backend:t}),d=uO({inputs:{x:c},backend:t}),h=Gv({inputs:{x:d},backend:t,attrs:{axis:a,keepDims:!1}}),p=Ie({inputs:{x:h},backend:t,attrs:{shape:l}}),g=pO({inputs:{a:d,b:p},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),g}const zye={kernelName:Em,backendName:"webgl",kernelFunc:mO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dye(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r,l=o?s:mO({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new Nye(u,c,i),h=[[a]],p=t.runWebGLProgram(d,[l],"int32",h);return o||t.disposeIntermediateTensorInfo(l),p}const Pye={kernelName:qb,backendName:"webgl",kernelFunc:Dye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ye=ri+`
  return -x;
`,Fye=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Gye(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const i=t.texData.get(r.dataId),[a,o]=ide(i.values,r.shape,r.dtype);return t.makeTensorInfo(o,r.dtype,a)}let s;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new So(r.shape,Fye):s=new ji(r.shape,$ye),t.runWebGLProgram(s,[r],r.dtype)}const Oye={kernelName:pm,backendName:"webgl",kernelFunc:Gye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wye=iv;function Vye(n){ws("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=t.readSync(s.dataId),c=t.readSync(i.dataId),{selectedIndices:d}=Wye(u,c,a,o,l);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Bye={kernelName:ex,backendName:"webgl",kernelFunc:Vye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xye=av;function Uye(n){ws("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=t.readSync(s.dataId),d=t.readSync(i.dataId),{selectedIndices:h,validOutputs:p}=Xye(c,d,a,o,l,u);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const Zye={kernelName:tx,backendName:"webgl",kernelFunc:Uye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hye=ov;function Kye(n){ws("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=t.readSync(s.dataId),d=t.readSync(i.dataId),h=a,p=o,g=l,f=u,{selectedIndices:m,selectedScores:y}=Hye(c,d,h,p,g,f);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const Yye={kernelName:nx,backendName:"webgl",kernelFunc:Kye};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jye{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qye=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:i,depth:a,onValue:o,offValue:l}=r,u=ie(s.shape),c=new jye(u,a,o,l),d=Ie({inputs:{x:s},backend:t,attrs:{shape:[u]}}),h=t.runWebGLProgram(c,[d],i);t.disposeIntermediateTensorInfo(d);const p=[...s.shape,a],g=Ie({inputs:{x:h},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(h),g},Jye={kernelName:gm,backendName:"webgl",kernelFunc:Qye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=xg({inputs:{input:r},backend:t}),i=H0({inputs:{x:s},backend:t}),a=Ov({inputs:{input:r},backend:t}),o=H0({inputs:{x:a},backend:t}),l=cl({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return vg({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const qye={kernelName:zm,backendName:"webgl",kernelFunc:H0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=xg({inputs:{input:r},backend:t}),i=gO({inputs:{x:s},backend:t}),a=Ov({inputs:{input:r},backend:t}),o=H0({inputs:{x:a},backend:t}),l=cl({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return vg({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const e0e={kernelName:mm,backendName:"webgl",kernelFunc:gO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t0e(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return w2({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach(c=>{ar(i,c.shape,"All tensors passed to stack must have matching shapes"),M(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const d=w2({inputs:{input:c},backend:t,attrs:{dim:s}});return o.push(d),d}),u=tO({inputs:l,backend:t,attrs:{axis:s}});return o.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const n0e={kernelName:ym,backendName:"webgl",kernelFunc:t0e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r0e{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);const s=e.length,i=zt(s),a=t.map(u=>u[0]).join(","),o=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${o});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s0e{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const s=e.length,i=zt(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),l=Ir("rc",s),u=Ir("source",s),c=`${l[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${u.slice(-2).join()})`,h=[`${i} rc = outputLoc;`,`${l[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${l[s-2]} += 1;
       if(${l[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${l[s-1]} += 1;
         if(${c}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let g="";for(let f=0,m=s===1?2:4;f<m;f++)g+=`
        ${h[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${f}] = getChannel(getX(${u.join()}), ${d});
        }
      `;g+=s===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${o});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yO=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:i,constantValue:a}=r;if(ie(s.shape)===0){const u=i.map((c,d)=>c[0]+s.shape[d]+c[1]);return vg({backend:t,attrs:{shape:u,value:a,dtype:s.dtype}})}const o=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new s0e(s.shape,i,a):new r0e(s.shape,i,a),l=[[a]];return t.runWebGLProgram(o,[s],s.dtype,l)},i0e={kernelName:bm,backendName:"webgl",kernelFunc:yO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a0e=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,o0e=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Vu+`
  return result;
`,l0e=ur({opSnippet:a0e,packedOpSnippet:o0e}),u0e={kernelName:Kd,backendName:"webgl",kernelFunc:l0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c0e(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=[],u=lt(i,s.shape);let c=u;const d=rn(c,o);let h=s;d!=null&&(h=_r({inputs:{x:s},backend:t,attrs:{perm:d}}),c=mn(c.length,o),l.push(h)),lr("prod",c,o);let p;if(t.shouldExecuteOnCPU([h])){const g=t.texData.get(h.dataId).values,{outVals:f,outShape:m,outDtype:y}=ode(h.shape,h.dtype,g,c);p=t.makeTensorInfo(m,y,f)}else{const[g,f]=Un(h.shape,c),m=ie(f),y=Ie({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),b=_x(s.dtype),x=Bu(y,b,"prod",t);p=Ie({inputs:{x},backend:t,attrs:{shape:g}}),l.push(y),l.push(x)}if(a){l.push(p);const g=fn(p.shape,u);p=Ie({inputs:{x:p},backend:t,attrs:{shape:g}})}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),p}const d0e={kernelName:vm,backendName:"webgl",kernelFunc:c0e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h0e(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=e,{outputRaggedRank:o}=r,l=s.map(y=>t.readSync(y.dataId)),u=s.map(y=>y.shape),c=t.readSync(i.dataId),d=t.readSync(a.dataId),[h,p,g]=lde(l,u,c,i.shape,i.dtype,d,a.shape,o),f=h.map(y=>t.makeTensorInfo([y.length],"int32",y)),m=t.makeTensorInfo(g,i.dtype,p);return f.concat([m])}const p0e={kernelName:rx,backendName:"webgl",kernelFunc:h0e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f0e(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:i}=e,a=t.readSync(r.dataId),o=t.readSync(s.dataId),l=t.readSync(i.dataId),[u,c]=ude(a,r.shape,r.dtype,o,s.shape,l,i.shape),d=t.makeTensorInfo([u.length],"int32",u),h=t.makeTensorInfo([c.length],r.dtype,c);return[d,h]}const m0e={kernelName:sx,backendName:"webgl",kernelFunc:f0e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g0e(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=r,u=t.readSync(s.dataId),c=t.readSync(i.dataId),d=t.readSync(a.dataId),h=o.map(m=>t.readSync(m.dataId)),p=o.map(m=>m.shape),[g,f]=cde(u,s.shape,c,i.shape,i.dtype,d,a.shape,h,p,l);return t.makeTensorInfo(g,i.dtype,f)}const y0e={kernelName:ix,backendName:"webgl",kernelFunc:g0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bO=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:i,dtype:a}=t,o=dde(r,s,i,a);return e.makeTensorInfo([o.length],a,o)},b0e={kernelName:ax,backendName:"webgl",kernelFunc:bO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x0e="return 1.0 / x;",v0e=vt({opSnippet:x0e}),w0e={kernelName:Yd,backendName:"webgl",kernelFunc:v0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S0e=ri+`
  return (x < 0.0) ? 0.0 : x;
`,T0e=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,I0e=vt({opSnippet:S0e,packedOpSnippet:T0e}),k0e={kernelName:jd,backendName:"webgl",kernelFunc:I0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C0e=ri+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,_0e=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,M0e=vt({opSnippet:C0e,packedOpSnippet:_0e}),N0e={kernelName:Qd,backendName:"webgl",kernelFunc:M0e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E0e{constructor(e,t,r,s,i){this.variableNames=["A"],this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,t,r,u];const c=[s&&t>1?o-1:o,s&&r>1?l-1:l],d=[s&&t>1?t-1:t,s&&r>1?r-1:r];let h;i?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R0e{constructor(e,t,r,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,t,r,u];const c=[s&&t>1?o-1:o,s&&r>1?l-1:l],d=[s&&t>1?t-1:t,s&&r>1?r-1:r];let h;i?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L0e(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new R0e(s.shape,l,u,i,a):new E0e(s.shape,l,u,i,a);return t.runWebGLProgram(c,[s],"float32")}const A0e={kernelName:Tm,backendName:"webgl",kernelFunc:L0e};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z0e{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,i]=t,[,a,o]=e,l=[r&&a>1?s-1:s,r&&o>1?i-1:i],u=[r&&a>1?a-1:a,r&&o>1?o-1:o],c=l[0]/u[0],d=l[1]/u[1],h=1/c,p=1/d,g=Math.ceil(h)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${g});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D0e(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r,o=new z0e(i.shape,s.shape,a);return t.runWebGLProgram(o,[i],i.dtype)}const P0e={kernelName:ux,backendName:"webgl",kernelFunc:D0e};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $0e{constructor(e,t,r,s,i){this.variableNames=["A"],this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,t,r,u];const c=[s&&t>1?o-1:o,s&&r>1?l-1:l],d=[s&&t>1?t-1:t,s&&r>1?r-1:r],h=s?"0.5":"0.0";let p;i?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F0e{constructor(e,t,r,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,t,r,u];const c=[s&&t>1?o-1:o,s&&r>1?l-1:l],d=[s&&t>1?t-1:t,s&&r>1?r-1:r],h=s?"0.5":"0.0";let p;i?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G0e(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new F0e(s.shape,l,u,i,a):new $0e(s.shape,l,u,i,a);return t.runWebGLProgram(c,[s],s.dtype)}const O0e={kernelName:Sm,backendName:"webgl",kernelFunc:G0e};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W0e{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,i]=t,[,a,o]=e,l=[r&&a>1?s-1:s,r&&o>1?i-1:i],u=[r&&a>1?a-1:a,r&&o>1?o-1:o],c=l[0]/u[0],d=l[1]/u[1],h=1/c,p=1/d,g=Math.ceil(h)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${g});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0e(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r,o=new W0e(i.shape,s.shape,a);return t.runWebGLProgram(o,[i],i.dtype)}const B0e={kernelName:lx,backendName:"webgl",kernelFunc:V0e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X0e{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,i=e.map((o,l)=>s(l)).join(","),a=zt(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U0e{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=Ir("rc",r),i=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,o=zt(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(s.slice())};
          if(${i}){
            result.g = ${u(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${i}) {
              result.a = ${d(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(g){return h(g)}function u(g){return g[r-1]="("+g[r-1]+" + 1)",h(g)}function c(g){return g[r-2]="("+g[r-2]+" + 1)",h(g)}function d(g){return g[r-1]="("+g[r-1]+" + 1)",g[r-2]="("+g[r-2]+" + 1)",h(g)}function h(g){const f=e.map((b,x)=>p(x,g)),m=f.join(","),y=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${y}))`}function p(g,f){return t.indexOf(g)!==-1&&e[g]!==1?`${e[g]} - ${f[g]} - 1`:`${f[g]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z0e(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:i}=r,a=s.shape.length,o=lt(i,s.shape);if(a===0)return hs({inputs:{x:s},backend:t});const l=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new U0e(s.shape,o):new X0e(s.shape,o);return t.runWebGLProgram(l,[s],s.dtype)}const H0e={kernelName:Im,backendName:"webgl",kernelFunc:Z0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K0e{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let i="";typeof t=="number"?i=`float outputValue = ${t.toFixed(2)};`:i=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y0e={kernelName:Cx,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:i,center:a}=e,o=t,l=new K0e(r.shape,i),[u,c]=Tk(a,r.shape[1],r.shape[2]),d=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j0e=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Q0e=vt({opSnippet:j0e}),J0e={kernelName:Jd,backendName:"webgl",kernelFunc:Q0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q0e="return inversesqrt(x);",ebe=vt({opSnippet:q0e,cpuKernelImpl:hde}),tbe={kernelName:qd,backendName:"webgl",kernelFunc:ebe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P_{constructor(e,t,r,s,i,a,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=zt(i.length),c=zt(a.length);let d="";r===1?d="i":r===2&&(d="i, j");const h=`getIndices(${d})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const g=`getUpdates(${p})`;let f="";l&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,y=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${g};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nbe{constructor(e,t,r,s,i,a,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=zt(i.length),c=zt(a.length);let d="";r===1?d="i":r===2&&(d="i, j");const h=`getIndices(${d})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const g=`getUpdates(${p})`;let f="";l&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,y=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${g};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rbe(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=ll(i,s,a),h=[d/u,u];if(d===0)return t.makeTensorInfo(a,s.dtype);const p=Ie({inputs:{x:s},backend:t,attrs:{shape:[l,o]}}),g=Ie({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),f=t.makeTensorInfo([],"float32",new Float32Array([0]));let m;q().getBool("WEBGL_PACK")?m=new nbe(l,o,p.shape.length,g.shape.length,c,h):m=new P_(l,o,p.shape.length,g.shape.length,c,h);const y=t.runWebGLProgram(m,[g,p,f],g.dtype),b=Ie({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(f),b}const sbe={kernelName:cx,backendName:"webgl",kernelFunc:rbe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ibe{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const i="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=q().getNumber("WEBGL_VERSION")===2?i:a,l=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abe(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:i}=e,{side:a}=r,o=new ibe(s.shape[0],s.shape[1],i.shape[1],a),l=[[s.shape[1]]];return t.runWebGLProgram(o,[s,i],"int32",l)}const obe={kernelName:hx,backendName:"webgl",kernelFunc:abe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lbe{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,i;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)i="resRC",s="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${o[c]}`),c<e&&l.push(`${o[c]}`);s=l.join(),i=u.join()}const a=zt(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ube(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:i}=e,a=new lbe(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(a,[r,s,i],Vr(s.dtype,i.dtype))}const cbe={kernelName:km,backendName:"webgl",kernelFunc:ube};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dbe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${hv};
  float scale = ${pv};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,hbe=vt({opSnippet:dbe}),pbe={kernelName:eh,backendName:"webgl",kernelFunc:hbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fbe=zh+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,mbe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gbe=vt({opSnippet:fbe,packedOpSnippet:mbe,cpuKernelImpl:fde}),ybe={kernelName:sh,backendName:"webgl",kernelFunc:gbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bbe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,xbe=vt({opSnippet:bbe}),vbe={kernelName:rh,backendName:"webgl",kernelFunc:xbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wbe=zh+`
  return sin(x);
`,Sbe=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Vu}
  return result;
`,Tbe=vt({opSnippet:wbe,packedOpSnippet:Sbe}),Ibe={kernelName:th,backendName:"webgl",kernelFunc:Tbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kbe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Cbe=vt({opSnippet:kbe}),_be={kernelName:nh,backendName:"webgl",kernelFunc:Cbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mbe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Nbe=vt({opSnippet:Mbe}),Ebe={kernelName:ih,backendName:"webgl",kernelFunc:Nbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rbe=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,paddings:a}=r;M(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((y,b)=>y*b),l=[[0,0]];l.push(...a);for(let y=1+i.length;y<s.shape.length;++y)l.push([0,0]);const u=[],c=yO({inputs:{x:s},backend:t,attrs:{paddings:l,constantValue:0}}),d=ng(c.shape,i,o,!1),h=rg(d.length,i.length,!1),p=sg(c.shape,i,o,!1),g=Ie({inputs:{x:c},backend:t,attrs:{shape:d}}),f=_r({inputs:{x:g},backend:t,attrs:{perm:h}}),m=Ie({inputs:{x:f},backend:t,attrs:{shape:p}});return u.push(c),u.push(g),u.push(f),u.forEach(y=>t.disposeIntermediateTensorInfo(y)),m},Lbe={kernelName:Mm,backendName:"webgl",kernelFunc:Rbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Abe(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:i,defaultValue:a}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=t.readSync(r.dataId),l=t.readSync(s.dataId),u=t.readSync(i.dataId),c=t.readSync(a.dataId)[0],[d,h,p,g,f]=gde(o,r.shape,r.dtype,l,s.dtype,u,c);return[t.makeTensorInfo(h,r.dtype,d),t.makeTensorInfo([h[0]],s.dtype,p),t.makeTensorInfo([g.length],"bool",new Uint8Array(g.map(m=>Number(m)))),t.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}const zbe={kernelName:px,backendName:"webgl",kernelFunc:Abe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dbe(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:i}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(t.readSync(s.dataId)),o=t.readSync(r.dataId),l=Array.from(t.readSync(i.dataId)),[u,c,d]=yde(o,r.shape,r.dtype,a,l);return[t.makeTensorInfo(c,r.dtype,u),t.makeTensorInfo([d.length],i.dtype,new Int32Array(d))]}const Pbe={kernelName:fx,backendName:"webgl",kernelFunc:Dbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $be(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const a=t.readSync(r.dataId),o=t.readSync(s.dataId),l=t.readSync(i.dataId),[u,c]=WG(a,r.shape,r.dtype,o,l,!0);return t.makeTensorInfo(c,r.dtype,u)}const Fbe={kernelName:mx,backendName:"webgl",kernelFunc:$be};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gbe(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const a=t.readSync(r.dataId),o=t.readSync(s.dataId),l=t.readSync(i.dataId),[u,c]=WG(a,r.shape,r.dtype,o,l);return t.makeTensorInfo(c,r.dtype,u)}const Obe={kernelName:gx,backendName:"webgl",kernelFunc:Gbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wbe(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=ll(i,s,o),p=!1;if(i.dtype==="string"){const y=t.bufferSync(s),b=t.bufferSync(i),x=$a(t.readSync(a.dataId)[0]),v=pde(y,b,o,h,c,u,l,d,x,p);return t.makeTensorInfo(o,v.dtype,v.values)}const g=new P_(u,l,s.shape.length,i.shape.length,d,[h,1],p),f=t.runWebGLProgram(g,[i,s,a],i.dtype),m=Ie({inputs:{x:f},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(f),m}const Vbe={kernelName:yx,backendName:"webgl",kernelFunc:Wbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bbe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=lt(a,s.shape)[0],l=Fk(s,i,o),u=s.shape.length,c=new Array(u).fill(0),d=s.shape.slice();return l.map(h=>{const p=[...d];p[o]=h;const g=Dh({inputs:{x:s},backend:t,attrs:{begin:c,size:p}});return c[o]+=h,g})}const Xbe={kernelName:Nm,backendName:"webgl",kernelFunc:Bbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J3="return sqrt(x);",Ube=vt({opSnippet:J3,packedOpSnippet:J3,cpuKernelImpl:bde}),Zbe={kernelName:ah,backendName:"webgl",kernelFunc:Ube};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hbe="return x * x;",Kbe=vt({opSnippet:Hbe}),Ybe={kernelName:bx,backendName:"webgl",kernelFunc:Kbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q3="return (a - b) * (a - b);",jbe=ur({opSnippet:q3,packedOpSnippet:q3}),Qbe={kernelName:oh,backendName:"webgl",kernelFunc:jbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jbe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const i=t.readSync(s.dataId),a=Ba(i),o=xde(a,"string",r);return t.makeTensorInfo(s.shape,"string",o)}const qbe={kernelName:Rm,backendName:"webgl",kernelFunc:Jbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function exe({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=ri+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,i=new ji(r.shape,s);return t.runWebGLProgram(i,[r],r.dtype)}const txe={kernelName:hh,backendName:"webgl",kernelFunc:exe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nxe{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,i=zt(r.length),a=zt(r.length);let o="";if(s===1)o="coords * strides + begin";else{let l=0;o=r.map((u,c)=>(l++,r.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${e});
      ${i} strides = ${i}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rxe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:g,isIdentity:f,sliceDim0:m,isSimpleSlice:y,begin:b,end:x,strides:v}=vk(s.shape,i,a,o,l,u,c,d,h);let w;if(f)w=Ie({inputs:{x:s},backend:t,attrs:{shape:g}});else if(m||y){M(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const k=yk(b,x,v),S=Dh({inputs:{x:s},backend:t,attrs:{begin:b,size:k}});w=Ie({inputs:{x:S},backend:t,attrs:{shape:g}}),t.disposeIntermediateTensorInfo(S)}else if(t.shouldExecuteOnCPU([s])){const k=t.readSync(s.dataId),S=rt(s.shape,s.dtype,k),C=vde(p,S,v,b);w=t.makeTensorInfo(g,s.dtype,C.values)}else{const k=new nxe(b,v,p);w=t.runWebGLProgram(k,[s],s.dtype)}const T=Ie({inputs:{x:w},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(w),T}const sxe={kernelName:xx,backendName:"webgl",kernelFunc:rxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ixe(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=e,h=t.readSync(c.dataId),p=t.readSync(d.dataId),[g,f]=wde(h,p,s,i,a,o,l,u);return[t.makeTensorInfo([g.length],"string",g),t.makeTensorInfo(d.shape,"int32",f)]}const axe={kernelName:vx,backendName:"webgl",kernelFunc:ixe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oxe(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:i,delimiter:a}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=t.readSync(i.dataId),l=t.readSync(a.dataId)[0],[u,c,d]=Sde(o,l,s),h=c.length;return[t.makeTensorInfo([h,2],"int32",u),t.makeTensorInfo([h],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const lxe={kernelName:wx,backendName:"webgl",kernelFunc:oxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uxe(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(i.dataId),o=Tde(a,s);return t.makeTensorInfo(i.shape,"int32",o)}const cxe={kernelName:Sx,backendName:"webgl",kernelFunc:uxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dxe="return tan(x);",hxe=vt({opSnippet:dxe}),pxe={kernelName:uh,backendName:"webgl",kernelFunc:hxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fxe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,mxe=vt({opSnippet:fxe}),gxe={kernelName:ch,backendName:"webgl",kernelFunc:mxe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yxe(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:s,indices:i,updates:a}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=ll(a,i,s.shape),h=[d/u,u];if(d===0)return t.makeTensorInfo(s.shape,i.dtype);const p=Ie({inputs:{x:i},backend:t,attrs:{shape:[l,o]}}),g=Ie({inputs:{x:a},backend:t,attrs:{shape:[l,u]}}),f=Ie({inputs:{x:s},backend:t,attrs:{shape:h}}),m=new P_(l,o,p.shape.length,g.shape.length,c,h,!1,!0),y=t.runWebGLProgram(m,[g,p,f],f.dtype),b=Ie({inputs:{x:y},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),b}const bxe={kernelName:dx,backendName:"webgl",kernelFunc:yxe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xxe{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;const s=zt(this.rank),i=vxe(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function vxe(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:i}=r;if(s.dtype==="string"||s.shape.length>5){const o=t.readSync(s.dataId),l=s.dtype==="string"?o.map(d=>$a(d)):o,u=rt(s.shape,s.dtype,l),c=kde(u,i);return t.makeTensorInfo(c.shape,c.dtype,c.values)}const a=new xxe(s.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}const wxe={kernelName:dh,backendName:"webgl",kernelFunc:xO};class Sxe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Txe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bl(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function eR(n){let e=1;for(;e<n;)e*=2;return e}function Ixe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:i,sorted:a}=r,o=q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(t.shouldExecuteOnCPU([s])||c<o||i>l){const C=t.readSync(s.dataId),[_,z]=Cde(C,u,s.dtype,i,a);return[t.makeTensorInfo(_.shape,_.dtype,_.values),t.makeTensorInfo(z.shape,z.dtype,z.values)]}if(i===0)return u[u.length-1]=0,[t.makeTensorInfo(u,s.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(c===1)return[s,vg({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const d=t.texData.get(s.dataId),h=d!==null&&d.isPacked,p=h?t.unpackTensor(s):s,g=ie(u)/c,f=Ie({inputs:{x:p},attrs:{shape:[g,c]},backend:t});h&&bl(t,p);const m=eR(i),y=eR(c);let b=null;const x=()=>b===null?[f,f]:[f,b],v=(C,_,z)=>{const P=x(),R=new Sxe(z),A=[[c],[b===null?1:0],[Number.NEGATIVE_INFINITY],[C],[_]],F=b;b=t.runWebGLProgram(R,P,"int32",A),bl(t,F)};for(let C=1;C<m;C*=2){const _=C*2;for(let z=C;z>=1;z/=2)v(_,z,[g,y])}for(let C=y;C>m;C/=2){const _=x(),z=new Txe([g,C/2]),P=[[c],[b===null?1:0],[m]],R=b;b=t.runWebGLProgram(z,_,"int32",P),bl(t,R);const A=m/2,F=A*2;for(let B=A;B>=1;B/=2)v(F,B,b.shape)}let w=b;b=Dh({inputs:{x:b},backend:t,attrs:{begin:0,size:[g,i]}}),bl(t,w);let T=dO({inputs:{x:f,indices:b},backend:t,attrs:{axis:1,batchDims:1}});bl(t,f);const k=u.slice(0,-1);k.push(i),w=b,b=Ie({inputs:{x:b},attrs:{shape:k},backend:t}),bl(t,w);const S=T;return T=Ie({inputs:{x:T},attrs:{shape:k},backend:t}),bl(t,S),[T,b]}const kxe={kernelName:Tx,backendName:"webgl",kernelFunc:Ixe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cxe{constructor(e,t,r,s,i,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o=r==="nearest"?1:2;let l;switch(s){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _xe(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,d,h,p]=s.shape,[g,f]=u??[d,h],m=[c,g,f,p],y=new Cxe(d,h,a,o,l,m);return t.runWebGLProgram(y,[s,i],"float32")}const Mxe={kernelName:Ix,backendName:"webgl",kernelFunc:_xe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nxe(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:i}=e;Mh(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=_de(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}const Exe={kernelName:kx,backendName:"webgl",kernelFunc:Nxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rxe(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let c=0;for(let f=0;f<o;f++)f!==i&&(u[c++]=a.shape[f]);const d=[],h=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const g=new Array(l);for(let f=0;f<g.length;f++){h[i]=f;const m=Dh({inputs:{x:a},backend:t,attrs:{begin:h,size:p}}),y=Ie({inputs:{x:m},backend:t,attrs:{shape:u}});g[f]=y,d.push(m)}return d.forEach(f=>t.disposeIntermediateTensorInfo(f)),g}const Lxe={kernelName:Lm,backendName:"webgl",kernelFunc:Rxe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Axe{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,i=e.inSize,a=e.numSegments,o=a*Math.ceil(i/r);this.outputShape=[s,o];const l="0.0",u="sumValue",c=Math.floor(r/4)*4,d=r%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";i%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let g="";i%r>0&&(g=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${g}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zxe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:i}=e,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const c=rn([u],o);let d=s;c!=null&&(d=_r({inputs:{x:s},backend:t,attrs:{perm:c}}),l.push(d),u=mn(1,o)[0]);const h=gP(d.shape,u,a),p=ie([d.shape[u]]),g=Ie({inputs:{x:d},backend:t,attrs:{shape:[-1,p]}});l.push(g);const f=_x(s.dtype),m=(v,w,T,k,S)=>{const C=v.shape[0],_=v.shape[1],z=mP(_,S),P={windowSize:z,inSize:_,batchSize:C,numSegments:S},R=new Axe(P,w),A=t.compileAndRun(R,[v,T],k);if(l.push(A),A.shape[1]===S)return A;const F=bO({backend:t,attrs:{start:0,stop:S,step:1,dtype:"float32"}}),B=xO({inputs:{x:F},backend:t,attrs:{reps:[_/z]}});return l.push(F),l.push(B),m(A,w,B,k,S)},y=m(g,"unsortedSegmentSum",i,f,a),b=Ie({inputs:{x:y},backend:t,attrs:{shape:h}});let x=b;if(c!=null){l.push(b);const v=sl(c);x=_r({inputs:{x},backend:t,attrs:{perm:v}})}return l.forEach(v=>t.disposeIntermediateTensorInfo(v)),x}const Dxe={kernelName:Am,backendName:"webgl",kernelFunc:zxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pxe=[xhe,whe,Ihe,_he,Nhe,Lhe,zhe,Phe,Ohe,Vhe,Uhe,Khe,Qhe,tpe,spe,ape,lpe,hpe,fpe,gpe,vpe,_pe,Npe,Ape,Dpe,Wpe,Bpe,Hpe,nhe,jpe,tfe,ife,dfe,ffe,gfe,bfe,vfe,Ife,_fe,Efe,Lfe,zfe,Pfe,Gfe,Wfe,Ufe,Hfe,jfe,qfe,tme,ime,ume,pme,gme,xme,vme,Sme,Ime,Cme,Mme,Eme,zme,$me,Ome,Vme,Ume,Kme,Jme,nge,the,sge,qpe,oge,cge,pge,she,yge,wge,Tge,_ge,Ege,zge,$ge,Wge,Uge,Kge,jge,eye,nye,sye,lye,cye,hye,fye,gye,vye,Iye,Mye,Pye,ohe,Oye,Bye,Zye,Yye,$pe,Jye,e0e,n0e,i0e,u0e,ahe,d0e,p0e,m0e,y0e,b0e,Fpe,Lye,w0e,k0e,N0e,uhe,A0e,P0e,O0e,B0e,H0e,Y0e,J0e,tbe,sbe,obe,cbe,pbe,ybe,vbe,Ibe,_be,kpe,zye,Ebe,Lbe,zbe,Pbe,Fbe,Obe,Vbe,Xbe,Zbe,Ybe,Qbe,qbe,txe,sxe,axe,lxe,cxe,Aye,ghe,pxe,gxe,bxe,wxe,kxe,Mxe,yhe,Exe,Lxe,Dxe,qye];for(const n of Pxe)jr(n);const vO="",tR=typeof window<"u"&&window.Blob&&new Blob([atob(vO)],{type:"text/javascript;charset=utf-8"});function $xe(n){let e;try{if(e=tR&&(window.URL||window.webkitURL).createObjectURL(tR),!e)throw"";const t=new Worker(e,{name:n==null?void 0:n.name});return t.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(e)}),t}catch{return new Worker("data:application/javascript;base64,"+vO,{name:n==null?void 0:n.name})}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}const Fxe=(n,e)=>[[n[0][0]*e[0][0]+n[0][2]*e[2][0],n[0][0]*e[0][1]+n[0][2]*e[2][1],n[0][0]*e[0][2]+n[0][2]*e[2][2],n[0][0]*e[0][3]+n[0][2]*e[2][3]],[n[1][1]*e[1][0]+n[1][2]*e[2][0],n[1][1]*e[1][1]+n[1][2]*e[2][1],n[1][1]*e[1][2]+n[1][2]*e[2][2],n[1][1]*e[1][3]+n[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],Gxe=(n,e,t,r)=>{const s=n[0][0]*e+n[0][1]*t+n[0][3],i=n[1][0]*e+n[1][1]*t+n[1][3],a=n[2][0]*e+n[2][1]*t+n[2][3];return{x:s,y:i,z:a}},Oxe=(n,e,t,r)=>{const{x:s,y:i,z:a}=Gxe(n,e,t);return{x:s/a,y:i/a}},Wxe=6,Vxe=1,Bxe=10,Xxe=1,Uxe=.8,Zxe=1,Pi=1e3;class Hxe{constructor(e,t,r,s,i,a=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=r,this.debugMode=a,this.trackingKeyframeList=[];for(let l=0;l<t.length;l++)this.trackingKeyframeList.push(t[l][Zxe]);let o=0;for(let l=0;l<this.trackingKeyframeList.length;l++)o=Math.max(o,this.trackingKeyframeList[l].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let l=0;l<this.trackingKeyframeList.length;l++){const{featurePoints:u,imagePixels:c,imageProperties:d}=this._prebuild(this.trackingKeyframeList[l],o);this.featurePointsListT[l]=u,this.imagePixelsListT[l]=c,this.imagePropertiesListT[l]=d}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let r=0;r<this.featurePointsListT.length;r++)this.track(e,t,r)}track(e,t,r){let s={};const i=Fxe(this.projectionTransform,t),a=this._buildAdjustedModelViewTransform(i);this.markerDimensions[r][0],this.markerDimensions[r][1],this.trackingKeyframeList[r].width,this.trackingKeyframeList[r].height;const o=this.featurePointsListT[r],l=this.imagePixelsListT[r],u=this.imagePropertiesListT[r],c=this._computeProjection(a,e,r),{matchingPointsT:d,simT:h}=this._computeMatching(o,l,u,c),p=d.arraySync(),g=h.arraySync(),f=this.trackingKeyframeList[r],m=[],y=[],b=[];for(let x=0;x<p.length;x++)if(g[x]>Uxe&&x<f.points.length){b.push(x);const v=Oxe(i,p[x][0],p[x][1]);y.push(v),m.push({x:f.points[x].x/f.scale,y:f.points[x].y/f.scale,z:0})}return this.debugMode&&(s={projectedImage:c.arraySync(),matchingPoints:d.arraySync(),goodTrack:b,trackedPoints:y}),a.dispose(),c.dispose(),d.dispose(),h.dispose(),{worldCoords:m,screenCoords:y,debugExtra:s}}_computeMatching(e,t,r,s){const i=Wxe,a=i*2+1,o=Bxe*Vxe,l=Xxe,u=o*2+1,c=s.shape[0],d=s.shape[1],h=e.shape[0];if(!this.kernelCaches.computeMatching){const p={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[h,u*u],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    int featureIndex = coords[0];
	    int searchOffsetIndex = coords[1];

	    int markerWidth = int(getMarkerProperties(0));
	    int markerHeight = int(getMarkerProperties(1));
	    float markerScale = getMarkerProperties(2);

	    int searchOffsetX = imod(searchOffsetIndex, ${u}) * ${l};
	    int searchOffsetY = searchOffsetIndex / ${u} * ${l};

	    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);
	    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);

	    int sx = sCenterX + searchOffsetX - ${o};
	    int sy = sCenterY + searchOffsetY - ${o};

	    if (sx < ${i} || sx >= (${d} - ${i}) || sy < ${i} || sy >= (${c} - ${i})) {
	      setOutput(-2.);
	    } 
	    else {
	      float sumPoint = 0.;
	      float sumPointSquare = 0.;
	      float sumTemplate = 0.;
	      float sumTemplateSquare = 0.;
	      float sumPointTemplate = 0.;

	      for (int templateOffsetY = 0; templateOffsetY < ${a}; templateOffsetY++) {
		for (int templateOffsetX = 0; templateOffsetX < ${a}; templateOffsetX++) {
		  int fx2 = sCenterX + templateOffsetX - ${i};
		  int fy2 = sCenterY + templateOffsetY - ${i};

		  int sx2 = sx + templateOffsetX - ${i};
		  int sy2 = sy + templateOffsetY - ${i};

		  int markerPixelIndex = fy2 * markerWidth + fx2;
		  float markerPixel = getMarkerPixels(markerPixelIndex);
		  float targetPixel = getTargetPixels(sy2, sx2);

		  sumTemplate += markerPixel;
		  sumTemplateSquare += markerPixel * markerPixel;
		  sumPoint += targetPixel;
		  sumPointSquare += targetPixel * targetPixel;
		  sumPointTemplate += targetPixel * markerPixel;
		}
	      }

	      // Normalized cross-correlation
	      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)
	      float count = float(${a} * ${a});
	      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);
	      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);

	      if (pointVariance < 0.0000001) {
		setOutput(-3.);
	      } else if (templateVariance < 0.0000001) {
		//setOutput(sumTemplate);
		setOutput(-4.);
	      } else {
		sumPointTemplate -= sumPoint / count * sumTemplate;
		float sim = sumPointTemplate / pointVariance / templateVariance;  
		setOutput(sim);
	      }
	    }
	  }
	`},g={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[h,2],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    float markerScale = getMarkerProperties(2);

	    int featureIndex = coords[0];

	    int maxIndex = int(getMaxIndex(featureIndex));
	    int searchLocationIndex = maxIndex / ${u*u};
	    int searchOffsetIndex = imod(maxIndex, ${u*u});

	    if (coords[1] == 0) {
	      int searchOffsetX = imod(searchOffsetIndex, ${u}) * ${l};
	      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - ${o}) / markerScale);
	    }
	    else if (coords[1] == 1) {
	      int searchOffsetY = searchOffsetIndex / ${u} * ${l};
	      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - ${o}) / markerScale);
	    }
	  }
	`},f={variableNames:["sims","maxIndex"],outputShape:[h],userCode:`
	  void main() {
	    int featureIndex = getOutputCoords();
	    int maxIndex = int(getMaxIndex(featureIndex));
	    setOutput(getSims(featureIndex, maxIndex));
	  }
	`};this.kernelCaches.computeMatching=[p,g,f]}return j(()=>{const p=this.kernelCaches.computeMatching,g=this._compileAndRun(p[0],[e,t,r,s]),f=g.argMax(1),m=this._compileAndRun(p[1],[e,r,f]),y=this._compileAndRun(p[2],[g,f]);return{matchingPointsT:m,simT:y}})}_computeProjection(e,t,r){const s=this.trackingKeyframeList[r].width,i=this.trackingKeyframeList[r].height,a=this.trackingKeyframeList[r].scale,o=s+"-"+i+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[o]){const l={variableNames:["M","pixel"],outputShape:[i,s],userCode:`
	  void main() {
	      ivec2 coords = getOutputCoords();

	      float m00 = getM(0, 0) * ${Pi}.;
	      float m01 = getM(0, 1) * ${Pi}.;
	      float m03 = getM(0, 3) * ${Pi}.;
	      float m10 = getM(1, 0) * ${Pi}.;
	      float m11 = getM(1, 1) * ${Pi}.;
	      float m13 = getM(1, 3) * ${Pi}.;
	      float m20 = getM(2, 0) * ${Pi}.;
	      float m21 = getM(2, 1) * ${Pi}.;
	      float m23 = getM(2, 3) * ${Pi}.;

	      float y = float(coords[0]) / float(${a});
	      float x = float(coords[1]) / float(${a});
	      float uz = (x * m20) + (y * m21) + m23;
	      float oneOverUz = 1. / uz;

	      float ux = (x * m00) + (y * m01) + m03;
	      float uy = (x * m10) + (y * m11) + m13;

	      ux = floor(ux * oneOverUz + 0.5);
	      uy = floor(uy * oneOverUz + 0.5);
	      setOutput(getPixel(int(uy), int(ux)));
	    }
	`};this.kernelCaches.computeProjection[o]=l}return j(()=>{const l=this.kernelCaches.computeProjection[o];return this._compileAndRun(l,[e,t])})}_buildAdjustedModelViewTransform(e){return j(()=>{let t=[];for(let r=0;r<e.length;r++){t.push([]);for(let s=0;s<e[r].length;s++)t[r].push(e[r][s]/Pi)}return Kt(t,[3,4])})}_prebuild(e,t){return j(()=>{const r=e.scale,s=[];for(let o=0;o<t;o++)o<e.points.length?s.push([e.points[o].x/r,e.points[o].y/r]):s.push([-1,-1]);const i=Kt(e.data,[e.width*e.height]),a=Kt([e.width,e.height,e.scale],[3]);return{featurePoints:Kt(s,[s.length,2],"float32"),imagePixels:i,imageProperties:a}})}_compileAndRun(e,t){const r=Ki().compileAndRun(e,t);return Dt().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}}const my=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],vu=[];for(let n=0;n<my.length;n++){const e=my[n].sigma;for(let t=0;t<my[n].points.length;t++){const r=my[n].points[t];vu.push([e,r[0],r[1]])}}const fw={};function Kxe(n){const e=n.shape[1],t=n.shape[0],r="w"+e+"h"+t;if(!fw.hasOwnProperty(r)){const s={variableNames:["p"],outputShape:[t,e],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0], coords[1]-2);
          sum += getP(coords[0], coords[1]-1) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0], coords[1]+1) * 4.;
          sum += getP(coords[0], coords[1]+2);
          setOutput(sum);
        }
      `},i={variableNames:["p"],outputShape:[t,e],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0]-2, coords[1]);
          sum += getP(coords[0]-1, coords[1]) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0]+1, coords[1]) * 4.;
          sum += getP(coords[0]+2, coords[1]);
          sum /= 256.;
          setOutput(sum);
        }
      `};fw[r]=[s,i]}return fw[r]}const Yxe=n=>{const e=n.inputs.image,t=n.backend,[r,s]=Kxe(e),i=t.runWebGLProgram(r,[e],e.dtype),a=t.runWebGLProgram(s,[i],e.dtype);return t.disposeIntermediateTensorInfo(i),a},jxe={kernelName:"BinomialFilter",backendName:"webgl",kernelFunc:Yxe},gy=7,nR=3,Qxe=nR*nR,mw=4,Jxe=(mw+1)*(mw+1)/mw,gw={};function qxe(n){const e=n.shape[1],t=n.shape[0],r="w"+e+"h"+t;if(!gw.hasOwnProperty(r)){const s={variableNames:["image0","image1","image2"],outputShape:[t,e],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();
    
          int y = coords[0];
          int x = coords[1];
    
          float value = getImage1(y, x);
    
          // Step 1: find local maxima/minima
          if (value * value < ${Qxe}.) {
            setOutput(0.);
            return;
          }
          if (y < ${gy} || y > ${t-1-gy}) {
            setOutput(0.);
            return;
          }
          if (x < ${gy} || x > ${e-1-gy}) {
            setOutput(0.);
            return;
          }
    
          bool isMax = true;
          bool isMin = true;
          for (int dy = -1; dy <= 1; dy++) {
            for (int dx = -1; dx <= 1; dx++) {
              float value0 = getImage0(y+dy, x+dx);
              float value1 = getImage1(y+dy, x+dx);
              float value2 = getImage2(y+dy, x+dx);
    
        if (value < value0 || value < value1 || value < value2) {
          isMax = false;
        }
        if (value > value0 || value > value1 || value > value2) {
          isMin = false;
        }
            }
          }
    
          if (!isMax && !isMin) {
            setOutput(0.);
            return;
          }
    
          // compute edge score and reject based on threshold
          float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);
          float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);
          float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));
    
          float det = (dxx * dyy) - (dxy * dxy);
    
          if (abs(det) < 0.0001) { // determinant undefined. no solution
            setOutput(0.);
            return;
          }
    
          float edgeScore = (dxx + dyy) * (dxx + dyy) / det;
    
          if (abs(edgeScore) >= ${Jxe} ) {
            setOutput(0.);
            return;
          }
          setOutput(getImage1(y,x));
        }
      `};gw[r]=s}return gw[r]}const eve=n=>{let{image0:e,image1:t,image2:r}=n.inputs;const s=n.backend,i=qxe(t);return e=Dt().runKernel("DownsampleBilinear",{image:e}),r=Dt().runKernel("UpsampleBilinear",{image:r,targetImage:t}),s.runWebGLProgram(i,[e,t,r],t.dtype)},tve={kernelName:"BuildExtremas",backendName:"webgl",kernelFunc:eve},tp=36,yw={};function nve(n){const e=n.shape[0];if(!yw.hasOwnProperty(e)){const t={variableNames:["histogram"],outputShape:[n.shape[0]],userCode:`
            void main() {
                int featureIndex = getOutputCoords();

                int maxIndex = 0;
                for (int i = 1; i < ${tp}; i++) {
                    if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {
                        maxIndex = i;
                    }
                }

                int prev = imod(maxIndex - 1 + ${tp}, ${tp});
                int next = imod(maxIndex + 1, ${tp});

                /**
                 * Fit a quatratic to 3 points. The system of equations is:
                 *
                 * y0 = A*x0^2 + B*x0 + C
                 * y1 = A*x1^2 + B*x1 + C
                 * y2 = A*x2^2 + B*x2 + C
                 *
                 * This system of equations is solved for A,B,C.
                 */
                float p10 = float(maxIndex - 1);
                float p11 = getHistogram(featureIndex, prev); 
                float p20 = float(maxIndex);
                float p21 = getHistogram(featureIndex, maxIndex); 
                float p30 = float(maxIndex + 1);
                float p31 = getHistogram(featureIndex, next); 

                float d1 = (p30-p20)*(p30-p10);
                float d2 = (p10-p20)*(p30-p10);
                float d3 = p10-p20;

                // If any of the denominators are zero then, just use maxIndex.
                    float fbin = float(maxIndex);
                if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {
                float a = p10*p10;
                float b = p20*p20;

                // Solve for the coefficients A,B,C
                float A = ((p31-p21)/d1)-((p11-p21)/d2);
                float B = ((p11-p21)+(A*(b-a)))/d3;
                float C = p11-(A*a)-(B*p10);
                fbin = -B / (2. * A);
                }

                float an = 2.0 *${Math.PI} * (fbin + 0.5) / ${tp}. - ${Math.PI};
                setOutput(an);
            }
            `};yw[e]=t}return yw[e]}const rve=n=>{const{histograms:e}=n.inputs,t=n.backend,r=nve(e);return t.runWebGLProgram(r,[e],e.dtype)},sve={kernelName:"ComputeExtremaAngles",backendName:"webgl",kernelFunc:rve},rR=7,bw={};function ive(n,e){const t=`${n}|${e.shape[0]}`;if(!bw.hasOwnProperty(t)){const r=[];for(let a=1;a<n;a++)r.push("image"+a);let s="float getPixel(int octave, int y, int x) {";for(let a=1;a<n;a++)s+=`
  if (octave == ${a}) {
	return getImage${a}(y, x);
  }
`;s+="}";const i={variableNames:[...r,"extrema","angles","freakPoints"],outputShape:[e.shape[0],vu.length],userCode:`
  ${s}
  void main() {
	ivec2 coords = getOutputCoords();
	int featureIndex = coords[0];
	int freakIndex = coords[1];

	float freakSigma = getFreakPoints(freakIndex, 0);
	float freakX = getFreakPoints(freakIndex, 1);
	float freakY = getFreakPoints(freakIndex, 2);

	int octave = int(getExtrema(featureIndex, 1));
	float inputY = getExtrema(featureIndex, 2);
	float inputX = getExtrema(featureIndex, 3);
	float inputAngle = getAngles(featureIndex);
	float cos = ${rR}. * cos(inputAngle);
	float sin = ${rR}. * sin(inputAngle);

	float yp = inputY + freakX * sin + freakY * cos;
	float xp = inputX + freakX * cos + freakY * -sin;

	int x0 = int(floor(xp));
	int x1 = x0 + 1;
	int y0 = int(floor(yp));
	int y1 = y0 + 1;

	float f1 = getPixel(octave, y0, x0);
	float f2 = getPixel(octave, y0, x1);
	float f3 = getPixel(octave, y1, x0);
	float f4 = getPixel(octave, y1, x1);

	float x1f = float(x1);
	float y1f = float(y1);
	float x0f = float(x0);
	float y0f = float(y0);

	// ratio for interpolation between four neighbouring points
	float value = (x1f - xp) * (y1f - yp) * f1
		+ (xp - x0f) * (y1f - yp) * f2
		+ (x1f - xp) * (yp - y0f) * f3
		+ (xp - x0f) * (yp - y0f) * f4;

	setOutput(value);
  }
`};bw[t]=i}return bw[t]}const ave=n=>{const{gaussianImagesT:e,prunedExtremas:t,prunedExtremasAngles:r,freakPointsT:s,pyramidImagesLength:i}=n.inputs,a=n.backend,o=ive(i,t);return a.runWebGLProgram(o,[...e,t,r,s],"float32")},ove={kernelName:"ComputeExtremaFreak",backendName:"webgl",kernelFunc:ave},wO=(vu.length-1)*vu.length/2,lve=Math.ceil(wO/8),xw={};function uve(n){const e=`${n.shape[0]}`;if(!xw.hasOwnProperty(e)){const t={variableNames:["freak","p"],outputShape:[n.shape[0],lve],userCode:`
  void main() {
    ivec2 coords = getOutputCoords();
    int featureIndex = coords[0];
    int descIndex = coords[1] * 8;

    int sum = 0;
    for (int i = 0; i < 8; i++) {
      if (descIndex + i >= ${wO}) {
        continue;
      }

      int p1 = int(getP(descIndex + i, 0));
      int p2 = int(getP(descIndex + i, 1));

      float v1 = getFreak(featureIndex, p1);
      float v2 = getFreak(featureIndex, p2);

      if (v1 < v2 + 0.01) {
        sum += int(pow(2.0, float(7 - i)));
      }
    }
    setOutput(float(sum));
  }
`};xw[e]=t}return xw[e]}const cve=n=>{const{extremaFreaks:e,positionT:t}=n.inputs,{backend:r}=n,s=uve(e);return r.runWebGLProgram(s,[e,t],"int32")},dve={kernelName:"ComputeFreakDescriptors",backendName:"webgl",kernelFunc:cve},vw={};function hve(n,e){const t=`${n}|${e}`;if(!vw.hasOwnProperty(t)){const r=[];let s="float getPixel(int octave, int y, int x) {";for(let i=1;i<n;i++)r.push("image"+i),s+=`
				if (octave == ${i}) {
					return getImage${i}(y, x);
				}
			`;s+="}",vw[t]={variableNames:[...r,"extrema"],outputShape:[e,3,3],userCode:`
			${s}
		
			void main() {
				ivec3 coords = getOutputCoords();
				int featureIndex = coords[0];
				float score = getExtrema(featureIndex, 0);
				if (score == 0.0) {
					return;
				}
		
				int dy = coords[1]-1;
				int dx = coords[2]-1;
				int octave = int(getExtrema(featureIndex, 1));
				int y = int(getExtrema(featureIndex, 2));
				int x = int(getExtrema(featureIndex, 3));
				setOutput(getPixel(octave, y+dy, x+dx));
			}
			`}}return vw[t]}const pve=n=>{const{prunedExtremasList:e,dogPyramidImagesT:t}=n.inputs,r=n.backend,s=hve(t.length,e.length),i=Kt(e,[e.length,e[0].length],"int32");return r.runWebGLProgram(s,[...t.slice(1),i],t[0].dtype)},fve={kernelName:"ComputeLocalization",backendName:"webgl",kernelFunc:pve},mve=.159154943091895,ac=36,ww={};function gve(n,e,t){const r=`${t}|${n.shape[0]}|${e.shape[0]}`;if(!ww.hasOwnProperty(r)){const s=[];for(let l=1;l<t;l++)s.push("image"+l);let i="float getPixel(int octave, int y, int x) {";for(let l=1;l<t;l++)i+=`
            if (octave == ${l}) {
                return getImage${l}(y, x);
            }
            `;i+="}";const a={variableNames:[...s,"extrema","radial"],outputShape:[n.shape[0],e.shape[0],2],userCode:`
                ${i}

                void main() {
                    ivec3 coords = getOutputCoords();
                    int featureIndex = coords[0];
                    int radialIndex = coords[1];
                    int propertyIndex = coords[2];

                    int radialY = int(getRadial(radialIndex, 0));
                    int radialX = int(getRadial(radialIndex, 1));
                    float radialW = getRadial(radialIndex, 2);

                    int octave = int(getExtrema(featureIndex, 1));
                    int y = int(getExtrema(featureIndex, 2));
                    int x = int(getExtrema(featureIndex, 3));

                    int xp = x + radialX;
                    int yp = y + radialY;

                    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);
                    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);

                    if (propertyIndex == 0) {
                    // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0
                    
                    float angle = atan(dy, dx) + ${Math.PI};
                    float fbin = angle * ${ac}. * ${mve};
                    setOutput(fbin);
                    return;
                    }

                    if (propertyIndex == 1) {
                        float mag = sqrt(dx * dx + dy * dy);
                        float magnitude = radialW * mag;
                        setOutput(magnitude);
                        return;
                    }
                }

                `},o={variableNames:["fbinMag"],outputShape:[n.shape[0],ac],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int featureIndex = coords[0];
                int binIndex = coords[1];

                float sum = 0.;
                for (int i = 0; i < ${e.shape[0]}; i++) {
                    float fbin = getFbinMag(featureIndex, i, 0);
                    int bin = int(floor(fbin - 0.5));
                    int b1 = imod(bin + ${ac}, ${ac});
                    int b2 = imod(bin + 1 + ${ac}, ${ac});

                    if (b1 == binIndex || b2 == binIndex) {
                        float magnitude = getFbinMag(featureIndex, i, 1);
                        float w2 = fbin - float(bin) - 0.5;
                        float w1 = w2 * -1. + 1.;

                        if (b1 == binIndex) {
                            sum += w1 * magnitude;
                        }
                        if (b2 == binIndex) {
                            sum += w2 * magnitude;
                        }
                    }
                }
                setOutput(sum);
            }
            `};ww[r]=[a,o]}return ww[r]}const yve=n=>{const{gaussianImagesT:e,prunedExtremasT:t,radialPropertiesT:r,pyramidImagesLength:s}=n.inputs,i=n.backend,[a,o]=gve(t,r,s),l=i.runWebGLProgram(a,[...e,t,r],r.dtype),u=i.runWebGLProgram(o,[l],r.dtype);return i.disposeIntermediateTensorInfo(l),u},bve={kernelName:"ComputeOrientationHistograms",backendName:"webgl",kernelFunc:yve},Sw={};function xve(n){const e=n.shape[1],t=n.shape[0],r="w"+e+"h"+t;if(!Sw.hasOwnProperty(r)){const s={variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(e/2)],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int y = coords[0] * 2;
                int x = coords[1] * 2;
        
                float sum = getP(y, x) * 0.25;
                sum += getP(y+1,x) * 0.25; 
                sum += getP(y, x+1) * 0.25; 
                sum += getP(y+1,x+1) * 0.25;
                setOutput(sum);
            }
            `};Sw[r]=s}return Sw[r]}const vve=n=>{const e=n.inputs.image,t=n.backend,r=xve(e);return t.runWebGLProgram(r,[e],e.dtype)},wve={kernelName:"DownsampleBilinear",backendName:"webgl",kernelFunc:vve},Sve=n=>{const{extremasResultT:e}=n.inputs,t=n.backend,r=e.shape[0],s=e.shape[1],i={variableNames:["extrema"],outputShape:[Math.floor(r/2),Math.floor(s/2)],userCode:`
		  void main() {
			ivec2 coords = getOutputCoords();
			int y = coords[0] * 2;
			int x = coords[1] * 2;
  
			float location = 0.0;
			float values = getExtrema(y, x);
  
			if (getExtrema(y+1, x) != 0.0) {
			  location = 1.0;
		  values = getExtrema(y+1, x);
			}
			else if (getExtrema(y, x+1) != 0.0) {
			  location = 2.0;
		  values = getExtrema(y, x+1);
			}
			else if (getExtrema(y+1, x+1) != 0.0) {
			  location = 3.0;
		  values = getExtrema(y+1, x+1);
			}
  
			if (values < 0.0) {
			  setOutput(location * -1000.0 + values);
			} else {
			  setOutput(location * 1000.0 + values);
			}
		  }
		`};return t.runWebGLProgram(i,[e],e.dtype)},Tve={kernelName:"ExtremaReduction",backendName:"webgl",kernelFunc:Sve},yy=36,Ive=5,Tw={};function kve(n){const e=`h${n.shape[0]}`;if(!Tw.hasOwnProperty(e)){const t={variableNames:["histogram"],outputShape:[n.shape[0],yy],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();

                int featureIndex = coords[0];
                int binIndex = coords[1];

                int prevBin = imod(binIndex - 1 + ${yy}, ${yy});
                int nextBin = imod(binIndex + 1, ${yy});
                float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);

                setOutput(result);
            }
            `};Tw[e]=t}return Tw[e]}const Cve=n=>{let{histograms:e}=n.inputs;const t=n.backend,r=kve(e);for(let s=0;s<Ive;s++){const i=e;e=t.runWebGLProgram(r,[e],e.dtype),s>0&&t.disposeIntermediateTensorInfo(i)}return e},_ve={kernelName:"SmoothHistograms",backendName:"webgl",kernelFunc:Cve},Iw={};function Mve(n,e){const t=e.shape[1],r=e.shape[0],s="w"+t+"h"+r;if(!Iw.hasOwnProperty(s)){const i={variableNames:["p"],outputShape:[r,t],userCode:`
              void main() {
                ivec2 coords = getOutputCoords();
                int j = coords[0];
                int i = coords[1];
        
                float sj = 0.5 * float(j) - 0.25; 
                float si = 0.5 * float(i) - 0.25;
        
                float sj0 = floor(sj);
                float sj1 = ceil(sj);
                float si0 = floor(si);
                float si1 = ceil(si);
        
                int sj0I = int(sj0);
                int sj1I = int(sj1);
                int si0I = int(si0);
                int si1I = int(si1);
        
                float sum = 0.0;
                sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);
                sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);
                sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);
                sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);
                setOutput(sum);
              }
            `};Iw[s]=i}return Iw[s]}const Nve=n=>{const{image:e,targetImage:t}=n.inputs,r=n.backend,s=Mve(e,t);return r.runWebGLProgram(s,[e],e.dtype)},Eve={kernelName:"UpsampleBilinear",backendName:"webgl",kernelFunc:Nve};jr(jxe);jr(tve);jr(sve);jr(ove);jr(dve);jr(fve);jr(bve);jr(wve);jr(Tve);jr(_ve);jr(Eve);const sR=8,Rve=5,np=10,Lve=5,kw=3,Ave=1.5;(vu.length-1)*vu.length/2;class SO{constructor(e,t,r=!1){this.debugMode=r,this.width=e,this.height=t;let s=0;for(;e>=sR&&t>=sR&&(e/=2,t/=2,s++,s!==Rve););this.numOctaves=s,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let s=0;s<e.length;s++)t[4*s]=e[s],t[4*s+1]=e[s],t[4*s+2]=e[s],t[4*s+3]=255;const r=new ImageData(t,this.width,this.height);return this.detect(r)}detect(e){let t=null;const r=[];for(let y=0;y<this.numOctaves;y++){let b,x;y===0?b=this._applyFilter(e):b=this._downsampleBilinear(r[y-1][r[y-1].length-1]),x=this._applyFilter(b),r.push([b,x])}const s=[];for(let y=0;y<this.numOctaves;y++){let b=this._differenceImageBinomial(r[y][0],r[y][1]);s.push(b)}const i=[];for(let y=1;y<this.numOctaves-1;y++){const b=this._buildExtremas(s[y-1],s[y],s[y+1]);i.push(b)}const a=this._applyPrune(i),o=this._computeLocalization(a,s),l=this._computeOrientationHistograms(o,r),u=this._smoothHistograms(l),c=this._computeExtremaAngles(u),d=this._computeExtremaFreak(r,o,c),h=this._computeFreakDescriptors(d),p=o.arraySync(),g=c.arraySync(),f=h.arraySync();this.debugMode&&(t={pyramidImages:r.map(y=>y.map(b=>b.arraySync())),dogPyramidImages:s.map(y=>y?y.arraySync():null),extremasResults:i.map(y=>y.arraySync()),extremaAngles:c.arraySync(),prunedExtremas:a,localizedExtremas:o.arraySync()}),r.forEach(y=>y.forEach(b=>b.dispose())),s.forEach(y=>y&&y.dispose()),i.forEach(y=>y.dispose()),o.dispose(),l.dispose(),u.dispose(),c.dispose(),d.dispose(),h.dispose();const m=[];for(let y=0;y<p.length;y++){if(p[y][0]==0)continue;const b=[];for(let S=0;S<f[y].length;S+=4){const C=f[y][S],_=f[y][S+1],z=f[y][S+2],P=f[y][S+3];let R=C*16777216+_*65536+z*256+P;b.push(R)}const x=p[y][1],v=p[y][2],w=p[y][3]*Math.pow(2,x)+Math.pow(2,x-1)-.5,T=v*Math.pow(2,x)+Math.pow(2,x-1)-.5,k=Math.pow(2,x);m.push({maxima:p[y][0]>0,x:w,y:T,scale:k,angle:g[y],descriptors:b})}return{featurePoints:m,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const r=[],s=[];for(let o=0;o<e.shape[1];o++)for(let l=o+1;l<e.shape[1];l++)r.push(o),s.push(l);const i=Kt(r,[r.length]).cast("int32"),a=Kt(s,[s.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:un(fr([i,a],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors;return j(()=>Dt().runKernel("ComputeFreakDescriptors",{extremaFreaks:e,positionT:t}))}_computeExtremaFreak(e,t,r){this.tensorCaches._computeExtremaFreak||j(()=>{const a=Kt(vu);this.tensorCaches._computeExtremaFreak={freakPointsT:un(a)}});const{freakPointsT:s}=this.tensorCaches._computeExtremaFreak,i=[];for(let a=1;a<e.length;a++)i.push(e[a][1]);return j(()=>Dt().runKernel("ComputeExtremaFreak",{gaussianImagesT:i,prunedExtremas:t,prunedExtremasAngles:r,freakPointsT:s,pyramidImagesLength:e.length}))}_computeExtremaAngles(e){return j(()=>Dt().runKernel("ComputeExtremaAngles",{histograms:e}))}_computeOrientationHistograms(e,t){const r=[];for(let i=1;i<t.length;i++)r.push(t[i][1]);this.tensorCaches.orientationHistograms||j(()=>{const i=-1/(2*kw*kw),a=kw*Ave,o=Math.ceil(a),l=[];for(let u=-o;u<=o;u++)for(let c=-o;c<=o;c++){const d=c*c+u*u;if(d<=a*a){const h=d*i;let p=(720+h*(720+h*(360+h*(120+h*(30+h*(6+h))))))*.0013888888;l.push([u,c,p])}}this.tensorCaches.orientationHistograms={radialPropertiesT:un(Kt(l,[l.length,3]))}});const{radialPropertiesT:s}=this.tensorCaches.orientationHistograms;return j(()=>Dt().runKernel("ComputeOrientationHistograms",{gaussianImagesT:r,prunedExtremasT:e,radialPropertiesT:s,pyramidImagesLength:t.length}))}_smoothHistograms(e){return j(()=>Dt().runKernel("SmoothHistograms",{histograms:e}))}_computeLocalization(e,t){return j(()=>{const r=Dt().runKernel("ComputeLocalization",{prunedExtremasList:e,dogPyramidImagesT:t}).arraySync(),s=[];for(let a=0;a<r.length;a++){s.push([]);for(let o=0;o<r[a].length;o++)s[a].push([])}const i=[];for(let a=0;a<e.length;a++)i[a]=[e[a][0],e[a][1],e[a][2],e[a][3]];for(let a=0;a<i.length;a++){if(i[a][0]===0)continue;const o=r[a],l=.5*(o[1][2]-o[1][0]),u=.5*(o[2][1]-o[0][1]),c=o[1][2]+o[1][0]-2*o[1][1],d=o[2][1]+o[0][1]-2*o[1][1],h=.25*(o[0][0]+o[2][2]-o[0][2]-o[2][0]),p=c*d-h*h,g=(d*-l+-h*-u)/p,f=(-h*-l+c*-u)/p,m=i[a][2]+f,y=i[a][3]+g;Math.abs(p)<1e-4||(i[a][2]=m,i[a][3]=y)}return Kt(i,[i.length,i[0].length],"float32")})}_applyPrune(e){const t=np*np,r=Lve,s=[],i=[];for(let o=0;o<t;o++){i.push([]),s.push([]);for(let l=0;l<r;l++)i[o].push([0,0,0,0]),s[o].push(0)}j(()=>{for(let o=0;o<e.length;o++){const l=Dt().runKernel("ExtremaReduction",{extremasResultT:e[o]}),u=o+1,c=l.arraySync(),d=l.shape[0],h=l.shape[1],p=h*2/np,g=d*2/np;for(let f=0;f<d;f++)for(let m=0;m<h;m++){const y=c[f][m];if(y==0)continue;const b=y%1e3,x=Math.floor(Math.abs(y)/1e3),v=m*2+(x===2||x===3?1:0),w=f*2+(x===1||x===3?1:0),T=Math.floor(v/p),k=Math.floor(w/g)*np+T,S=Math.abs(b);let C=r;for(;C>=1&&S>s[k][C-1];)C-=1;if(C<r){for(let _=r-1;_>=C+1;_--)s[k][_]=s[k][_-1],i[k][_][0]=i[k][_-1][0],i[k][_][1]=i[k][_-1][1],i[k][_][2]=i[k][_-1][2],i[k][_][3]=i[k][_-1][3];s[k][C]=S,i[k][C][0]=b,i[k][C][1]=u,i[k][C][2]=w,i[k][C][3]=v}}}});const a=[];for(let o=0;o<t;o++)for(let l=0;l<r;l++)a.push(i[o][l]);return a}_buildExtremas(e,t,r){return j(()=>Dt().runKernel("BuildExtremas",{image0:e,image1:t,image2:r}))}_differenceImageBinomial(e,t){return j(()=>e.sub(t))}_applyFilter(e){return j(()=>Dt().runKernel("BinomialFilter",{image:e}))}_downsampleBilinear(e){return j(()=>Dt().runKernel("DownsampleBilinear",{image:e}))}_compileAndRun(e,t){const r=Ki().compileAndRun(e,t);return Dt().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}_runWebGLProgram(e,t,r){const s=Ki().runWebGLProgram(e,t,r);return Dt().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}class zve{constructor(e,t,r=!1){this.debugMode=r,this.width=e,this.height=t;let s=Math.min(e,t)/2,i=Math.pow(2,Math.round(Math.log(s)/Math.log(2)));this.cropSize=i,this.detector=new SO(i,i,r),this.kernelCaches={},this.lastRandomIndex=4}detect(e){const t=Math.floor(this.height/2-this.cropSize/2),r=Math.floor(this.width/2-this.cropSize/2),s=this._detect(e,r,t);return this.debugMode&&(s.debugExtra.crop={startX:r,startY:t,cropSize:this.cropSize}),s}detectMoving(e){const t=this.lastRandomIndex%3,r=Math.floor(this.lastRandomIndex/3);let s=Math.floor(this.height/2-this.cropSize+r*this.cropSize/2),i=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return i<0&&(i=0),s<0&&(s=0),i>=this.width-this.cropSize&&(i=this.width-this.cropSize-1),s>=this.height-this.cropSize&&(s=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,i,s)}_detect(e,t,r){const s=e.slice([r,t],[this.cropSize,this.cropSize]),{featurePoints:i,debugExtra:a}=this.detector.detect(s);return i.forEach(o=>{o.x+=t,o.y+=r}),this.debugMode&&(a.projectedImage=s.arraySync()),s.dispose(),{featurePoints:i,debugExtra:a}}}const TO=({image:n,ratio:e})=>{const t=Math.round(n.width*e),r=Math.round(n.height*e),s=new Uint8Array(t*r);for(let i=0;i<t;i++){let a=Math.round(1*i/e),o=Math.round(1*(i+1)/e)-1;o>=n.width&&(o=n.width-1);for(let l=0;l<r;l++){let u=Math.round(1*l/e),c=Math.round(1*(l+1)/e)-1;c>=n.height&&(c=n.height-1);let d=0,h=0;for(let p=a;p<=o;p++)for(let g=u;g<=c;g++)d+=1*n.data[g*n.width+p],h+=1;s[l*t+i]=Math.floor(d/h)}}return{data:s,width:t,height:r}},Dve=100,Pve=n=>{const e=Dve/Math.min(n.width,n.height),t=[];let r=e;for(;;)if(t.push(r),r*=Math.pow(2,1/3),r>=.95){r=1;break}t.push(r),t.reverse();const s=[];for(let i=0;i<t.length;i++)n.width*t[i],n.height*t[i],s.push(Object.assign(TO({image:n,ratio:t[i]}),{scale:t[i]}));return s},$ve=n=>{const e=Math.min(n.width,n.height),t=[],r=[];t.push(256/e),t.push(128/e);for(let s=0;s<t.length;s++)r.push(Object.assign(TO({image:n,ratio:t[s]}),{scale:t[s]}));return r},Fve=n=>{const{v1:e,v2:t}=n;let r=0;for(let s=0;s<e.length;s++){let i=(e[s]^t[s])>>>0;r+=Gve(i)}return r},Gve=n=>{var e=n-(n>>1&1431655765);return e=(e>>2&858993459)+(e&858993459),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},Ove=1234,Wve=()=>({seed:Ove,arrayShuffle(n){const{arr:e,sampleSize:t}=n;for(let r=0;r<t;r++){this.seed=(214013*this.seed+2531011)%-2147483648;let s=this.seed>>16&32767;s=s%e.length;let i=e[r];e[r]=e[s],e[s]=i}},nextInt(n){this.seed=(214013*this.seed+2531011)%-2147483648;let e=this.seed>>16&32767;return e=e%n,e}}),Vve=16,Bve=128,S2=8,Xve=n=>{const{points:e,pointIndexes:t,randomizer:r}=n,s=[];for(let l=0;l<t.length;l++)s.push(l);let i=Number.MAX_SAFE_INTEGER,a=-1;const o=[];for(let l=0;l<Bve;l++){r.arrayShuffle({arr:s,sampleSize:S2});let u=0;const c=[];for(let d=0;d<t.length;d++){let h=Number.MAX_SAFE_INTEGER;for(let p=0;p<S2;p++){const g=t[s[p]],f=Fve({v1:e[t[d]].descriptors,v2:e[g].descriptors});f<h&&(c[d]=s[p],h=f)}u+=h}o.push(c),u<i&&(i=u,a=l)}return o[a]},iR=({points:n})=>{const e=[];for(let r=0;r<n.length;r++)e.push(r);const t=Wve();return{rootNode:IO({points:n,pointIndexes:e,centerPointIndex:null,randomizer:t})}},IO=n=>{const{points:e,pointIndexes:t,centerPointIndex:r,randomizer:s}=n;let i=!1;(t.length<=S2||t.length<=Vve)&&(i=!0);const a={};if(!i){const l=Xve({points:e,pointIndexes:t,randomizer:s});for(let u=0;u<l.length;u++)a[t[l[u]]]===void 0&&(a[t[l[u]]]=[]),a[t[l[u]]].push(t[u])}Object.keys(a).length===1&&(i=!0);const o={centerPointIndex:r};if(i){o.leaf=!0,o.pointIndexes=[];for(let l=0;l<t.length;l++)o.pointIndexes.push(t[l]);return o}return o.leaf=!1,o.children=[],Object.keys(a).forEach(l=>{o.children.push(IO({points:e,pointIndexes:a[l],centerPointIndex:l,randomizer:s}))}),o};var El=4294967295;function Uve(n,e,t){var r=t/4294967296,s=t;n.setUint32(e,r),n.setUint32(e+4,s)}function kO(n,e,t){var r=Math.floor(t/4294967296),s=t;n.setUint32(e,r),n.setUint32(e+4,s)}function CO(n,e){var t=n.getInt32(e),r=n.getUint32(e+4);return t*4294967296+r}function Zve(n,e){var t=n.getUint32(e),r=n.getUint32(e+4);return t*4294967296+r}var Cw,_w,Mw,Wv=(typeof process>"u"||((Cw=process==null?void 0:OT)===null||Cw===void 0?void 0:Cw.TEXT_ENCODING)!=="never")&&typeof TextEncoder<"u"&&typeof TextDecoder<"u";function aR(n){for(var e=n.length,t=0,r=0;r<e;){var s=n.charCodeAt(r++);if(s&4294967168)if(!(s&4294965248))t+=2;else{if(s>=55296&&s<=56319&&r<e){var i=n.charCodeAt(r);(i&64512)===56320&&(++r,s=((s&1023)<<10)+(i&1023)+65536)}s&4294901760?t+=4:t+=3}else{t++;continue}}return t}function Hve(n,e,t){for(var r=n.length,s=t,i=0;i<r;){var a=n.charCodeAt(i++);if(a&4294967168)if(!(a&4294965248))e[s++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&i<r){var o=n.charCodeAt(i);(o&64512)===56320&&(++i,a=((a&1023)<<10)+(o&1023)+65536)}a&4294901760?(e[s++]=a>>18&7|240,e[s++]=a>>12&63|128,e[s++]=a>>6&63|128):(e[s++]=a>>12&15|224,e[s++]=a>>6&63|128)}else{e[s++]=a;continue}e[s++]=a&63|128}}var K0=Wv?new TextEncoder:void 0,Kve=Wv?typeof process<"u"&&((_w=process==null?void 0:OT)===null||_w===void 0?void 0:_w.TEXT_ENCODING)!=="force"?200:0:El;function Yve(n,e,t){e.set(K0.encode(n),t)}function jve(n,e,t){K0.encodeInto(n,e.subarray(t))}var Qve=K0!=null&&K0.encodeInto?jve:Yve,Jve=4096;function _O(n,e,t){for(var r=e,s=r+t,i=[],a="";r<s;){var o=n[r++];if(!(o&128))i.push(o);else if((o&224)===192){var l=n[r++]&63;i.push((o&31)<<6|l)}else if((o&240)===224){var l=n[r++]&63,u=n[r++]&63;i.push((o&31)<<12|l<<6|u)}else if((o&248)===240){var l=n[r++]&63,u=n[r++]&63,c=n[r++]&63,d=(o&7)<<18|l<<12|u<<6|c;d>65535&&(d-=65536,i.push(d>>>10&1023|55296),d=56320|d&1023),i.push(d)}else i.push(o);i.length>=Jve&&(a+=String.fromCharCode.apply(String,i),i.length=0)}return i.length>0&&(a+=String.fromCharCode.apply(String,i)),a}var qve=Wv?new TextDecoder:null,e1e=Wv?typeof process<"u"&&((Mw=process==null?void 0:OT)===null||Mw===void 0?void 0:Mw.TEXT_DECODER)!=="force"?200:0:El;function t1e(n,e,t){var r=n.subarray(e,e+t);return qve.decode(r)}var by=function(){function n(e,t){this.type=e,this.data=t}return n}(),n1e=function(){var n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,s){r.__proto__=s}||function(r,s){for(var i in s)Object.prototype.hasOwnProperty.call(s,i)&&(r[i]=s[i])},n(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");n(e,t);function r(){this.constructor=e}e.prototype=t===null?Object.create(t):(r.prototype=t.prototype,new r)}}(),Oi=function(n){n1e(e,n);function e(t){var r=n.call(this,t)||this,s=Object.create(e.prototype);return Object.setPrototypeOf(r,s),Object.defineProperty(r,"name",{configurable:!0,enumerable:!1,value:e.name}),r}return e}(Error),r1e=-1,s1e=4294967296-1,i1e=17179869184-1;function a1e(n){var e=n.sec,t=n.nsec;if(e>=0&&t>=0&&e<=i1e)if(t===0&&e<=s1e){var r=new Uint8Array(4),s=new DataView(r.buffer);return s.setUint32(0,e),r}else{var i=e/4294967296,a=e&4294967295,r=new Uint8Array(8),s=new DataView(r.buffer);return s.setUint32(0,t<<2|i&3),s.setUint32(4,a),r}else{var r=new Uint8Array(12),s=new DataView(r.buffer);return s.setUint32(0,t),kO(s,4,e),r}}function o1e(n){var e=n.getTime(),t=Math.floor(e/1e3),r=(e-t*1e3)*1e6,s=Math.floor(r/1e9);return{sec:t+s,nsec:r-s*1e9}}function l1e(n){if(n instanceof Date){var e=o1e(n);return a1e(e)}else return null}function u1e(n){var e=new DataView(n.buffer,n.byteOffset,n.byteLength);switch(n.byteLength){case 4:{var t=e.getUint32(0),r=0;return{sec:t,nsec:r}}case 8:{var s=e.getUint32(0),i=e.getUint32(4),t=(s&3)*4294967296+i,r=s>>>2;return{sec:t,nsec:r}}case 12:{var t=CO(e,4),r=e.getUint32(0);return{sec:t,nsec:r}}default:throw new Oi("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(n.length))}}function c1e(n){var e=u1e(n);return new Date(e.sec*1e3+e.nsec/1e6)}var d1e={type:r1e,encode:l1e,decode:c1e},MO=function(){function n(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(d1e)}return n.prototype.register=function(e){var t=e.type,r=e.encode,s=e.decode;if(t>=0)this.encoders[t]=r,this.decoders[t]=s;else{var i=1+t;this.builtInEncoders[i]=r,this.builtInDecoders[i]=s}},n.prototype.tryToEncode=function(e,t){for(var r=0;r<this.builtInEncoders.length;r++){var s=this.builtInEncoders[r];if(s!=null){var i=s(e,t);if(i!=null){var a=-1-r;return new by(a,i)}}}for(var r=0;r<this.encoders.length;r++){var s=this.encoders[r];if(s!=null){var i=s(e,t);if(i!=null){var a=r;return new by(a,i)}}}return e instanceof by?e:null},n.prototype.decode=function(e,t,r){var s=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return s?s(e,t,r):new by(t,e)},n.defaultCodec=new n,n}();function Y0(n){return n instanceof Uint8Array?n:ArrayBuffer.isView(n)?new Uint8Array(n.buffer,n.byteOffset,n.byteLength):n instanceof ArrayBuffer?new Uint8Array(n):Uint8Array.from(n)}function h1e(n){if(n instanceof ArrayBuffer)return new DataView(n);var e=Y0(n);return new DataView(e.buffer,e.byteOffset,e.byteLength)}var p1e=100,f1e=2048,m1e=function(){function n(e,t,r,s,i,a,o,l){e===void 0&&(e=MO.defaultCodec),t===void 0&&(t=void 0),r===void 0&&(r=p1e),s===void 0&&(s=f1e),i===void 0&&(i=!1),a===void 0&&(a=!1),o===void 0&&(o=!1),l===void 0&&(l=!1),this.extensionCodec=e,this.context=t,this.maxDepth=r,this.initialBufferSize=s,this.sortKeys=i,this.forceFloat32=a,this.ignoreUndefined=o,this.forceIntegerToFloat=l,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return n.prototype.reinitializeState=function(){this.pos=0},n.prototype.encodeSharedRef=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.subarray(0,this.pos)},n.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.slice(0,this.pos)},n.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth ".concat(t));e==null?this.encodeNil():typeof e=="boolean"?this.encodeBoolean(e):typeof e=="number"?this.encodeNumber(e):typeof e=="string"?this.encodeString(e):this.encodeObject(e,t)},n.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(t*2)},n.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),r=new Uint8Array(t),s=new DataView(t);r.set(this.bytes),this.view=s,this.bytes=r},n.prototype.encodeNil=function(){this.writeU8(192)},n.prototype.encodeBoolean=function(e){e===!1?this.writeU8(194):this.writeU8(195)},n.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},n.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else if(e<4294967296)this.writeU8(219),this.writeU32(e);else throw new Error("Too long string: ".concat(e," bytes in UTF-8"))},n.prototype.encodeString=function(e){var t=5,r=e.length;if(r>Kve){var s=aR(e);this.ensureBufferSizeToWrite(t+s),this.writeStringHeader(s),Qve(e,this.bytes,this.pos),this.pos+=s}else{var s=aR(e);this.ensureBufferSizeToWrite(t+s),this.writeStringHeader(s),Hve(e,this.bytes,this.pos),this.pos+=s}},n.prototype.encodeObject=function(e,t){var r=this.extensionCodec.tryToEncode(e,this.context);if(r!=null)this.encodeExtension(r);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else if(typeof e=="object")this.encodeMap(e,t);else throw new Error("Unrecognized object: ".concat(Object.prototype.toString.apply(e)))},n.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else if(t<4294967296)this.writeU8(198),this.writeU32(t);else throw new Error("Too large binary: ".concat(t));var r=Y0(e);this.writeU8a(r)},n.prototype.encodeArray=function(e,t){var r=e.length;if(r<16)this.writeU8(144+r);else if(r<65536)this.writeU8(220),this.writeU16(r);else if(r<4294967296)this.writeU8(221),this.writeU32(r);else throw new Error("Too large array: ".concat(r));for(var s=0,i=e;s<i.length;s++){var a=i[s];this.doEncode(a,t+1)}},n.prototype.countWithoutUndefined=function(e,t){for(var r=0,s=0,i=t;s<i.length;s++){var a=i[s];e[a]!==void 0&&r++}return r},n.prototype.encodeMap=function(e,t){var r=Object.keys(e);this.sortKeys&&r.sort();var s=this.ignoreUndefined?this.countWithoutUndefined(e,r):r.length;if(s<16)this.writeU8(128+s);else if(s<65536)this.writeU8(222),this.writeU16(s);else if(s<4294967296)this.writeU8(223),this.writeU32(s);else throw new Error("Too large map object: ".concat(s));for(var i=0,a=r;i<a.length;i++){var o=a[i],l=e[o];this.ignoreUndefined&&l===void 0||(this.encodeString(o),this.doEncode(l,t+1))}},n.prototype.encodeExtension=function(e){var t=e.data.length;if(t===1)this.writeU8(212);else if(t===2)this.writeU8(213);else if(t===4)this.writeU8(214);else if(t===8)this.writeU8(215);else if(t===16)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else if(t<4294967296)this.writeU8(201),this.writeU32(t);else throw new Error("Too large extension object: ".concat(t));this.writeI8(e.type),this.writeU8a(e.data)},n.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},n.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},n.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},n.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},n.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},n.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},n.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},n.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},n.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},n.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),Uve(this.view,this.pos,e),this.pos+=8},n.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),kO(this.view,this.pos,e),this.pos+=8},n}(),g1e={};function y1e(n,e){e===void 0&&(e=g1e);var t=new m1e(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined,e.forceIntegerToFloat);return t.encodeSharedRef(n)}function Nw(n){return"".concat(n<0?"-":"","0x").concat(Math.abs(n).toString(16).padStart(2,"0"))}var b1e=16,x1e=16,v1e=function(){function n(e,t){e===void 0&&(e=b1e),t===void 0&&(t=x1e),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var r=0;r<this.maxKeyLength;r++)this.caches.push([])}return n.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},n.prototype.find=function(e,t,r){var s=this.caches[r-1];e:for(var i=0,a=s;i<a.length;i++){for(var o=a[i],l=o.bytes,u=0;u<r;u++)if(l[u]!==e[t+u])continue e;return o.str}return null},n.prototype.store=function(e,t){var r=this.caches[e.length-1],s={bytes:e,str:t};r.length>=this.maxLengthPerKey?r[Math.random()*r.length|0]=s:r.push(s)},n.prototype.decode=function(e,t,r){var s=this.find(e,t,r);if(s!=null)return this.hit++,s;this.miss++;var i=_O(e,t,r),a=Uint8Array.prototype.slice.call(e,t,t+r);return this.store(a,i),i},n}(),w1e=function(n,e,t,r){function s(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function o(c){try{u(r.next(c))}catch(d){a(d)}}function l(c){try{u(r.throw(c))}catch(d){a(d)}}function u(c){c.done?i(c.value):s(c.value).then(o,l)}u((r=r.apply(n,[])).next())})},Ew=function(n,e){var t={label:0,sent:function(){if(i[0]&1)throw i[1];return i[1]},trys:[],ops:[]},r,s,i,a;return a={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function o(u){return function(c){return l([u,c])}}function l(u){if(r)throw new TypeError("Generator is already executing.");for(;t;)try{if(r=1,s&&(i=u[0]&2?s.return:u[0]?s.throw||((i=s.return)&&i.call(s),0):s.next)&&!(i=i.call(s,u[1])).done)return i;switch(s=0,i&&(u=[u[0]&2,i.value]),u[0]){case 0:case 1:i=u;break;case 4:return t.label++,{value:u[1],done:!1};case 5:t.label++,s=u[1],u=[0];continue;case 7:u=t.ops.pop(),t.trys.pop();continue;default:if(i=t.trys,!(i=i.length>0&&i[i.length-1])&&(u[0]===6||u[0]===2)){t=0;continue}if(u[0]===3&&(!i||u[1]>i[0]&&u[1]<i[3])){t.label=u[1];break}if(u[0]===6&&t.label<i[1]){t.label=i[1],i=u;break}if(i&&t.label<i[2]){t.label=i[2],t.ops.push(u);break}i[2]&&t.ops.pop(),t.trys.pop();continue}u=e.call(n,t)}catch(c){u=[6,c],s=0}finally{r=i=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}},oR=function(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=n[Symbol.asyncIterator],t;return e?e.call(n):(n=typeof __values=="function"?__values(n):n[Symbol.iterator](),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(i){t[i]=n[i]&&function(a){return new Promise(function(o,l){a=n[i](a),s(o,l,a.done,a.value)})}}function s(i,a,o,l){Promise.resolve(l).then(function(u){i({value:u,done:o})},a)}},Gc=function(n){return this instanceof Gc?(this.v=n,this):new Gc(n)},S1e=function(n,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r=t.apply(n,e||[]),s,i=[];return s={},a("next"),a("throw"),a("return"),s[Symbol.asyncIterator]=function(){return this},s;function a(h){r[h]&&(s[h]=function(p){return new Promise(function(g,f){i.push([h,p,g,f])>1||o(h,p)})})}function o(h,p){try{l(r[h](p))}catch(g){d(i[0][3],g)}}function l(h){h.value instanceof Gc?Promise.resolve(h.value.v).then(u,c):d(i[0][2],h)}function u(h){o("next",h)}function c(h){o("throw",h)}function d(h,p){h(p),i.shift(),i.length&&o(i[0][0],i[0][1])}},T1e=function(n){var e=typeof n;return e==="string"||e==="number"},rp=-1,$_=new DataView(new ArrayBuffer(0)),I1e=new Uint8Array($_.buffer),T2=function(){try{$_.getInt8(0)}catch(n){return n.constructor}throw new Error("never reached")}(),lR=new T2("Insufficient data"),k1e=new v1e,C1e=function(){function n(e,t,r,s,i,a,o,l){e===void 0&&(e=MO.defaultCodec),t===void 0&&(t=void 0),r===void 0&&(r=El),s===void 0&&(s=El),i===void 0&&(i=El),a===void 0&&(a=El),o===void 0&&(o=El),l===void 0&&(l=k1e),this.extensionCodec=e,this.context=t,this.maxStrLength=r,this.maxBinLength=s,this.maxArrayLength=i,this.maxMapLength=a,this.maxExtLength=o,this.keyDecoder=l,this.totalPos=0,this.pos=0,this.view=$_,this.bytes=I1e,this.headByte=rp,this.stack=[]}return n.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=rp,this.stack.length=0},n.prototype.setBuffer=function(e){this.bytes=Y0(e),this.view=h1e(this.bytes),this.pos=0},n.prototype.appendBuffer=function(e){if(this.headByte===rp&&!this.hasRemaining(1))this.setBuffer(e);else{var t=this.bytes.subarray(this.pos),r=Y0(e),s=new Uint8Array(t.length+r.length);s.set(t),s.set(r,t.length),this.setBuffer(s)}},n.prototype.hasRemaining=function(e){return this.view.byteLength-this.pos>=e},n.prototype.createExtraByteError=function(e){var t=this,r=t.view,s=t.pos;return new RangeError("Extra ".concat(r.byteLength-s," of ").concat(r.byteLength," byte(s) found at buffer[").concat(e,"]"))},n.prototype.decode=function(e){this.reinitializeState(),this.setBuffer(e);var t=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return t},n.prototype.decodeMulti=function(e){return Ew(this,function(t){switch(t.label){case 0:this.reinitializeState(),this.setBuffer(e),t.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return t.sent(),[3,1];case 3:return[2]}})},n.prototype.decodeAsync=function(e){var t,r,s,i;return w1e(this,void 0,void 0,function(){var a,o,l,u,c,d,h,p;return Ew(this,function(g){switch(g.label){case 0:a=!1,g.label=1;case 1:g.trys.push([1,6,7,12]),t=oR(e),g.label=2;case 2:return[4,t.next()];case 3:if(r=g.sent(),!!r.done)return[3,5];if(l=r.value,a)throw this.createExtraByteError(this.totalPos);this.appendBuffer(l);try{o=this.doDecodeSync(),a=!0}catch(f){if(!(f instanceof T2))throw f}this.totalPos+=this.pos,g.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return u=g.sent(),s={error:u},[3,12];case 7:return g.trys.push([7,,10,11]),r&&!r.done&&(i=t.return)?[4,i.call(t)]:[3,9];case 8:g.sent(),g.label=9;case 9:return[3,11];case 10:if(s)throw s.error;return[7];case 11:return[7];case 12:if(a){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,o]}throw c=this,d=c.headByte,h=c.pos,p=c.totalPos,new RangeError("Insufficient data in parsing ".concat(Nw(d)," at ").concat(p," (").concat(h," in the current buffer)"))}})})},n.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},n.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},n.prototype.decodeMultiAsync=function(e,t){return S1e(this,arguments,function(){var r,s,i,a,o,l,u,c,d;return Ew(this,function(h){switch(h.label){case 0:r=t,s=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),i=oR(e),h.label=2;case 2:return[4,Gc(i.next())];case 3:if(a=h.sent(),!!a.done)return[3,12];if(o=a.value,t&&s===0)throw this.createExtraByteError(this.totalPos);this.appendBuffer(o),r&&(s=this.readArraySize(),r=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,Gc(this.doDecodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),--s===0?[3,8]:[3,5];case 8:return[3,10];case 9:if(l=h.sent(),!(l instanceof T2))throw l;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return u=h.sent(),c={error:u},[3,19];case 14:return h.trys.push([14,,17,18]),a&&!a.done&&(d=i.return)?[4,Gc(d.call(i))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(c)throw c.error;return[7];case 18:return[7];case 19:return[2]}})})},n.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){var r=e-128;if(r!==0){this.pushMapState(r),this.complete();continue e}else t={}}else if(e<160){var r=e-144;if(r!==0){this.pushArrayState(r),this.complete();continue e}else t=[]}else{var s=e-160;t=this.decodeUtf8String(s,0)}else if(e===192)t=null;else if(e===194)t=!1;else if(e===195)t=!0;else if(e===202)t=this.readF32();else if(e===203)t=this.readF64();else if(e===204)t=this.readU8();else if(e===205)t=this.readU16();else if(e===206)t=this.readU32();else if(e===207)t=this.readU64();else if(e===208)t=this.readI8();else if(e===209)t=this.readI16();else if(e===210)t=this.readI32();else if(e===211)t=this.readI64();else if(e===217){var s=this.lookU8();t=this.decodeUtf8String(s,1)}else if(e===218){var s=this.lookU16();t=this.decodeUtf8String(s,2)}else if(e===219){var s=this.lookU32();t=this.decodeUtf8String(s,4)}else if(e===220){var r=this.readU16();if(r!==0){this.pushArrayState(r),this.complete();continue e}else t=[]}else if(e===221){var r=this.readU32();if(r!==0){this.pushArrayState(r),this.complete();continue e}else t=[]}else if(e===222){var r=this.readU16();if(r!==0){this.pushMapState(r),this.complete();continue e}else t={}}else if(e===223){var r=this.readU32();if(r!==0){this.pushMapState(r),this.complete();continue e}else t={}}else if(e===196){var r=this.lookU8();t=this.decodeBinary(r,1)}else if(e===197){var r=this.lookU16();t=this.decodeBinary(r,2)}else if(e===198){var r=this.lookU32();t=this.decodeBinary(r,4)}else if(e===212)t=this.decodeExtension(1,0);else if(e===213)t=this.decodeExtension(2,0);else if(e===214)t=this.decodeExtension(4,0);else if(e===215)t=this.decodeExtension(8,0);else if(e===216)t=this.decodeExtension(16,0);else if(e===199){var r=this.lookU8();t=this.decodeExtension(r,1)}else if(e===200){var r=this.lookU16();t=this.decodeExtension(r,2)}else if(e===201){var r=this.lookU32();t=this.decodeExtension(r,4)}else throw new Oi("Unrecognized type byte: ".concat(Nw(e)));this.complete();for(var i=this.stack;i.length>0;){var a=i[i.length-1];if(a.type===0)if(a.array[a.position]=t,a.position++,a.position===a.size)i.pop(),t=a.array;else continue e;else if(a.type===1){if(!T1e(t))throw new Oi("The type of key must be string or number but "+typeof t);if(t==="__proto__")throw new Oi("The key __proto__ is not allowed");a.key=t,a.type=2;continue e}else if(a.map[a.key]=t,a.readCount++,a.readCount===a.size)i.pop(),t=a.map;else{a.key=null,a.type=1;continue e}}return t}},n.prototype.readHeadByte=function(){return this.headByte===rp&&(this.headByte=this.readU8()),this.headByte},n.prototype.complete=function(){this.headByte=rp},n.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:{if(e<160)return e-144;throw new Oi("Unrecognized array type byte: ".concat(Nw(e)))}}},n.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Oi("Max length exceeded: map length (".concat(e,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},n.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Oi("Max length exceeded: array length (".concat(e,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:e,array:new Array(e),position:0})},n.prototype.decodeUtf8String=function(e,t){var r;if(e>this.maxStrLength)throw new Oi("Max length exceeded: UTF-8 byte length (".concat(e,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+t+e)throw lR;var s=this.pos+t,i;return this.stateIsMapKey()&&!((r=this.keyDecoder)===null||r===void 0)&&r.canBeCached(e)?i=this.keyDecoder.decode(this.bytes,s,e):e>e1e?i=t1e(this.bytes,s,e):i=_O(this.bytes,s,e),this.pos+=t+e,i},n.prototype.stateIsMapKey=function(){if(this.stack.length>0){var e=this.stack[this.stack.length-1];return e.type===1}return!1},n.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Oi("Max length exceeded: bin length (".concat(e,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(e+t))throw lR;var r=this.pos+t,s=this.bytes.subarray(r,r+e);return this.pos+=t+e,s},n.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Oi("Max length exceeded: ext length (".concat(e,") > maxExtLength (").concat(this.maxExtLength,")"));var r=this.view.getInt8(this.pos+t),s=this.decodeBinary(e,t+1);return this.extensionCodec.decode(s,r,this.context)},n.prototype.lookU8=function(){return this.view.getUint8(this.pos)},n.prototype.lookU16=function(){return this.view.getUint16(this.pos)},n.prototype.lookU32=function(){return this.view.getUint32(this.pos)},n.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},n.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},n.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},n.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},n.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},n.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},n.prototype.readU64=function(){var e=Zve(this.view,this.pos);return this.pos+=8,e},n.prototype.readI64=function(){var e=CO(this.view,this.pos);return this.pos+=8,e},n.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},n.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},n}(),_1e={};function M1e(n,e){e===void 0&&(e=_1e);var t=new C1e(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength);return t.decode(n)}const uR=2;class N1e{constructor(){this.data=null}compileImageTargets(e,t){return new Promise(async(r,s)=>{const i=[];for(let u=0;u<e.length;u++){const c=e[u],d=this.createProcessCanvas(c).getContext("2d");d.drawImage(c,0,0,c.width,c.height);const h=d.getImageData(0,0,c.width,c.height),p=new Uint8Array(c.width*c.height);for(let f=0;f<p.length;f++){const m=f*4;p[f]=Math.floor((h.data[m]+h.data[m+1]+h.data[m+2])/3)}const g={data:p,height:c.height,width:c.width};i.push(g)}const a=50/i.length;let o=0;this.data=[];for(let u=0;u<i.length;u++){const c=i[u],d=Pve(c),h=a/d.length,p=await E1e(d,()=>{o+=h,t(o)});this.data.push({targetImage:c,imageList:d,matchingData:p})}for(let u=0;u<i.length;u++){const c=$ve(i[u]);this.data[u].trackingImageList=c}const l=await this.compileTrack({progressCallback:t,targetImages:i,basePercent:50});for(let u=0;u<i.length;u++)this.data[u].trackingData=l[u];r(this.data)})}exportData(){const e=[];for(let t=0;t<this.data.length;t++)e.push({targetImage:{width:this.data[t].targetImage.width,height:this.data[t].targetImage.height},trackingData:this.data[t].trackingData,matchingData:this.data[t].matchingData});return y1e({v:uR,dataList:e})}importData(e){const t=M1e(new Uint8Array(e));if(!t.v||t.v!==uR)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:r}=t;this.data=[];for(let s=0;s<r.length;s++)this.data.push({targetImage:r[s].targetImage,trackingData:r[s].trackingData,matchingData:r[s].matchingData});return this.data}createProcessCanvas(e){console.warn("missing createProcessCanvas implementation")}compileTrack({progressCallback:e,targetImages:t,basePercent:r}){console.warn("missing compileTrack implementation")}}const E1e=async(n,e)=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],i=new SO(s.width,s.height);await tg(),j(()=>{const a=Kt(s.data,[s.data.length],"float32").reshape([s.height,s.width]),{featurePoints:o}=i.detect(a),l=o.filter(h=>h.maxima),u=o.filter(h=>!h.maxima),c=iR({points:l}),d=iR({points:u});t.push({maximaPoints:l,minimaPoints:u,maximaPointsCluster:c,minimaPointsCluster:d,width:s.width,height:s.height,scale:s.scale}),e(r)})}return t},NO="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2NsYXNzIHp7Y29uc3RydWN0b3Iocyx0LG8pe3RoaXMuY3Vtc3VtPVtdO2ZvcihsZXQgZT0wO2U8bztlKyspe3RoaXMuY3Vtc3VtLnB1c2goW10pO2ZvcihsZXQgbj0wO248dDtuKyspdGhpcy5jdW1zdW1bZV0ucHVzaCgwKX10aGlzLmN1bXN1bVswXVswXT1zWzBdO2ZvcihsZXQgZT0xO2U8dDtlKyspdGhpcy5jdW1zdW1bMF1bZV09dGhpcy5jdW1zdW1bMF1bZS0xXStzW2VdO2ZvcihsZXQgZT0xO2U8bztlKyspdGhpcy5jdW1zdW1bZV1bMF09dGhpcy5jdW1zdW1bZS0xXVswXStzW2UqdF07Zm9yKGxldCBlPTE7ZTxvO2UrKylmb3IobGV0IG49MTtuPHQ7bisrKXRoaXMuY3Vtc3VtW2VdW25dPXNbZSp0K25dK3RoaXMuY3Vtc3VtW2UtMV1bbl0rdGhpcy5jdW1zdW1bZV1bbi0xXS10aGlzLmN1bXN1bVtlLTFdW24tMV19cXVlcnkocyx0LG8sZSl7bGV0IG49dGhpcy5jdW1zdW1bZV1bb107cmV0dXJuIHQ+MCYmKG4tPXRoaXMuY3Vtc3VtW3QtMV1bb10pLHM+MCYmKG4tPXRoaXMuY3Vtc3VtW2VdW3MtMV0pLHM+MCYmdD4wJiYobis9dGhpcy5jdW1zdW1bdC0xXVtzLTFdKSxufX1jb25zdCBDPTEwLGI9MixNPTYsRj01LEk9Ljk1LEw9LjksTz0uMixaPTgsTj0yNCoyLzMsVT1yPT57Y29uc3R7ZGF0YTpzLHdpZHRoOnQsaGVpZ2h0Om8sc2NhbGU6ZX09cixuPVt0Km9dO2ZvcihsZXQgaT0wO2k8bi5sZW5ndGg7aSsrKW5baV09ITE7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWFbaV09LTEsYVt0KihvLTEpK2ldPS0xO2ZvcihsZXQgaT0wO2k8bztpKyspYVtpKnRdPS0xLGFbaSp0K3QtMV09LTE7Zm9yKGxldCBpPTE7aTx0LTE7aSsrKWZvcihsZXQgcD0xO3A8by0xO3ArKyl7bGV0IGY9aSt0KnAsaD0wLGM9MDtmb3IobGV0IHU9LTE7dTw9MTt1KyspaCs9c1tmK3QqdSsxXS1zW2YrdCp1LTFdLGMrPXNbZit0K3VdLXNbZi10K3VdO2gvPTMqMjU2LGMvPTMqMjU2LGFbZl09TWF0aC5zcXJ0KChoKmgrYypjKS8yKX1jb25zdCBnPW5ldyBVaW50MzJBcnJheSgxZTMpO2ZvcihsZXQgaT0wO2k8MWUzO2krKylnW2ldPTA7Y29uc3QgZD1bLTEsMSwtdCx0XTtmb3IobGV0IGk9MTtpPHQtMTtpKyspZm9yKGxldCBwPTE7cDxvLTE7cCsrKXtsZXQgZj1pK3QqcCxoPSEwO2ZvcihsZXQgYz0wO2M8ZC5sZW5ndGg7YysrKWlmKGFbZl08PWFbZitkW2NdXSl7aD0hMTticmVha31pZihoKXtsZXQgYz1NYXRoLmZsb29yKGFbZl0qMWUzKTtjPjk5OSYmKGM9OTk5KSxjPDAmJihjPTApLGdbY10rPTEsbltmXT0hMH19Y29uc3Qgdz0uMDIqdCpvO2xldCBqPTk5OSxFPTA7Zm9yKDtqPj0wJiYoRSs9Z1tqXSwhKEU+dykpOylqLS07Zm9yKGxldCBpPTA7aTxuLmxlbmd0aDtpKyspbltpXSYmYVtpXSoxZTM8aiYmKG5baV09ITEpO2NvbnN0IGw9W107Zm9yKGxldCBpPTA7aTxzLmxlbmd0aDtpKyspbFtpXT1zW2ldKnNbaV07Y29uc3QgUz1uZXcgeihzLHQsbyksRD1uZXcgeihsLHQsbyksaz1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWZvcihsZXQgcD0wO3A8bztwKyspe2NvbnN0IGY9cCp0K2k7aWYoIW5bZl0pe2tbZl09MTtjb250aW51ZX1jb25zdCBoPVAoe2ltYWdlOnIsY3g6aSxjeTpwLHNkVGhyZXNoOkYsaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KTtpZihoPT09bnVsbCl7a1tmXT0xO2NvbnRpbnVlfWxldCBjPS0xO2ZvcihsZXQgdT0tQzt1PD1DO3UrKyl7Zm9yKGxldCBtPS1DO208PUM7bSsrKXtpZihtKm0rdSp1PD1iKmIpY29udGludWU7Y29uc3QgeD1SKHtpbWFnZTpyLGN4OmkrbSxjeTpwK3UsdmxlbjpoLHR4OmksdHk6cCxpbWFnZURhdGFDdW1zdW06UyxpbWFnZURhdGFTcXJDdW1zdW06RH0pO2lmKHghPT1udWxsJiZ4PmMmJihjPXgsYz5JKSlicmVha31pZihjPkkpYnJlYWt9a1tmXT1jfXJldHVybiBWKHtpbWFnZTpyLGZlYXR1cmVNYXA6ayx0ZW1wbGF0ZVNpemU6TSxzZWFyY2hTaXplOmIsb2NjU2l6ZTpOLG1heFNpbVRocmVzaDpMLG1pblNpbVRocmVzaDpPLHNkVGhyZXNoOlosaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KX0sVj1yPT57bGV0e2ltYWdlOnMsZmVhdHVyZU1hcDp0LHRlbXBsYXRlU2l6ZTpvLHNlYXJjaFNpemU6ZSxvY2NTaXplOm4sbWF4U2ltVGhyZXNoOmEsbWluU2ltVGhyZXNoOmcsc2RUaHJlc2g6ZCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an09cjtjb25zdHtkYXRhOkUsd2lkdGg6bCxoZWlnaHQ6UyxzY2FsZTpEfT1zO249TWF0aC5mbG9vcihNYXRoLm1pbihzLndpZHRoLHMuaGVpZ2h0KS8xMCk7Y29uc3Qgaz0obyoyKzEpKjMsQT1NYXRoLmZsb29yKGwvayksaT1NYXRoLmZsb29yKFMvayk7bGV0IHA9TWF0aC5mbG9vcihsL24pKk1hdGguZmxvb3IoUy9uKStBKmk7Y29uc3QgZj1bXSxoPW5ldyBGbG9hdDMyQXJyYXkoRS5sZW5ndGgpO2ZvcihsZXQgdT0wO3U8aC5sZW5ndGg7dSsrKWhbdV09dFt1XTtsZXQgYz0wO2Zvcig7YzxwOyl7bGV0IHU9YSxtPS0xLHg9LTE7Zm9yKGxldCB5PTA7eTxTO3krKylmb3IobGV0IFQ9MDtUPGw7VCsrKWhbeSpsK1RdPHUmJih1PWhbeSpsK1RdLG09VCx4PXkpO2lmKG09PT0tMSlicmVhaztjb25zdCB2PVAoe2ltYWdlOnMsY3g6bSxjeTp4LHNkVGhyZXNoOjAsaW1hZ2VEYXRhQ3Vtc3VtOncsaW1hZ2VEYXRhU3FyQ3Vtc3VtOmp9KTtpZih2PT09bnVsbCl7aFt4KmwrbV09MTtjb250aW51ZX1pZih2LyhvKjIrMSk8ZCl7aFt4KmwrbV09MTtjb250aW51ZX1sZXQgcT0xLF89LTE7Zm9yKGxldCB5PS1lO3k8PWU7eSsrKXtmb3IobGV0IFQ9LWU7VDw9ZTtUKyspe2lmKFQqVCt5Knk+ZSplfHxUPT09MCYmeT09PTApY29udGludWU7Y29uc3QgSD1SKHtpbWFnZTpzLHZsZW46dixjeDptK1QsY3k6eCt5LHR4Om0sdHk6eCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an0pO2lmKEghPT1udWxsJiYoSDxxJiYocT1ILHE8ZyYmcTx1KXx8SD5fJiYoXz1ILF8+Ljk5KSkpYnJlYWt9aWYocTxnJiZxPHV8fF8+Ljk5KWJyZWFrfWlmKHE8ZyYmcTx1fHxfPi45OSl7aFt4KmwrbV09MTtjb250aW51ZX1mLnB1c2goe3g6bSx5Onh9KSxjKz0xO2ZvcihsZXQgeT0tbjt5PD1uO3krKylmb3IobGV0IFQ9LW47VDw9bjtUKyspeCt5PDB8fHgreT49U3x8bStUPDB8fG0rVD49bHx8KGhbKHgreSkqbCsobStUKV09MSl9cmV0dXJuIGZ9LFA9KHtpbWFnZTpyLGN4OnMsY3k6dCxzZFRocmVzaDpvLGltYWdlRGF0YUN1bXN1bTplLGltYWdlRGF0YVNxckN1bXN1bTpufSk9PntpZihzLU08MHx8cytNPj1yLndpZHRofHx0LU08MHx8dCtNPj1yLmhlaWdodClyZXR1cm4gbnVsbDtjb25zdCBhPTIqTSsxLGc9YSphO2xldCBkPWUucXVlcnkocy1NLHQtTSxzK00sdCtNKTtkLz1nO2xldCB3PW4ucXVlcnkocy1NLHQtTSxzK00sdCtNKTtyZXR1cm4gdy09MipkKmUucXVlcnkocy1NLHQtTSxzK00sdCtNKSx3Kz1nKmQqZCx3L2c8bypvP251bGw6KHc9TWF0aC5zcXJ0KHcpLHcpfSxSPXI9Pntjb25zdHtpbWFnZTpzLGN4OnQsY3k6byx2bGVuOmUsdHg6bix0eTphLGltYWdlRGF0YUN1bXN1bTpnLGltYWdlRGF0YVNxckN1bXN1bTpkfT1yLHtkYXRhOncsd2lkdGg6aixoZWlnaHQ6RX09cyxsPU07aWYodC1sPDB8fHQrbD49anx8by1sPDB8fG8rbD49RSlyZXR1cm4gbnVsbDtjb25zdCBTPTIqbCsxO2xldCBEPWcucXVlcnkodC1sLG8tbCx0K2wsbytsKSxrPWQucXVlcnkodC1sLG8tbCx0K2wsbytsKSxBPTAsaT0oby1sKSpqKyh0LWwpLHA9KGEtbCkqaisobi1sKSxmPWotUztmb3IobGV0IG09MDttPFM7bSsrKXtmb3IobGV0IHg9MDt4PFM7eCsrKUErPXdbaV0qd1twXSxpKz0xLHArPTE7aSs9ZixwKz1mfWxldCBoPWcucXVlcnkobi1sLGEtbCxuK2wsYStsKTtoLz1TKlMsQS09aCpEO2xldCBjPWstRCpELyhTKlMpO3JldHVybiBjPT0wP251bGw6KGM9TWF0aC5zcXJ0KGMpLDEqQS8oZSpjKSl9LFc9KHIscyk9Pntjb25zdCB0PVtdO2ZvcihsZXQgbz0wO288ci5sZW5ndGg7bysrKXtjb25zdCBlPXJbb10sbj1VKGUpLGE9e2RhdGE6ZS5kYXRhLHNjYWxlOmUuc2NhbGUsd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQscG9pbnRzOm59O3QucHVzaChhKSxzKG8pfXJldHVybiB0fSxYPSh7aW1hZ2U6cixyYXRpbzpzfSk9Pntjb25zdCB0PU1hdGgucm91bmQoci53aWR0aCpzKSxvPU1hdGgucm91bmQoci5oZWlnaHQqcyksZT1uZXcgVWludDhBcnJheSh0Km8pO2ZvcihsZXQgbj0wO248dDtuKyspe2xldCBhPU1hdGgucm91bmQoMSpuL3MpLGc9TWF0aC5yb3VuZCgxKihuKzEpL3MpLTE7Zz49ci53aWR0aCYmKGc9ci53aWR0aC0xKTtmb3IobGV0IGQ9MDtkPG87ZCsrKXtsZXQgdz1NYXRoLnJvdW5kKDEqZC9zKSxqPU1hdGgucm91bmQoMSooZCsxKS9zKS0xO2o+PXIuaGVpZ2h0JiYoaj1yLmhlaWdodC0xKTtsZXQgRT0wLGw9MDtmb3IobGV0IFM9YTtTPD1nO1MrKylmb3IobGV0IEQ9dztEPD1qO0QrKylFKz0xKnIuZGF0YVtEKnIud2lkdGgrU10sbCs9MTtlW2QqdCtuXT1NYXRoLmZsb29yKEUvbCl9fXJldHVybntkYXRhOmUsd2lkdGg6dCxoZWlnaHQ6b319LFk9cj0+e2NvbnN0IHM9TWF0aC5taW4oci53aWR0aCxyLmhlaWdodCksdD1bXSxvPVtdO3QucHVzaCgyNTYvcyksdC5wdXNoKDEyOC9zKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKylvLnB1c2goT2JqZWN0LmFzc2lnbihYKHtpbWFnZTpyLHJhdGlvOnRbZV19KSx7c2NhbGU6dFtlXX0pKTtyZXR1cm4gb307b25tZXNzYWdlPXI9Pntjb25zdHtkYXRhOnN9PXI7aWYocy50eXBlPT09ImNvbXBpbGUiKXtjb25zdHt0YXJnZXRJbWFnZXM6dH09cyxvPTEwMC90Lmxlbmd0aDtsZXQgZT0wO2NvbnN0IG49W107Zm9yKGxldCBhPTA7YTx0Lmxlbmd0aDthKyspe2NvbnN0IGc9dFthXSxkPVkoZyksdz1vL2QubGVuZ3RoLGo9VyhkLEU9PntlKz13LHBvc3RNZXNzYWdlKHt0eXBlOiJwcm9ncmVzcyIscGVyY2VudDplfSl9KTtuLnB1c2goail9cG9zdE1lc3NhZ2Uoe3R5cGU6ImNvbXBpbGVEb25lIixsaXN0Om59KX19fSkoKTsK",cR=typeof window<"u"&&window.Blob&&new Blob([atob(NO)],{type:"text/javascript;charset=utf-8"});function R1e(n){let e;try{if(e=cR&&(window.URL||window.webkitURL).createObjectURL(cR),!e)throw"";const t=new Worker(e,{name:n==null?void 0:n.name});return t.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(e)}),t}catch{return new Worker("data:application/javascript;base64,"+NO,{name:n==null?void 0:n.name})}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}class L1e extends N1e{createProcessCanvas(e){const t=document.createElement("canvas");return t.width=e.width,t.height=e.height,t}compileTrack({progressCallback:e,targetImages:t,basePercent:r}){return new Promise((s,i)=>{const a=new R1e;a.onmessage=o=>{o.data.type==="progress"?e(r+o.data.percent*r/100):o.data.type==="compileDone"&&s(o.data.list)},a.postMessage({type:"compile",targetImages:t})})}}class A1e{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const r=document.createElement("canvas").getContext("2d");r.canvas.width=e,r.canvas.height=t,this.context=r,this.program=this.buildProgram(e,t);const s=Ki();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"float32"),s.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return j(()=>{let t=mk(e);return t=t.mean(2),t})}loadInput(e){const t=this.context;if(t.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),e.width===this.height&&e.height===this.width){let s=this.context.canvas.width/2,i=this.context.canvas.height/2;t.save(),t.translate(s,i),t.rotate(90*Math.PI/180),t.drawImage(e,-e.width/2,-e.height/2),t.restore()}else this.context.drawImage(e,0,0,e.width,e.height);const r=Ki();return r.gpgpu.uploadPixelDataToTexture(r.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){const r=q().getNumber("WEBGL_VERSION")===2?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`
	void main() {
	  ivec2 coords = getOutputCoords();
	  int texR = coords[0];
	  int texC = coords[1];
	  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);

	  vec4 values = ${r}(A, uv);
	  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);
	}
      `}}_compileAndRun(e,t){const r=Ki().compileAndRun(e,t);return Dt().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}_runWebGLProgram(e,t,r){const s=Ki().runWebGLProgram(e,t,r);return Dt().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}const Rw={memory:_0,nextFrame:tg},z1e=.001,D1e=1e3,P1e=5,$1e=5;class F1e{constructor({inputWidth:e,inputHeight:t,onUpdate:r=null,debugMode:s=!1,maxTrack:i=1,warmupTolerance:a=null,missTolerance:o=null,filterMinCF:l=null,filterBeta:u=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=i,this.filterMinCF=l===null?z1e:l,this.filterBeta=u===null?D1e:u,this.warmupTolerance=a===null?P1e:a,this.missTolerance=o===null?$1e:o,this.cropDetector=new zve(this.inputWidth,this.inputHeight,s),this.inputLoader=new A1e(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=r,this.debugMode=s,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const c=10,d=1e5,h=45*Math.PI/180,p=this.inputHeight/2/Math.tan(h/2);this.projectionTransform=[[p,0,this.inputWidth/2],[0,p,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:c,far:d}),this.worker=new $xe,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=g=>{g.data.type==="matchDone"&&this.workerMatchDone!==null&&this.workerMatchDone(g.data),g.data.type==="trackUpdateDone"&&this.workerTrackDone!==null&&this.workerTrackDone(g.data)}}showTFStats(){console.log(Rw.memory().numTensors),console.table(Rw.memory())}addImageTargets(e){return new Promise(async(t,r)=>{const s=await(await fetch(e)).arrayBuffer(),i=this.addImageTargetsFromBuffer(s);t(i)})}addImageTargetsFromBuffer(e){const t=new L1e().importData(e),r=[],s=[],i=[];for(let a=0;a<t.length;a++)s.push(t[a].matchingData),r.push(t[a].trackingData),i.push([t[a].targetImage.width,t[a].targetImage.height]);return this.tracker=new Hxe(i,r,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:s}),this.markerDimensions=i,{dimensions:i,matchingDataList:s,trackingDataList:r}}dispose(){this.stopProcessVideo(),this.worker.postMessage({type:"dispose"})}dummyRun(e){const t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getRotatedZ90Matrix(e){return[-e[1],e[0],e[2],e[3],-e[5],e[4],e[6],e[7],-e[9],e[8],e[10],e[11],-e[13],e[12],e[14],e[15]]}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){const{featurePoints:r}=this.cropDetector.detectMoving(e),{targetIndex:s,modelViewTransform:i}=await this._workerMatch(r,t);return{targetIndex:s,modelViewTransform:i}}async _trackAndUpdate(e,t,r){const{worldCoords:s,screenCoords:i}=this.tracker.track(e,t,r);return s.length<4?null:await this._workerTrackUpdate(t,{worldCoords:s,screenCoords:i})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.markerDimensions.length;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new l9({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce((r,s)=>r+(s.isTracking?1:0),0)<this.maxTrack){const r=[];for(let a=0;a<this.trackingStates.length;a++)this.trackingStates[a].isTracking!==!0&&(this.interestedTargetIndex!==-1&&this.interestedTargetIndex!==a||r.push(a));const{targetIndex:s,modelViewTransform:i}=await this._detectAndMatch(t,r);s!==-1&&(this.trackingStates[s].isTracking=!0,this.trackingStates[s].currentModelViewTransform=i)}for(let r=0;r<this.trackingStates.length;r++){const s=this.trackingStates[r];if(s.isTracking){let i=await this._trackAndUpdate(t,s.currentModelViewTransform,r);i===null?s.isTracking=!1:s.currentModelViewTransform=i}if(s.showing||s.isTracking&&(s.trackMiss=0,s.trackCount+=1,s.trackCount>this.warmupTolerance&&(s.showing=!0,s.trackingMatrix=null,s.filter.reset())),s.showing&&(s.isTracking?s.trackMiss=0:(s.trackCount=0,s.trackMiss+=1,s.trackMiss>this.missTolerance&&(s.showing=!1,s.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:r,worldMatrix:null})))),s.showing){const i=this._glModelViewMatrix(s.currentModelViewTransform,r);s.trackingMatrix=s.filter.filter(Date.now(),i);let a=[];for(let o=0;o<s.trackingMatrix.length;o++)a[o]=s.trackingMatrix[o];e.width===this.inputHeight&&e.height===this.inputWidth&&(a=this.getRotatedZ90Matrix(a)),this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:r,worldMatrix:a})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await Rw.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),{featurePoints:r,debugExtra:s}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:r,debugExtra:s}}async match(e,t){const{modelViewTransform:r,debugExtra:s}=await this._workerMatch(e,[t]);return{modelViewTransform:r,debugExtra:s}}async track(e,t,r){const s=this.inputLoader.loadInput(e),i=this.tracker.track(s,t,r);return s.dispose(),i}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise(async(r,s)=>{this.workerMatchDone=i=>{r({targetIndex:i.targetIndex,modelViewTransform:i.modelViewTransform,debugExtra:i.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})})}_workerTrackUpdate(e,t){return new Promise(async(r,s)=>{this.workerTrackDone=o=>{r(o.modelViewTransform)};const{worldCoords:i,screenCoords:a}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:i,screenCoords:a})})}_glModelViewMatrix(e,t){const r=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*r+e[0][3],-(e[1][1]*r+e[1][3]),-(e[2][1]*r+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:r,near:s,far:i}){const a=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/r,-(2*e[1][2]/r-1),0],[0,0,-(i+s)/(i-s),-2*i*s/(i-s)],[0,0,-1,0]],o=[];for(let l=0;l<4;l++)for(let u=0;u<4;u++)o.push(a[u][l]);return o}}const dR=new te,G1e=new qo,hR=new te,$i=new Bt,O1e=new Bt;class W1e{constructor(e={}){const t=this;let r,s,i,a;const o={camera:{fov:0,style:""},objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l;const u=document.createElement("div");u.style.transformOrigin="0 0",u.style.pointerEvents="none",l.appendChild(u);const c=document.createElement("div");c.style.transformStyle="preserve-3d",u.appendChild(c),this.getSize=function(){return{width:r,height:s}},this.render=function(f,m){const y=m.projectionMatrix.elements[5]*a;o.camera.fov!==y&&(u.style.perspective=m.isPerspectiveCamera?y+"px":"",o.camera.fov=y),m.view&&m.view.enabled?(u.style.transform=`translate( ${-m.view.offsetX*(r/m.view.width)}px, ${-m.view.offsetY*(s/m.view.height)}px )`,u.style.transform+=`scale( ${m.view.fullWidth/m.view.width}, ${m.view.fullHeight/m.view.height} )`):u.style.transform="",f.matrixWorldAutoUpdate===!0&&f.updateMatrixWorld(),m.parent===null&&m.matrixWorldAutoUpdate===!0&&m.updateMatrixWorld();let b,x;m.isOrthographicCamera&&(b=-(m.right+m.left)/2,x=(m.top+m.bottom)/2);const v=m.view&&m.view.enabled?m.view.height/m.view.fullHeight:1,T=(m.isOrthographicCamera?`scale( ${v} )scale(`+y+")translate("+d(b)+"px,"+d(x)+"px)"+h(m.matrixWorldInverse):`scale( ${v} )translateZ(`+y+"px)"+h(m.matrixWorldInverse))+"translate("+i+"px,"+a+"px)";o.camera.style!==T&&(c.style.transform=T,o.camera.style=T),g(f,f,m)},this.setSize=function(f,m){r=f,s=m,i=r/2,a=s/2,l.style.width=f+"px",l.style.height=m+"px",u.style.width=f+"px",u.style.height=m+"px",c.style.width=f+"px",c.style.height=m+"px"};function d(f){return Math.abs(f)<1e-10?0:f}function h(f){const m=f.elements;return"matrix3d("+d(m[0])+","+d(-m[1])+","+d(m[2])+","+d(m[3])+","+d(m[4])+","+d(-m[5])+","+d(m[6])+","+d(m[7])+","+d(m[8])+","+d(-m[9])+","+d(m[10])+","+d(m[11])+","+d(m[12])+","+d(-m[13])+","+d(m[14])+","+d(m[15])+")"}function p(f){const m=f.elements;return"translate(-50%,-50%)"+("matrix3d("+d(m[0])+","+d(m[1])+","+d(m[2])+","+d(m[3])+","+d(-m[4])+","+d(-m[5])+","+d(-m[6])+","+d(-m[7])+","+d(m[8])+","+d(m[9])+","+d(m[10])+","+d(m[11])+","+d(m[12])+","+d(m[13])+","+d(m[14])+","+d(m[15])+")")}function g(f,m,y,b){if(f.isCSS3DObject){const x=f.visible===!0&&f.layers.test(y.layers)===!0;if(f.element.style.display=x===!0?"":"none",x===!0){f.onBeforeRender(t,m,y);let v;f.isCSS3DSprite?($i.copy(y.matrixWorldInverse),$i.transpose(),f.rotation2D!==0&&$i.multiply(O1e.makeRotationZ(f.rotation2D)),f.matrixWorld.decompose(dR,G1e,hR),$i.setPosition(dR),$i.scale(hR),$i.elements[3]=0,$i.elements[7]=0,$i.elements[11]=0,$i.elements[15]=1,v=p($i)):v=p(f.matrixWorld);const w=f.element,T=o.objects.get(f);if(T===void 0||T.style!==v){w.style.transform=v;const k={style:v};o.objects.set(f,k)}w.parentNode!==c&&c.appendChild(w),f.onAfterRender(t,m,y)}}for(let x=0,v=f.children.length;x<v;x++)g(f.children[x],m,y)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V1e(n){M(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),M(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((s,i)=>N(s,`tensors${i}`,"addN")),t=e[0];e.forEach(s=>{if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!ht(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return W.runKernel(Af,r)}const EO=V({addN_:V1e});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1e(n,e,t,r,s,i){const a=N(n,"forgetBias","basicLSTMCell"),o=N(e,"lstmKernel","basicLSTMCell"),l=N(t,"lstmBias","basicLSTMCell"),u=N(r,"data","basicLSTMCell"),c=N(s,"c","basicLSTMCell"),d=N(i,"h","basicLSTMCell"),h=pn([u,d],1),p=ot(h,o),g=me(p,l),f=g.shape[0],m=g.shape[1]/4,y=[f,m],b=gt(g,[0,0],y),x=gt(g,[0,m],y),v=gt(g,[0,m*2],y),w=gt(g,[0,m*3],y),T=me(Z(xi(b),cu(x)),Z(c,xi(me(a,v)))),k=Z(cu(T),xi(w));return[T,k]}const RO=V({basicLSTMCell_:B1e});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1e(n,e){const t=N(n,"x","bitwiseAnd"),r=N(e,"y","bitwiseAnd");if(!ht(t.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${r.shape}`);if(t.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${r.dtype}`);const s={a:t,b:r};return W.runKernel(Of,s)}const LO=V({bitwiseAnd_:X1e});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1e(n,e){const t=N(n,"s0","broadcastArgs","int32"),r=N(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:t,s1:r};return W.runKernel(_b,s)}const AO=V({broadcastArgs_:U1e});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1e(n){const e={x:N(n,"x","diag")};return W.runKernel(Fb,e)}const zO=V({diag_:Z1e});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H1e(n,e){const t=N(n,"x","ensureShape","string_or_numeric");if(!bz(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const DO=V({ensureShape_:H1e});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return W.runKernel(Kb,{},r)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xy=2147483648;function K1e(n,e,t="left"){const r=N(n,"sortedSequence","searchSorted"),s=N(e,"values","searchSorted"),i=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],o=H(r,[-1,i]),l=H(s,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ie(l.shape)>=xy)throw new Error(`values tensor size must less than ${xy}`);if(o.shape[1]>=xy)throw new Error(`trailing dim_size must less than ${xy} for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:t};return W.runKernel(hx,u,c)}const Vv=V({searchSorted_:K1e});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(n,e){return Vv(n,e,"left")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y1e(n,e,t,r,s=!1){const i={x:N(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},o=W.runKernel(Jb,i,a);return{result:o[0],indexes:o[1]}}const FO=V({maxPoolWithArgmax_:Y1e});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GO(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=N(n,"x","meshgrid",n instanceof xt?n.dtype:"float32");if(e===void 0)return[r];let s=N(e,"y","meshgrid",e instanceof xt?e.dtype:"float32");const i=ie(r.shape),a=ie(s.shape);return t==="xy"?(r=H(r,[1,-1]),s=H(s,[-1,1]),[ot(Gr([a,1],r.dtype),r),ot(s,Gr([1,i],s.dtype))]):(r=H(r,[-1,1]),s=H(s,[1,-1]),[ot(r,Gr([1,a],r.dtype)),ot(Gr([i,1],s.dtype),s)])}function j1e(n,e,t,r){const s=N(e,"data","multiRNNCell"),i=df(t,"c","multiRNNCell"),a=df(r,"h","multiRNNCell");let o=s;const l=[];for(let d=0;d<n.length;d++){const h=n[d](o,i[d],a[d]);l.push(h[0]),l.push(h[1]),o=h[1]}const u=[],c=[];for(let d=0;d<l.length;d+=2)u.push(l[d]),c.push(l[d+1]);return[u,c]}const OO=V({multiRNNCell_:j1e});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q1e(n,e,t,r=!1){const s=N(n,"logits","multinomial"),i=s.size,a=s.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const o={logits:a===1?H(s,[1,-1]):s},l={numSamples:e,seed:t,normalized:r},u=W.runKernel(qb,o,l);return a===1?H(u,[u.size]):u}const WO=V({multinomial_:Q1e});function J1e(n,e){const t=N(n,"v1","outerProduct"),r=N(e,"v2","outerProduct");M(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const s=H(t,[-1,1]),i=H(r,[1,-1]);return ot(s,i)}const VO=V({outerProduct_:J1e});function q1e(n,e,t=0){return M(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Qa(n,[e],t)}const BO=V({pad1d_:q1e});function ewe(n,e,t=0){return M(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qa(n,e,t)}const XO=V({pad2d_:ewe});function twe(n,e,t=0){return M(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qa(n,e,t)}const UO=V({pad3d_:twe});function nwe(n,e,t=0){return M(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qa(n,e,t)}const ZO=V({pad4d_:nwe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rwe(n,e,t,r){const s=n.map((c,d)=>N(c,`tensors${d}`,"raggedGather","int32")),i=N(e,"paramsDenseValues","raggedGather"),a=N(t,"indices","raggedGather","int32"),o={paramsNestedSplits:s,paramsDenseValues:i,indices:a},l={outputRaggedRank:r},u=W.runKernel(rx,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const HO=V({raggedGather_:rwe});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function swe(n,e,t){const r=N(n,"starts","raggedRange"),s=N(e,"limits","raggedRange",r.dtype),i=N(t,"deltas","raggedRange",r.dtype),a={starts:r,limits:s,deltas:i},o=W.runKernel(sx,a);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const KO=V({raggedRange_:swe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iwe(n,e,t,r,s){const i=N(n,"shape","raggedTensorToTensor","int32"),a=N(e,"values","raggedTensorToTensor"),o=N(t,"defaultValue","raggedTensorToTensor",a.dtype),l=r.map((d,h)=>N(d,`tensors${h}`,"raggedTensorToTensor","int32")),u={shape:i,values:a,defaultValue:o,rowPartitionTensors:l},c={rowPartitionTypes:s};return W.runKernel(ix,u,c)}const YO=V({raggedTensorToTensor_:iwe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function awe(n,e,t){ps(n);const r=ie(n);let s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else if(t==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let i=0;i<r;i++)s[i]=e();return W.makeTensor(s,n,t)}const jO=V({rand_:awe});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const owe=.001,QO=.1;function lwe(n,e,t){return t==null&&(t=F_()),I2(n,e,(r,s)=>G_(r,s,t))}function F_(){return W.backend.floatPrecision()===32?owe:QO}function I2(n,e,t){let r=!0;if((Nn(n)||Nn(e))&&(r=!1),Nn(n)&&Nn(e)&&(r=!0),r){const a=n.constructor.name,o=e.constructor.name;if(a!==o)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${o}`)}if(Array.isArray(n)&&Array.isArray(e)){const a=aa(n),o=aa(e);if(!ht(a,o))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${o}]`)}const s=Nn(n)?n:ia(n),i=Nn(e)?e:ia(e);if(s.length!==i.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${i.length}.
Actual:   ${s}.
Expected: ${i}.`);for(let a=0;a<i.length;++a){const o=s[a],l=i[a];if(!t(o,l))throw new Error(`Arrays differ: actual[${a}] = ${o}, expected[${a}] = ${l}.
Actual:   ${s}.
Expected: ${i}.`)}typeof expect<"u"&&expect().nothing()}function uwe(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function cwe(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return Hi(n)||Hi(n[0])||Hi(e)||Hi(e[0])?I2(n,t,(r,s)=>r==s):I2(n,e,(r,s)=>G_(r,s,0))}function dwe(n,e,t){if(t==null&&(t=F_()),!G_(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function G_(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function hwe(n,e,t){for(let r=0;r<n.length;r++)if(n[r]<e||n[r]>t)throw new Error(`Value out of range:${n[r]} low: ${e}, high: ${t}`)}function pwe(n,e){const t=new Float32Array(n),r=new Float32Array(e);if(t.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${t.length}`);for(let s=0;s<r.length;s++)if(t[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${t[s]} instead`)}function JO(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?JO(t):n[e]=ta(t)}return n}function fwe(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",r=>t(e)),e.load()})}async function mwe(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const gwe=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:QO,createVideoElement:fwe,encodeStrings:JO,expectArrayBuffersEqual:pwe,expectArraysClose:lwe,expectArraysEqual:cwe,expectNumbersClose:dwe,expectPromiseToFail:uwe,expectValuesInRange:hwe,play:mwe,testEpsilon:F_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ywe(n,e,t=1,r="float32",s){if(ps(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const i=new $8(e,t,r,s),a=rt(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const qO=V({randomGamma_:ywe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bwe(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Gx(n,0,1,e,t)}const eW=V({randomStandardNormal_:bwe});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xwe(n,e,t,r){return al(n,e,t,"int32",r)}const tW=V({randomUniformInt_:xwe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vwe(n){const e=N(n,"x","reverse");return M(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Ls(e,0)}const nW=V({reverse1d_:vwe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wwe(n,e){const t=N(n,"x","reverse");return M(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Ls(t,e)}const rW=V({reverse2d_:wwe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Swe(n,e){const t=N(n,"x","reverse");return M(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Ls(t,e)}const sW=V({reverse3d_:Swe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Twe(n,e){const t=N(n,"x","reverse");return M(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Ls(t,e)}const iW=V({reverse4d_:Twe});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Iwe(n,e){const t=N(n,"x","setdiff1d"),r=N(e,"y","setdiff1d");M(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),M(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),M(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await t.data(),i=await r.data(),a=new Set(i);let o=0;for(let c=0;c<s.length;c++)a.has(s[c])||o++;const l=new In([o],t.dtype),u=new In([o],"int32");for(let c=0,d=0;c<s.length;c++)a.has(s[c])||(l.values[d]=s[c],u.values[d]=c,d++);return[l.toTensor(),u.toTensor()]}const aW=Iwe;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n,e,t){if(ku(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=aa(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return nl(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(n,e,t){if(ku(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=aa(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return nl(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(n,e,t){if(ku(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=aa(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,nl(n,e,r,t)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kwe(n,e,t){const r=N(n,"tensor","tensorScatterupdate"),s=N(e,"indices","tensorScatterupdate","int32"),i=N(t,"updates","tensorScatterupdate");if(jx(i,s,r.shape),r.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${i.dtype}.`);const a={tensor:r,indices:s,updates:i},o={};return W.runKernel(dx,a,o)}const cW=V({tensorScatterUpdate_:kwe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n,e){return Vv(n,e,"right")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Cwe(n){const e=N(n,"condition","whereAsync","bool"),t=await e.data(),r=qx(e.shape,t);return n!==e&&e.dispose(),r}const O_=Cwe;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function _we(n,e,t){const r=N(n,"tensor","boolMask"),s=N(e,"mask","boolMask","bool"),i=t??0,a=s.rank,o=r.shape;M(a>0,()=>"mask cannot be scalar"),ar(o.slice(i,i+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let f=i;f<i+a;f++)l*=o[f];const u=o.slice(0,i).concat([l],o.slice(i+a)),c=H(r,u),d=H(s,[-1]),h=await O_(d),p=ol(h,[1]),g=bh(c,p,i);return n!==r&&r.dispose(),e!==s&&s.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),g}const hW=_we;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mwe(n,e,t,r,s=!0){const i=N(n,"v","movingAverage"),a=N(e,"x","movingAverage"),o=N(t,"decay","movingAverage");Xz(i,a),M(ht(i.shape,a.shape),()=>"Shape mismatch in v and x");const l=Ve(1),u=Ee(l,o);let c=Z(Ee(a,i),u);if(s){M(r!=null,()=>"When using zeroDebias: true, step is required.");const d=N(r,"step","movingAverage");c=Fe(c,Ee(l,Wa(o,d)))}return me(i,c)}const pW=V({movingAverage_:Mwe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nwe(n,e,t){ps(t);const r=N(n,"indices","scatterND","int32"),s=N(e,"updates","scatterND");jx(s,r,t);const i={indices:r,updates:s},a={shape:t};return W.runKernel(cx,i,a)}const fW=V({scatterND_:Nwe});function Ewe(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,i=n.rank>1?n.shape[1]:1;if(t.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${i}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rwe(n,e,t,r=0){ps(t);const s=N(n,"sparseIndices","sparseToDense","int32"),i=N(e,"sparseValues","sparseToDense","string_or_numeric"),a=N(r,"defaultValue","sparseToDense",i.dtype);Ewe(s,i,t,a);const o={sparseIndices:s,sparseValues:i,defaultValue:a},l={outputShape:t};return W.runKernel(yx,o,l)}const mW=V({sparseToDense_:Rwe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lwe(n,e){const t=N(e,"indices","gatherND","int32"),r={params:N(n,"x","gatherND","string_or_numeric"),indices:t};return W.runKernel(Ub,r)}const gW=V({gatherND_:Lwe});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Awe(n,e,t=1){const r=N(n,"predictions","inTopK"),s=N(e,"targets","inTopK");M(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),M(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),ar(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];M(t>0&&t<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${t}`);const a=await r.data(),o=await s.data(),[l,u]=[a.length/i,i],c=Vn("bool",l);for(let d=0;d<l;d++){const h=d*u,p=a.subarray(h,h+u),g=[];for(let f=0;f<p.length;f++)g.push({value:p[f],index:f});g.sort((f,m)=>m.value-f.value),c[d]=0;for(let f=0;f<t;f++)if(g[f].index===o[d]){c[d]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),Kt(c,s.shape,"bool")}const yW=Awe;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zwe({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(sv(W.state.gradientDepth,l)===!1){let w=fh(n,e,t,r,s,i,a);return o!=null&&(w=me(w,o)),rv(w,l,u,c)}const d=N(n,"x","depthwiseConv2d","float32"),h=N(e,"filter","depthwiseConv2d","float32");let p=d,g=!1;d.rank===3&&(g=!0,p=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),M(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),M(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),i==null&&(i=[1,1]),M(or(t,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Mr("fused depthwiseConv2d",r,a);const f=Xn(p.shape,h.shape,t,i,r,a,!0);let m;o!=null&&(m=N(o,"bias","fused conv2d"),[m]=nn(m,d),qe(f.outShape,m.shape));let y;u!=null&&(y=N(u,"prelu weights","fused depthwiseConv2d"));const b=(w,T)=>{M(Bo(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[k,S,C,_]=T,z=tv(w,C,l),P=wD(S.shape,z,k,t,r,i,a),R=vD(S,z,k.shape,t,r,i,a);if(_!=null){const A=nv(m,z);return[P,R,A]}return[P,R]},x={x:p,filter:h,bias:m,preluActivationWeights:y},v={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return o==null?oa((w,T,k)=>{let S=W.runKernel(of,x,v);return k([T,w,S]),g&&(S=H(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:b}})(p,h):oa((w,T,k,S)=>{let C=W.runKernel(of,x,v);return S([T,w,C,k]),g&&(C=H(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:b}})(p,h,m)}const Dwe=V({fusedDepthwiseConv2d_:zwe});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW=Object.freeze(Object.defineProperty({__proto__:null,conv2d:xD,depthwiseConv2d:Dwe,matMul:JS},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pwe="model",$we=".json",Fwe=".weights.bin";function pR(n){return new Promise(e=>setTimeout(e)).then(n)}class wu{constructor(e){if(!q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(wu.URL_SCHEME)&&(e=e.slice(wu.URL_SCHEME.length)),(e==null||e.length===0)&&(e=Pwe),this.modelJsonFileName=e+$we,this.weightDataFileName=e+Fwe}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Mi.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],i=Jz(e,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=a,await pR(()=>o.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=r,await pR(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Pm(e)}}}}wu.URL_SCHEME="downloads://";class Gwe{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const r=new FileReader;r.onload=s=>{const i=JSON.parse(s.target.result),a=i.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const o=rI(i,l=>this.loadWeights(l));e(o)},r.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const t=[],r=[];for(const a of e)t.push(...a.weights),r.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),i=r.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(i).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((r,s)=>{const i=new FileReader;i.onload=a=>{const o=a.target.result;r(o)},i.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(i=>WE(i.name)),s={};for(const i of e)i.paths.forEach(a=>{const o=WE(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),r.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[r.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const Owe=n=>q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(wu.URL_SCHEME)?Wwe(n.slice(wu.URL_SCHEME.length)):null;Jt.registerSaveRouter(Owe);function Wwe(n="model"){return new wu(n)}function Vwe(n){return new Gwe(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lw{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class xW{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Bwe{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Xwe(n,e,t,r){const s=arguments;return new Bwe(j0(...s))}function j0(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Lw(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Lw({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Lw({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function Uwe(n){return new xW(n)}function Zwe(n){return new xW(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W_=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Mi,browserFiles:Vwe,browserHTTPRequest:DD,concatenateArrayBuffers:Qz,copyModel:j6,decodeWeights:eI,decodeWeightsStream:jz,encodeWeights:HS,fromMemory:Xwe,fromMemorySync:j0,getLoadHandlers:eD,getModelArtifactsForJSON:rI,getModelArtifactsForJSONSync:nI,getModelArtifactsInfoForJSON:Pm,getSaveHandlers:qz,getWeightSpecs:M0,http:fk,isHTTPScheme:e2,listModels:K6,loadWeights:LD,moveModel:Q6,registerLoadRouter:P6,registerSaveRouter:D6,removeModel:Y6,weightsLoaderFactory:AD,withSaveHandler:Uwe,withSaveHandlerSync:Zwe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hwe(n,e,t){const r=N(n,"labels","confusionMatrix"),s=N(e,"predictions","confusionMatrix");M(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),M(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),M(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),M(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),M(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const i=nd(Te(r,"int32"),t),a=nd(Te(s,"int32"),t),o=ft(i),l=ot(o,a);return Te(l,"int32")}const Kwe=V({confusionMatrix_:Hwe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ywe=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:Kwe},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const vW="4.16.0";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jwe=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:iv,nonMaxSuppressionV4Impl:av,nonMaxSuppressionV5Impl:ov,whereImpl:qx},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qwe(n){return new Jk(n)}function Jwe(n){return new qk(n)}function qwe(){return new eC}function eSe(n){return new tC(n)}const tSe=Object.freeze(Object.defineProperty({__proto__:null,maxNorm:Qwe,minMaxNorm:eSe,nonNeg:qwe,unitNorm:Jwe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nSe(){return new Bk}function rSe(){return new gv}function sSe(n){return new Xk(n)}function iSe(n){return new Uk(n)}function aSe(n){return new Zk(n)}function oSe(n){return new Hk(n)}function lSe(n){return new Kk(n)}function uSe(n){return new Zr(n)}function cSe(n){return new yv(n)}function dSe(n){return new bv(n)}function hSe(n){return new xv(n)}function pSe(n){return new vv(n)}function fSe(n){return new wv(n)}function mSe(n){return new Sv(n)}function gSe(n){return new Yk(n)}const ySe=Object.freeze(Object.defineProperty({__proto__:null,constant:sSe,glorotNormal:dSe,glorotUniform:cSe,heNormal:hSe,heUniform:pSe,identity:lSe,leCunNormal:fSe,leCunUniform:mSe,ones:rSe,orthogonal:gSe,randomNormal:aSe,randomUniform:iSe,truncatedNormal:oSe,varianceScaling:uSe,zeros:nSe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bSe(n){return new Ra(n)}function xSe(n){return new _v(n)}function wW(n){return $P(n)}function vSe(n,e){nC.registerCallbackConstructor(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wSe(n){return new wh(n)}function SSe(n){return new hC(n)}function TSe(n){return new uC(n)}function ISe(n){return new cC(n)}function kSe(n){return new dC(n)}function CSe(n){return new fC(n)}function _Se(n){return new pC(n)}function MSe(n){return new dg(n)}function NSe(n){return new Ih(n)}function ESe(n){return new gC(n)}function RSe(n){return new kh(n)}function LSe(n){return new yC(n)}function ASe(n){return new bC(n)}function zSe(n){return new xC(n)}function DSe(n){return new vC(n)}function PSe(n){return new wC(n)}function $Se(n){return new NC(n)}function FSe(n){return new _C(n)}function GSe(n){return new Av(n)}function OSe(n){return new CC(n)}function WSe(n){return new MC(n)}function VSe(n){return new EC(n)}function BSe(n){return new RC(n)}function XSe(n){return new LC(n)}function USe(n){return new zC(n)}function ZSe(n){return new DC(n)}function HSe(n){return new $C(n)}function KSe(n){return new OC(n)}function YSe(n){return new FC(n)}function jSe(n){return new GC(n)}function QSe(n){return new PC(n)}function JSe(n){return new WC(n)}function qSe(n){return new UC(n)}function e2e(n){return new ZC(n)}function t2e(n){return new HC(n)}function V_(n){return new YC(n)}function n2e(n){return V_(n)}function r2e(n){return V_(n)}function B_(n){return new QC(n)}function s2e(n){return B_(n)}function i2e(n){return B_(n)}function X_(n){return new qC(n)}function a2e(n){return X_(n)}function o2e(n){return X_(n)}function l2e(n){return new e_(n)}function u2e(n){return new n_(n)}function SW(n){return new t_(n)}function TW(n){return new r_(n)}function IW(n){return new KC(n)}function kW(n){return new jC(n)}function c2e(n){return new JC(n)}function d2e(n){return new TC(n)}function h2e(n){return new Ev(n)}function p2e(n){return new IC(n)}function f2e(n){return new pg(n)}function m2e(n){return new SC(n)}function g2e(n){return new Nv(n)}function y2e(n){return new kC(n)}function b2e(n){return new Lv(n)}function x2e(n){return new Ri(n)}function v2e(n){return new Rv(n)}function w2e(n){return new i_(n)}function S2e(n){return new s_(n)}const T2e=SW,I2e=TW,k2e=IW,C2e=kW;function _2e(n){return new VC(n)}function M2e(n){return new BC(n)}function N2e(n){return new XC(n)}function E2e(n){return new AC(n)}function R2e(n){return new a_(n)}function L2e(n){return new o_(n)}function A2e(n){return new u_(n)}function z2e(n){return new l_(n)}function D2e(n){return new c_(n)}const P2e=Object.freeze(Object.defineProperty({__proto__:null,Layer:ut,RNN:Ri,RNNCell:hg,activation:$Se,add:ZSe,alphaDropout:N2e,average:HSe,averagePooling1d:V_,averagePooling2d:B_,averagePooling3d:X_,avgPool1d:n2e,avgPool2d:s2e,avgPool3d:a2e,avgPooling1d:r2e,avgPooling2d:i2e,avgPooling3d:o2e,batchNormalization:qSe,bidirectional:w2e,categoryEncoding:z2e,centerCrop:L2e,concatenate:KSe,conv1d:MSe,conv2d:NSe,conv2dTranspose:ESe,conv3d:RSe,conv3dTranspose:LSe,convLstm2d:y2e,convLstm2dCell:b2e,cropping2D:zSe,dense:FSe,depthwiseConv2d:PSe,dot:JSe,dropout:GSe,elu:SSe,embedding:USe,flatten:WSe,gaussianDropout:M2e,gaussianNoise:_2e,globalAveragePooling1d:l2e,globalAveragePooling2d:u2e,globalMaxPool1d:T2e,globalMaxPool2d:I2e,globalMaxPooling1d:SW,globalMaxPooling2d:TW,gru:d2e,gruCell:h2e,input:wW,inputLayer:wSe,layerNormalization:e2e,leakyReLU:ISe,lstm:p2e,lstmCell:f2e,masking:E2e,maxPool1d:k2e,maxPool2d:C2e,maxPooling1d:IW,maxPooling2d:kW,maxPooling3d:c2e,maximum:YSe,minimum:jSe,multiply:QSe,permute:XSe,prelu:kSe,randomWidth:D2e,reLU:TSe,repeatVector:VSe,rescaling:R2e,reshape:BSe,resizing:A2e,rnn:x2e,separableConv2d:ASe,simpleRNN:m2e,simpleRNNCell:g2e,softmax:CSe,spatialDropout1d:OSe,stackedRNNCells:v2e,thresholdedReLU:_Se,timeDistributed:S2e,upSampling2d:DSe,zeroPadding2d:t2e},Symbol.toStringTag,{value:"Module"}));function $2e(n,e){return sC(n,e)}function F2e(n,e){return ZP(n,e)}function G2e(n,e){return HP(n,e)}function O2e(n,e){return iC(n,e)}function W2e(n,e){return aC(n,e)}function V2e(n,e){return UP(n,e)}function B2e(n,e){return Ete(n,e)}function X2e(n,e){return rC(n,e)}function U2e(n,e){return Iv(n,e)}function Z2e(n,e){return Sh(n,e)}function H2e(n,e){return Sh(n,e)}function K2e(n,e){return Sh(n,e)}function Y2e(n,e){return Fu(n,e)}function j2e(n,e){return Fu(n,e)}function Q2e(n,e){return Fu(n,e)}const J2e=Object.freeze(Object.defineProperty({__proto__:null,MAPE:H2e,MSE:j2e,binaryAccuracy:$2e,binaryCrossentropy:F2e,categoricalAccuracy:O2e,categoricalCrossentropy:W2e,cosineProximity:X2e,mape:K2e,meanAbsoluteError:U2e,meanAbsolutePercentageError:Z2e,meanSquaredError:Y2e,mse:Q2e,precision:V2e,recall:B2e,sparseCategoricalAccuracy:G2e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const q2e=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON:ane},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function eTe(n){return new cg(n)}function tTe(n){return cne(n)}function nTe(n){return dne(n)}const rTe=Object.freeze(Object.defineProperty({__proto__:null,l1:tTe,l1l2:eTe,l2:nTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class CW extends od{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Ra))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function vy(n,e){return n<e}function fR(n,e){return n>e}class _W extends CW{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new nt("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=vy:this.mode==="max"?this.monitorFunc=fR:this.monitor.indexOf("acc")!==-1?this.monitorFunc=fR:this.monitorFunc=vy,this.monitorFunc===vy&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===vy?1/0:-1/0}async onEpochEnd(e,t){await oo(t);const r=this.getMonitorValue(t);r!=null&&(this.monitorFunc(r-this.minDelta,this.best)?(this.best=r,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});const t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}function sTe(n){return new _W(n)}const iTe={earlyStopping:sTe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_={};function aTe(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};U_[n]=t}function MW(n){return U_[n]}function oTe(n){delete U_[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(n,e,t,r,s){const i=e.inputParams[n];if(i&&i.inputIndexStart!==void 0){const o=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?o+1:i.inputIndexEnd,u=o<0?e.inputNames.length+o:o;if(i.type==="tensor")return er(e.inputNames[u],t,r,s);if(i.type==="tensors"){const h=e.inputs.slice(o,l);return e.inputNames.slice(o,l).filter((p,g)=>{var f;return((f=h[g])===null||f===void 0?void 0:f.op)!=="NoOp"}).map(p=>er(p,t,r,s))}const c=er(e.inputNames[u],t,r,s),d=c.dataSync();return i.type==="number"?d[0]:Ns(c.shape,d)}const a=e.attrParams[n];return a&&a.value}function er(n,e,t,r){const[s,i]=ts(n,t);if(r!=null){const o=r.getHashTableHandleByName(s);if(o!=null)return o}const a=t.currentContextIds.find(o=>!!e[Q0(s,o)]);return a!==void 0?e[Q0(s,a)][i]:void 0}function mR(n,e,t){return e[Q0(n,t.currentContextId)]}function wa(n,e){const[t,r,s]=ts(n,e);return[Q0(t,e&&e.currentContextId),r,s]}function Q0(n,e){return e?`${n}-${e}`:n}function ts(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const i=e.parseNodeNameCache.get(n);if(i!=null)return i}const r=n.split(":");let s;if(r.length===1)s=[n,0,void 0];else{const i=r[0],a=r.length===3?r[1]:void 0,o=Number(r[r.length-1]);s=[i,o,a]}return t&&e.parseNodeNameCache.set(n,s),s}function Zy(n,e,t){let r=I("pad",n,e,t);if(r==="explicit"){r=I("explicitPaddings",n,e,t);const s=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)s[i][0]=r[i*2],s[i][1]=r[i*2+1];return s}return r}function Sa(n){return n.kept?n:na(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lTe=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],uTe=Object.freeze(Object.defineProperty({__proto__:null,json:lTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cTe=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],dTe=Object.freeze(Object.defineProperty({__proto__:null,json:cTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hTe=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],pTe=Object.freeze(Object.defineProperty({__proto__:null,json:hTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fTe=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],mTe=Object.freeze(Object.defineProperty({__proto__:null,json:fTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gTe=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],yTe=Object.freeze(Object.defineProperty({__proto__:null,json:gTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bTe=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],xTe=Object.freeze(Object.defineProperty({__proto__:null,json:bTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vTe=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],wTe=Object.freeze(Object.defineProperty({__proto__:null,json:vTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const STe=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],TTe=Object.freeze(Object.defineProperty({__proto__:null,json:STe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ITe=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],kTe=Object.freeze(Object.defineProperty({__proto__:null,json:ITe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CTe=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],_Te=Object.freeze(Object.defineProperty({__proto__:null,json:CTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MTe=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],NTe=Object.freeze(Object.defineProperty({__proto__:null,json:MTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ETe=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],RTe=Object.freeze(Object.defineProperty({__proto__:null,json:ETe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LTe=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],ATe=Object.freeze(Object.defineProperty({__proto__:null,json:LTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zTe=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],DTe=Object.freeze(Object.defineProperty({__proto__:null,json:zTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PTe=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],$Te=Object.freeze(Object.defineProperty({__proto__:null,json:PTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FTe=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],GTe=Object.freeze(Object.defineProperty({__proto__:null,json:FTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OTe=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],WTe=Object.freeze(Object.defineProperty({__proto__:null,json:OTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VTe=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],BTe=Object.freeze(Object.defineProperty({__proto__:null,json:VTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XTe=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],UTe=Object.freeze(Object.defineProperty({__proto__:null,json:XTe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gR{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[uTe,dTe,pTe,mTe,yTe,xTe,wTe,TTe,kTe,_Te,NTe,RTe,ATe,DTe,$Te,GTe,WTe,BTe,UTe],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,t={}){const r=e.node,s=[],i=[],a=[],o=r.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?i.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{});let l=[];const u=[];let c={},d={};t!=null&&(c=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach(f=>{const m=o[f];m.inputNames.forEach((y,b)=>{const[x,,v]=wa(y),w=o[x];if(w.outputs!=null){const T=w.outputs.indexOf(v);if(T!==-1){const k=`${x}:${T}`;m.inputNames[b]=k}}m.inputs.push(w),w.children.push(m)})}),Object.keys(d).length===0?h.forEach(f=>{const m=o[f];m.children.length===0&&u.push(m)}):Object.keys(d).forEach(f=>{const[m]=wa(f),y=o[m];y!=null&&(y.signatureKey=d[f],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(f=>{const[m]=wa(f),y=o[m];y&&(y.signatureKey=c[f],l.push(y))}):l=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));const g={nodes:o,inputs:l,outputs:u,weights:i,placeholders:s,signature:t,functions:p};return a.length>0&&(g.initNodes=a),g}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=MW(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((s,i)=>(s[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},s),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((s,i)=>{const a=i.type;let o;switch(i.type){case"string":o=k2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=k2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":o=L2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=L2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":o=_2(e.attr,i.tfName,i.defaultValue||0),o===void 0&&i.tfDeprecatedName&&(o=_2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":o=R2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=R2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":o=C2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=C2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":o=z2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=z2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":o=E2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=E2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":o=A2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=A2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":o=M2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=M2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":o=N2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=N2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":o=yR(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=yR(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${e.op}`)}return s[i.name]={value:o,type:a},s},{})),r}mapFunction(e){const t=e.nodeDef,r=[],s=[];let i={};t!=null&&(i=t.reduce((c,d)=>(c[d.name]=this.mapNode(d),d.op==="Const"&&s.push(c[d.name]),c),{}));const a=[],o=[];e.signature.inputArg.forEach(c=>{const[d]=wa(c.name),h={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Z_(c.type),type:"dtype"}},children:[]};h.signatureKey=c.name,a.push(h),i[d]=h}),Object.keys(i).forEach(c=>{const d=i[c];d.inputNames.forEach((h,p)=>{const[g,,f]=wa(h),m=i[g];if(m.outputs!=null){const y=m.outputs.indexOf(f);if(y!==-1){const b=`${g}:${y}`;d.inputNames[p]=b}}d.inputs.push(m),m.children.push(d)})});const l=e.ret;e.signature.outputArg.forEach(c=>{const[d,h]=wa(l[c.name]),p=i[d];p!=null&&(p.defaultOutput=h,o.push(p))});const u=this.mapArgsToSignature(e);return{nodes:i,inputs:a,outputs:o,weights:s,placeholders:r,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function ZTe(n){const e=q().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function NW(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):ZTe(n);return e?t:t.toLowerCase()}function k2(n,e,t,r=!1){const s=n[e];return s!=null?NW(s.s,r):t}function C2(n,e,t){const r=n[e];return r?r.b:t}function _2(n,e,t){const r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function Z_(n){switch(typeof n=="string"&&(n=qr[n]),n){case qr.DT_FLOAT:case qr.DT_HALF:return"float32";case qr.DT_INT32:case qr.DT_INT64:case qr.DT_INT8:case qr.DT_UINT8:return"int32";case qr.DT_BOOL:return"bool";case qr.DT_DOUBLE:return"float32";case qr.DT_STRING:return"string";case qr.DT_COMPLEX64:case qr.DT_COMPLEX128:return"complex64";default:return null}}function yR(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function M2(n,e,t){const r=n[e];return r&&r.type?Z_(r.type):t}function N2(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(s=>Z_(s)):t}function EW(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function E2(n,e,t){const r=n[e];return r&&r.shape?EW(r.shape):t}function R2(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):t}function L2(n,e,t,r=!1){const s=n[e];return s&&s.list&&s.list.s?s.list.s.map(i=>NW(i,r)):t}function A2(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>EW(s)):t}function z2(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HTe{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,i)=>(s[i]=this.getAttr(i),s),{}))}getInput(e){return er(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return er(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return _2(this.node.rawAttrs,e,t);if(r.s!=null)return k2(this.node.rawAttrs,e,t);if(r.b!=null)return C2(this.node.rawAttrs,e,t);if(r.shape!=null)return E2(this.node.rawAttrs,e,t);if(r.type!=null)return M2(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return R2(this.node.rawAttrs,e,t);if(r.list.s!=null)return L2(this.node.rawAttrs,e,t);if(r.list.shape!=null)return A2(this.node.rawAttrs,e,t);if(r.list.b!=null)return z2(this.node.rawAttrs,e,t);if(r.list.type!=null)return N2(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cr=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:JT,abs:vn,acos:iI,acosh:aI,add:me,addN:EO,all:Ex,any:hf,argMax:lu,argMin:oI,asin:lI,asinh:uI,atan:cI,atan2:dI,atanh:hI,avgPool:Fm,avgPool3d:fI,basicLSTMCell:RO,batchNorm:ph,batchNorm2d:mI,batchNorm3d:gI,batchNorm4d:yI,batchToSpaceND:Gm,bincount:bI,bitwiseAnd:LO,booleanMaskAsync:hW,broadcastArgs:AO,broadcastTo:Ul,buffer:rt,cast:Te,ceil:xI,clipByValue:Xr,clone:na,complex:Ga,concat:pn,concat1d:vI,concat2d:wI,concat3d:SI,concat4d:TI,conv1d:Rx,conv2d:Oa,conv2dTranspose:Lx,conv3d:kI,conv3dTranspose:CI,cos:Om,cosh:Ax,cosineWindow:ev,cumprod:mf,cumsum:zx,denseBincount:N0,depthToSpace:_I,depthwiseConv2d:fh,diag:zO,dilation2d:MI,div:Fe,divNoNan:NI,dot:EI,dropout:nk,einsum:_l,elu:mh,enclosingPowerOfTwo:rk,ensureShape:DO,equal:us,erf:RI,euclideanNorm:AI,exp:Ur,expandDims:Jn,expm1:zI,eye:Dx,fft:qm,fill:Ru,floor:yh,floorDiv:Nx,fused:bW,gather:bh,gatherND:gW,greater:Nr,greaterEqual:ja,ifft:id,imag:Wm,image:js,inTopKAsync:yW,irfft:Kx,isFinite:DI,isInf:PI,isNaN:$I,leakyRelu:Vm,less:td,lessEqual:il,linalg:ak,linspace:PO,localResponseNormalization:FI,log:cs,log1p:Bm,logSigmoid:GI,logSoftmax:$x,logSumExp:Xm,logicalAnd:ei,logicalNot:Um,logicalOr:Fx,logicalXor:OI,losses:MD,lowerBound:$O,matMul:ot,max:Es,maxPool:Zm,maxPool3d:WI,maxPoolWithArgmax:FO,maximum:ca,mean:en,meshgrid:GO,min:ed,minimum:Xo,mirrorPad:VI,mod:BI,moments:Hm,movingAverage:pW,mul:Z,multiRNNCell:OO,multinomial:WO,neg:Gt,norm:gh,notEqual:hu,oneHot:nd,ones:Gr,onesLike:ds,op:V,outerProduct:VO,pad:Qa,pad1d:BO,pad2d:XO,pad3d:UO,pad4d:ZO,pool:XI,pow:Wa,prelu:Ym,print:sI,prod:UI,raggedGather:HO,raggedRange:KO,raggedTensorToTensor:YO,rand:jO,randomGamma:qO,randomNormal:Gx,randomStandardNormal:eW,randomUniform:al,randomUniformInt:tW,range:pu,real:rd,reciprocal:HI,relu:Ni,relu6:Ox,reshape:H,reverse:Ls,reverse1d:nW,reverse2d:rW,reverse3d:sW,reverse4d:iW,rfft:eg,round:Wx,rsqrt:Vx,scalar:Ve,scatterND:fW,searchSorted:Vv,selu:Bx,separableConv2d:Xx,setdiff1dAsync:aW,sigmoid:xi,sign:KI,signal:_D,sin:Ux,sinh:Zx,slice:gt,slice1d:jm,slice2d:Hx,slice3d:Qm,slice4d:sd,softmax:Jm,softplus:Lu,spaceToBatchND:Km,sparse:ND,sparseToDense:mW,spectral:CD,split:Wr,sqrt:ir,square:Lt,squaredDifference:Yx,squeeze:ol,stack:fr,step:zu,stridedSlice:YI,string:ED,sub:Ee,sum:Ae,tan:jI,tanh:cu,tensor:Kt,tensor1d:nr,tensor2d:Ao,tensor3d:QI,tensor4d:oW,tensor5d:lW,tensor6d:uW,tensorScatterUpdate:cW,tile:Ts,topk:qI,transpose:ft,truncatedNormal:Qx,unique:ek,unsortedSegmentSum:Jx,unstack:As,upperBound:dW,variable:tk,where:Gn,whereAsync:O_,zeros:Sn,zerosLike:yt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KTe=(n,e,t,r=cr)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(I("a",n,e,t),I("b",n,e,t))];case"AddN":return[r.addN(I("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(I("a",n,e,t),I("b",n,e,t))];case"Mul":return[r.mul(I("a",n,e,t),I("b",n,e,t))];case"RealDiv":case"Div":return[r.div(I("a",n,e,t),I("b",n,e,t))];case"DivNoNan":return[r.divNoNan(I("a",n,e,t),I("b",n,e,t))];case"FloorDiv":return[r.floorDiv(I("a",n,e,t),I("b",n,e,t))];case"Sub":return[r.sub(I("a",n,e,t),I("b",n,e,t))];case"Minimum":return[r.minimum(I("a",n,e,t),I("b",n,e,t))];case"Maximum":return[r.maximum(I("a",n,e,t),I("b",n,e,t))];case"Pow":return[r.pow(I("a",n,e,t),I("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YTe=(n,e,t,r=cr)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(I("x",n,e,t))];case"Acos":return[r.acos(I("x",n,e,t))];case"Acosh":return[r.acosh(I("x",n,e,t))];case"Asin":return[r.asin(I("x",n,e,t))];case"Asinh":return[r.asinh(I("x",n,e,t))];case"Atan":return[r.atan(I("x",n,e,t))];case"Atan2":return[r.atan2(I("x",n,e,t),I("y",n,e,t))];case"Atanh":return[r.atanh(I("x",n,e,t))];case"Ceil":return[r.ceil(I("x",n,e,t))];case"Complex":return[r.complex(I("real",n,e,t),I("imag",n,e,t))];case"Cos":return[r.cos(I("x",n,e,t))];case"Cosh":return[r.cosh(I("x",n,e,t))];case"Elu":return[r.elu(I("x",n,e,t))];case"Erf":return[r.erf(I("x",n,e,t))];case"Exp":return[r.exp(I("x",n,e,t))];case"Expm1":return[r.expm1(I("x",n,e,t))];case"Floor":return[r.floor(I("x",n,e,t))];case"Log":return[r.log(I("x",n,e,t))];case"Log1p":return[r.log1p(I("x",n,e,t))];case"Imag":return[r.imag(I("x",n,e,t))];case"Neg":return[r.neg(I("x",n,e,t))];case"Reciprocal":return[r.reciprocal(I("x",n,e,t))];case"Real":return[r.real(I("x",n,e,t))];case"Relu":return[r.relu(I("x",n,e,t))];case"Round":return[r.round(I("x",n,e,t))];case"Selu":return[r.selu(I("x",n,e,t))];case"Sigmoid":return[r.sigmoid(I("x",n,e,t))];case"Sin":return[r.sin(I("x",n,e,t))];case"Sign":return[r.sign(I("x",n,e,t))];case"Sinh":return[r.sinh(I("x",n,e,t))];case"Softplus":return[r.softplus(I("x",n,e,t))];case"Sqrt":return[r.sqrt(I("x",n,e,t))];case"Square":return[r.square(I("x",n,e,t))];case"Tanh":return[r.tanh(I("x",n,e,t))];case"Tan":return[r.tan(I("x",n,e,t))];case"ClipByValue":return[r.clipByValue(I("x",n,e,t),I("clipValueMin",n,e,t),I("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(I("x",n,e,t))];case"Rsqrt":return[r.rsqrt(er(n.inputNames[0],e,t))];case"LeakyRelu":return[r.leakyRelu(I("x",n,e,t),I("alpha",n,e,t))];case"Prelu":return[r.prelu(I("x",n,e,t),I("alpha",n,e,t))];case"IsNan":return[r.isNaN(er(n.inputNames[0],e,t))];case"IsInf":return[r.isInf(er(n.inputNames[0],e,t))];case"IsFinite":return[r.isFinite(er(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){M(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const s=n[r],i=e[r];M(s<0||i<0||s===i,()=>t+` Shapes ${n} and ${e} must match`)}}}function bR(n){return!(typeof n=="number"||n.some(e=>e<0))}function sp(n,e,t){let r=D2(n,t);const s=!bR(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(i=>{r=D2(i.shape,r)}),!bR(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function D2(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const s=n[r],i=e[r];if(s>=0&&i>=0&&s!==i)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=s>=0?s:i}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jTe{constructor(e,t,r,s,i,a,o){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=i,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ve(0),un(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Ws(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,un(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,s)=>this.write(r,t[s]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return Kt([],[0].concat(this.elementShape));const r=this.readMany(e);return Ws(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),fr(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Kt([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const r=this.readMany(t);return Ws(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),pn(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,As(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const s=e.map(l=>(r+=l,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const i=r===0?0:t.size/r,a=[];j(()=>{t=H(t,[1,r,i]);for(let l=0;l<e.length;++l){const u=[0,l===0?0:s[l-1],0],c=[1,e[l],i];a[l]=H(gt(t,u,c),this.elementShape)}return a});const o=[];for(let l=0;l<e.length;l++)o[l]=l;this.writeMany(o,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Su{get id(){return this.idTensor.id}constructor(e,t,r,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(i=>{if(r!==i.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${i.dtype}`);Ws(t,i.shape,"TensorList shape mismatch: "),un(i)}),this.idTensor=Ve(0),this.maxNumElements=s,un(this.idTensor)}copy(){return new Su([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Ws(e,this.elementShape,"TensorList shape mismatch: ");const s=sp(this.elementShape,this.tensors,e);return j(()=>{const i=this.tensors.map(a=>H(a,s));return fr(i,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=sp(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,Ws(s.shape,e,"TensorList shape mismatch: "),H(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ws(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");un(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Su([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ws(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=sp(this.elementShape,this.tensors,t);return H(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ws(this.elementShape,t.shape,"TensorList shape mismatch: "),un(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Ws(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=sp(this.elementShape,this.tensors,r);return e.length===0?Kt([],[0].concat(s)):j(()=>{const i=e.map(a=>H(this.tensors[a],s));return fr(i,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ws(this.elementShape,t,"TensorList shape mismatch: ");const r=sp(this.elementShape,this.tensors,t);return this.size()===0?Kt([],[0].concat(r)):j(()=>{const s=this.tensors.map(i=>H(i,r));return pn(s,0)})}}function QTe(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const s=n.shape.slice(1);Ws(s,e,"TensorList shape mismatch: ");const i=As(n);return new Su(i,e,r)}function JTe(n,e,t,r){return new Su([],n,e,r)}function qTe(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new Su([],t,n.dtype,r),a=As(n,0);return e.forEach((o,l)=>{i.setItem(o,a[l])}),i}function eIe(n,e,t){let r=0;const s=e.map(c=>(r+=c,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const i=n.shape.slice(1),a=D2(i,t),o=r===0?0:n.size/r,l=j(()=>{const c=[];n=H(n,[1,r,o]);for(let d=0;d<e.length;++d){const h=[0,d===0?0:s[d-1],0],p=[1,e[d],o];c[d]=H(gt(n,h,p),a)}return n.dispose(),c}),u=new Su([],t,n.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tIe=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const r=I("thenBranch",n,e,t),s=I("elseBranch",n,e,t),i=I("cond",n,e,t),a=I("args",n,e,t);return(await i.data())[0]?t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=I("body",n,e,t),s=I("cond",n,e,t),i=I("args",n,e,t),a=await t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap),o=i.map(c=>c.id);let l=await a[0].data();a.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let u=i;for(;l[0];){const c=u;u=await t.functionMap[r].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const d=u.map(p=>p.id);c.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()});const h=await t.functionMap[s].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await h[0].data(),h.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const r=I("pred",n,e,t);return[Sa(r)]}case"Switch":{const r=I("pred",n,e,t);let s=I("data",n,e,t);return s.kept||(s=Sa(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>er(s,e,t)!==void 0);if(r){const s=er(r,e,t);return[Sa(s)]}return}case"Enter":{const r=I("frameName",n,e,t),s=I("tensor",n,e,t);return t.enterFrame(r),[Sa(s)]}case"Exit":{const r=I("tensor",n,e,t);return t.exitFrame(),[Sa(r)]}case"NextIteration":{const r=I("tensor",n,e,t);return t.nextIteration(),[Sa(r)]}case"TensorArrayV3":{const r=I("size",n,e,t),s=I("dtype",n,e,t),i=I("elementShape",n,e,t),a=I("dynamicSize",n,e,t),o=I("clearAfterRead",n,e,t),l=I("identicalElementShapes",n,e,t),u=I("name",n,e,t),c=new jTe(u,s,r,i,l,a,o);return t.addTensorArray(c),[c.idTensor,Ve(1)]}case"TensorArrayWriteV3":{const r=I("tensorArrayId",n,e,t),s=I("index",n,e,t),i=I("tensor",n,e,t),a=t.getTensorArray(r.id);return a.write(s,i),[a.idTensor]}case"TensorArrayReadV3":{const r=I("tensorArrayId",n,e,t),s=I("index",n,e,t);return[t.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=I("tensorArrayId",n,e,t),s=I("indices",n,e,t),i=I("dtype",n,e,t);return[t.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=I("tensorArrayId",n,e,t),s=I("indices",n,e,t),i=I("tensor",n,e,t),a=t.getTensorArray(r.id);return a.scatter(s,i),[a.idTensor]}case"TensorArrayConcatV3":{const r=I("tensorArrayId",n,e,t),s=t.getTensorArray(r.id),i=I("dtype",n,e,t);return[s.concat(i)]}case"TensorArraySplitV3":{const r=I("tensorArrayId",n,e,t),s=I("tensor",n,e,t),i=I("lengths",n,e,t),a=t.getTensorArray(r.id);return a.split(i,s),[a.idTensor]}case"TensorArraySizeV3":{const r=I("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return[Ve(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=I("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=I("tensorListId",n,e,t),s=I("index",n,e,t),i=I("tensor",n,e,t),a=t.getTensorList(r.id);return a.setItem(s,i),[a.idTensor]}case"TensorListGetItem":{const r=I("tensorListId",n,e,t),s=I("index",n,e,t),i=I("elementShape",n,e,t),a=I("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(s,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=I("indices",n,e,t),s=I("tensor",n,e,t),i=I("elementShape",n,e,t),a=I("numElements",n,e,t),o=qTe(s,r,i,a);return t.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=I("elementShape",n,e,t),s=I("elementDType",n,e,t);let i;n.op==="TensorListReserve"?i="numElements":i="maxNumElements";const a=I(i,n,e,t),o=n.op==="TensorListReserve"?-1:a,l=JTe(r,s,a,o);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const r=I("tensorListId",n,e,t),s=I("indices",n,e,t),i=I("elementShape",n,e,t),a=I("elementDType",n,e,t);return[t.getTensorList(r.id).gather(s,a,i)]}case"TensorListStack":{const r=I("tensorListId",n,e,t),s=I("elementShape",n,e,t),i=I("elementDType",n,e,t),a=I("numElements",n,e,t);return[t.getTensorList(r.id).stack(s,i,a)]}case"TensorListFromTensor":{const r=I("tensor",n,e,t),s=I("elementShape",n,e,t),i=I("elementDType",n,e,t),a=QTe(r,s,i);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=I("tensorListId",n,e,t),s=t.getTensorList(r.id),i=I("dtype",n,e,t),a=I("elementShape",n,e,t);return[s.concat(i,a)]}case"TensorListPushBack":{const r=I("tensorListId",n,e,t),s=I("tensor",n,e,t),i=t.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=I("tensorListId",n,e,t),s=I("elementShape",n,e,t),i=I("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=I("tensor",n,e,t),s=I("elementShape",n,e,t),i=I("lengths",n,e,t),a=eIe(r,i,s);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=I("tensorListId",n,e,t),s=t.getTensorList(r.id);return[Ve(s.size(),"int32")]}case"TensorListResize":{const r=I("tensorListId",n,e,t),s=I("size",n,e,t),i=t.getTensorList(r.id).resize(s);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(n,e,t){const[r,s]=I("fusedOps",n,e,t),i=r==="biasadd",a=!i,o=s==="prelu",l=r==="fusedbatchnorm",u=I("numArgs",n,e,t);if(i){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=I("strides",n,e,t),d=Zy(n,e,t),h=I("dataFormat",n,e,t).toUpperCase(),p=I("dilations",n,e,t);let[g,f]=I("args",n,e,t);a&&(f=g,g=void 0);const m=I("leakyreluAlpha",n,e,t);return{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:g,preluArg:f,activationFunc:s,leakyreluAlpha:m}}const nIe=(n,e,t,r=cr)=>{switch(n.op){case"Conv1D":{const s=I("stride",n,e,t),i=I("pad",n,e,t),a=I("dataFormat",n,e,t).toUpperCase(),o=I("dilation",n,e,t);return[r.conv1d(I("x",n,e,t),I("filter",n,e,t),s,i,a,o)]}case"Conv2D":{const s=I("strides",n,e,t),i=Zy(n,e,t),a=I("dataFormat",n,e,t).toUpperCase(),o=I("dilations",n,e,t);return[r.conv2d(I("x",n,e,t),I("filter",n,e,t),[s[1],s[2]],i,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=xR(n,e,t);return[r.fused.conv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=xR(n,e,t);return[r.fused.depthwiseConv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=I("outputShape",n,e,t),i=I("strides",n,e,t),a=Zy(n,e,t);return[r.conv2dTranspose(I("x",n,e,t),I("filter",n,e,t),s,[i[1],i[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=I("strides",n,e,t),i=Zy(n,e,t),a=I("dilations",n,e,t),o=I("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(I("input",n,e,t),I("filter",n,e,t),[s[1],s[2]],i,o,[a[1],a[2]])]}case"Conv3D":{const s=I("strides",n,e,t),i=I("pad",n,e,t),a=I("dataFormat",n,e,t).toUpperCase(),o=I("dilations",n,e,t);return[r.conv3d(I("x",n,e,t),I("filter",n,e,t),[s[1],s[2],s[3]],i,a,[o[1],o[2],o[3]])]}case"AvgPool":{const s=I("strides",n,e,t),i=I("pad",n,e,t),a=I("kernelSize",n,e,t);return[r.avgPool(I("x",n,e,t),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPool":{const s=I("strides",n,e,t),i=I("pad",n,e,t),a=I("kernelSize",n,e,t);return[r.maxPool(I("x",n,e,t),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPoolWithArgmax":{const s=I("strides",n,e,t),i=I("pad",n,e,t),a=I("kernelSize",n,e,t),o=I("includeBatchInIndex",n,e,t),{result:l,indexes:u}=r.maxPoolWithArgmax(I("x",n,e,t),[a[1],a[2]],[s[1],s[2]],i,o);return[l,u]}case"AvgPool3D":{const s=I("strides",n,e,t),i=I("pad",n,e,t),a=I("kernelSize",n,e,t);return[r.avgPool3d(I("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"MaxPool3D":{const s=I("strides",n,e,t),i=I("pad",n,e,t),a=I("kernelSize",n,e,t);return[r.maxPool3d(I("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"Dilation2D":{const s=I("strides",n,e,t),i=I("pad",n,e,t),a=I("dilations",n,e,t),o=s[1],l=s[2],u=a[1],c=a[2];return[r.dilation2d(I("x",n,e,t),I("filter",n,e,t),[o,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rIe=(n,e,t,r=cr)=>{switch(n.op){case"Fill":{const s=I("shape",n,e,t),i=I("dtype",n,e,t),a=I("value",n,e,t);return[r.fill(s,a,i)]}case"LinSpace":{const s=I("start",n,e,t),i=I("stop",n,e,t),a=I("num",n,e,t);return[r.linspace(s,i,a)]}case"Multinomial":{const s=I("logits",n,e,t),i=I("numSamples",n,e,t),a=I("seed",n,e,t);return[r.multinomial(s,i,a)]}case"OneHot":{const s=I("indices",n,e,t),i=I("depth",n,e,t),a=I("onValue",n,e,t),o=I("offValue",n,e,t),l=I("dtype",n,e,t);return[r.oneHot(s,i,a,o,l)]}case"Ones":return[r.ones(I("shape",n,e,t),I("dtype",n,e,t))];case"OnesLike":return[r.onesLike(I("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(I("shape",n,e,t),I("dtype",n,e,t),I("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("dtype",n,e,t))];case"RandomUniformInt":return[r.randomUniformInt(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("seed",n,e,t))];case"Range":{const s=I("start",n,e,t),i=I("stop",n,e,t),a=I("step",n,e,t);return[r.range(s,i,a,I("dtype",n,e,t))]}case"TruncatedNormal":{const s=I("shape",n,e,t),i=I("mean",n,e,t),a=I("stdDev",n,e,t),o=I("seed",n,e,t);return[r.truncatedNormal(s,i,a,I("dtype",n,e,t),o)]}case"Zeros":return[r.zeros(I("shape",n,e,t),I("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aw(n,e,t){const r=I("boxes",n,e,t),s=I("scores",n,e,t),i=I("maxOutputSize",n,e,t),a=I("iouThreshold",n,e,t),o=I("scoreThreshold",n,e,t),l=I("softNmsSigma",n,e,t);return{boxes:r,scores:s,maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}}const sIe=async(n,e,t,r,s=cr)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=Aw(n,e,t),d=await s.image.nonMaxSuppressionWithScoreAsync(i,a,o,l,u,c);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Aw(n,e,t),c=I("padToMaxOutputSize",n,e,t),d=await s.image.nonMaxSuppressionPaddedAsync(i,a,o,l,u,c);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Aw(n,e,t);return[await s.image.nonMaxSuppressionAsync(i,a,o,l,u)]}case"Where":{const i=s.cast(I("condition",n,e,t),"bool"),a=[await s.whereAsync(i)];return i.dispose(),a}case"ListDiff":return s.setdiff1dAsync(I("x",n,e,t),I("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iIe=(n,e,t,r=cr)=>{switch(n.op){case"LowerBound":{const s=I("sortedSequence",n,e,t),i=I("values",n,e,t);return[r.lowerBound(s,i)]}case"TopKV2":{const s=I("x",n,e,t),i=I("k",n,e,t),a=I("sorted",n,e,t),o=r.topk(s,i,a);return[o.values,o.indices]}case"UpperBound":{const s=I("sortedSequence",n,e,t),i=I("values",n,e,t);return[r.upperBound(s,i)]}case"Unique":{const s=I("x",n,e,t),i=r.unique(s);return[i.values,i.indices]}case"UniqueV2":{const s=I("x",n,e,t),i=I("axis",n,e,t),a=r.unique(s,i);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aIe=(n,e,t,r=cr)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=I("default",n,e,t);return[er(n.name,e,t)||s];case"Placeholder":return[er(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=I("x",n,e,t);return[Sa(c)]}case"IdentityN":return I("x",n,e,t).map(c=>Sa(c));case"Snapshot":const i=I("x",n,e,t);return[Sa(i)];case"Shape":return[r.tensor1d(I("x",n,e,t).shape,"int32")];case"ShapeN":return I("x",n,e,t).map(c=>r.tensor1d(c.shape));case"Size":return[r.scalar(I("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(I("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=I("x",n,e,t),o=I("data",n,e,t),l=I("message",n,e,t),u=I("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oIe{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ve(0),this.tensorMap=new Map,un(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ve(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),j(()=>{const s=As(t),i=r.length,a=s.length;M(i===a,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${a} elements.`);for(let o=0;o<i;o++){const l=r[o],u=s[o];un(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return j(()=>{const s=[];for(let i=0;i<r.length;i++){const a=r[i],o=this.findWithDefault(a,t);s.push(o)}return fr(s)})}findWithDefault(e,t){return this.tensorMap.get(e)??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lIe=async(n,e,t,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(n.name);if(s!=null)return[s];{const i=I("keyDType",n,e,t),a=I("valueDType",n,e,t),o=new oIe(i,a);return r.addHashTable(n.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=I("tableHandle",n,e,t,r),i=I("keys",n,e,t),a=I("values",n,e,t);return[await r.getHashTableById(s.id).import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=I("tableHandle",n,e,t,r),i=I("keys",n,e,t),a=I("defaultValue",n,e,t);return[await r.getHashTableById(s.id).find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=I("tableHandle",n,e,t,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uIe=(n,e,t,r=cr)=>{switch(n.op){case"ResizeBilinear":{const s=I("images",n,e,t),i=I("size",n,e,t),a=I("alignCorners",n,e,t),o=I("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(s,[i[0],i[1]],a,o)]}case"ResizeNearestNeighbor":{const s=I("images",n,e,t),i=I("size",n,e,t),a=I("alignCorners",n,e,t),o=I("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(s,[i[0],i[1]],a,o)]}case"CropAndResize":{const s=I("image",n,e,t),i=I("boxes",n,e,t),a=I("boxInd",n,e,t),o=I("cropSize",n,e,t),l=I("method",n,e,t),u=I("extrapolationValue",n,e,t);return[r.image.cropAndResize(s,i,a,o,l,u)]}case"ImageProjectiveTransformV3":{const s=I("images",n,e,t),i=I("transforms",n,e,t),a=I("outputShape",n,e,t),o=I("fillValue",n,e,t),l=I("interpolation",n,e,t),u=I("fillMode",n,e,t);return[r.image.transform(s,i,l.toLowerCase(),u.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cIe=(n,e,t,r=cr)=>{switch(n.op){case"Equal":return[r.equal(I("a",n,e,t),I("b",n,e,t))];case"NotEqual":return[r.notEqual(I("a",n,e,t),I("b",n,e,t))];case"Greater":return[r.greater(I("a",n,e,t),I("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(I("a",n,e,t),I("b",n,e,t))];case"Less":return[r.less(I("a",n,e,t),I("b",n,e,t))];case"LessEqual":return[r.lessEqual(I("a",n,e,t),I("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(I("a",n,e,t),I("b",n,e,t))];case"LogicalNot":return[r.logicalNot(I("a",n,e,t))];case"LogicalOr":return[r.logicalOr(I("a",n,e,t),I("b",n,e,t))];case"Select":case"SelectV2":return[r.where(I("condition",n,e,t),I("a",n,e,t),I("b",n,e,t))];case"BitwiseAnd":return[r.bitwiseAnd(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dIe=(n,e,t,r=cr)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(I("a",n,e,t),I("b",n,e,t),I("transposeA",n,e,t),I("transposeB",n,e,t))];case"Einsum":return[r.einsum(I("equation",n,e,t),...I("tensors",n,e,t))];case"Transpose":return[r.transpose(I("x",n,e,t),I("perm",n,e,t))];case"_FusedMatMul":const[s,i]=I("fusedOps",n,e,t),a=s==="biasadd",o=i==="prelu",l=I("numArgs",n,e,t),u=I("leakyreluAlpha",n,e,t);if(a){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=I("args",n,e,t);return[r.fused.matMul({a:I("a",n,e,t),b:I("b",n,e,t),transposeA:I("transposeA",n,e,t),transposeB:I("transposeB",n,e,t),bias:c,activation:i,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(I("a",n,e,t),I("numLower",n,e,t),I("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hIe=(n,e,t,r=cr)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(I("x",n,e,t),I("axis",n,e,t),I("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(I("x",n,e,t),I("radius",n,e,t),I("bias",n,e,t),I("alpha",n,e,t),I("beta",n,e,t))];case"Softmax":return[r.softmax(I("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pIe=(n,e,t,r=cr)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:i}=r.raggedGather(I("paramsNestedSplits",n,e,t),I("paramsDenseValues",n,e,t),I("indices",n,e,t),I("outputRaggedRank",n,e,t));return s.concat(i)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:i}=r.raggedRange(I("starts",n,e,t),I("limits",n,e,t),I("splits",n,e,t));return[s,i]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(I("shape",n,e,t),I("values",n,e,t),I("defaultValue",n,e,t),I("rowPartitionTensors",n,e,t),I("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fIe=(n,e,t,r=cr)=>{switch(n.op){case"Max":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[r.max(I("x",n,e,t),o,l)]}case"Mean":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[r.mean(I("x",n,e,t),o,l)]}case"Min":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[r.min(I("x",n,e,t),o,l)]}case"Sum":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[r.sum(I("x",n,e,t),o,l)]}case"All":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[r.all(I("x",n,e,t),o,l)]}case"Any":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[r.any(I("x",n,e,t),o,l)]}case"ArgMax":{const o=I("axis",n,e,t);return[r.argMax(I("x",n,e,t),o)]}case"ArgMin":{const o=I("axis",n,e,t);return[r.argMin(I("x",n,e,t),o)]}case"Prod":{const o=I("axis",n,e,t),l=I("keepDims",n,e,t);return[r.prod(I("x",n,e,t),o,l)]}case"Cumprod":{const o=I("axis",n,e,t),l=I("exclusive",n,e,t),u=I("reverse",n,e,t);return[r.cumprod(I("x",n,e,t),o,l,u)]}case"Cumsum":{const o=I("axis",n,e,t),l=I("exclusive",n,e,t),u=I("reverse",n,e,t);return[r.cumsum(I("x",n,e,t),o,l,u)]}case"Bincount":const s=I("x",n,e,t),i=I("weights",n,e,t),a=I("size",n,e,t);return[r.bincount(s,i,a)];case"DenseBincount":{const o=I("x",n,e,t),l=I("weights",n,e,t),u=I("size",n,e,t),c=I("binaryOutput",n,e,t);return[r.denseBincount(o,l,u,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mIe=(n,e,t,r=cr)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=I("n",n,e,t),i=I("axis",n,e,t);let a=I("tensors",n,e,t);return a=a.slice(0,s),[r.concat(a,i)]}case"Gather":{const s=I("x",n,e,t),i=I("indices",n,e,t);return[r.gather(s,r.cast(i,"int32"),0)]}case"GatherV2":{const s=I("axis",n,e,t),i=I("batchDims",n,e,t),a=I("x",n,e,t),o=I("indices",n,e,t);return[r.gather(a,r.cast(o,"int32"),s,i)]}case"Reverse":{const s=I("dims",n,e,t),i=[];for(let o=0;o<s.length;o++)s[o]&&i.push(o);const a=I("x",n,e,t);return[r.reverse(a,i)]}case"ReverseV2":{const s=I("axis",n,e,t),i=I("x",n,e,t);return[r.reverse(i,s)]}case"Slice":{const s=I("begin",n,e,t),i=I("size",n,e,t);return[r.slice(I("x",n,e,t),s,i)]}case"StridedSlice":{const s=I("begin",n,e,t),i=I("end",n,e,t),a=I("strides",n,e,t),o=I("beginMask",n,e,t),l=I("endMask",n,e,t),u=I("ellipsisMask",n,e,t),c=I("newAxisMask",n,e,t),d=I("shrinkAxisMask",n,e,t),h=I("x",n,e,t);return[r.stridedSlice(h,s,i,a,o,l,u,c,d)]}case"Pack":return j(()=>{const s=I("axis",n,e,t),i=I("tensors",n,e,t),a=i[0].shape,o=r.squeeze(i[0]).shape,l=i.map(u=>{const c=ht(u.shape,a);if(!c&&!ht(r.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return c?u:r.reshape(u,a)});return[r.stack(l,s)]});case"Unpack":{const s=I("axis",n,e,t),i=I("tensor",n,e,t);return r.unstack(i,s)}case"Tile":{const s=I("reps",n,e,t);return[r.tile(I("x",n,e,t),s)]}case"Split":case"SplitV":{const s=I("axis",n,e,t),i=I("numOrSizeSplits",n,e,t),a=I("x",n,e,t);return r.split(a,i,s)}case"ScatterNd":{const s=I("indices",n,e,t),i=I("values",n,e,t),a=I("shape",n,e,t);return[r.scatterND(s,i,a)]}case"GatherNd":{const s=I("x",n,e,t),i=I("indices",n,e,t);return[r.gatherND(s,i)]}case"SparseToDense":{const s=I("sparseIndices",n,e,t),i=I("outputShape",n,e,t),a=I("sparseValues",n,e,t),o=I("defaultValue",n,e,t);return[r.sparseToDense(s,a,i,a.dtype===o.dtype?o:r.cast(o,a.dtype))]}case"TensorScatterUpdate":{const s=I("indices",n,e,t),i=I("values",n,e,t),a=I("tensor",n,e,t);return[r.tensorScatterUpdate(a,s,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gIe=(n,e,t,r=cr)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:i,emptyRowIndicator:a,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(I("indices",n,e,t),I("values",n,e,t),I("denseShape",n,e,t),I("defaultValue",n,e,t));return[s,i,a,o]}case"SparseReshape":{const{outputIndices:s,outputShape:i}=r.sparse.sparseReshape(I("inputIndices",n,e,t),I("inputShape",n,e,t),I("newShape",n,e,t));return[s,i]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yIe=(n,e,t,r=cr)=>{switch(n.op){case"FFT":return[r.fft(I("x",n,e,t))];case"IFFT":return[r.ifft(I("x",n,e,t))];case"RFFT":return[r.rfft(I("x",n,e,t))];case"IRFFT":return[r.irfft(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bIe=(n,e,t,r=cr)=>{switch(n.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(I("input",n,e,t),I("pattern",n,e,t),I("rewrite",n,e,t),I("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:s,nGramsSplits:i}=r.string.stringNGrams(I("data",n,e,t),I("dataSplits",n,e,t),I("separator",n,e,t),I("nGramWidths",n,e,t),I("leftPad",n,e,t),I("rightPad",n,e,t),I("padWidth",n,e,t),I("preserveShortSequences",n,e,t));return[s,i]}case"StringSplit":{const{indices:s,values:i,shape:a}=r.string.stringSplit(I("input",n,e,t),I("delimiter",n,e,t),I("skipEmpty",n,e,t));return[s,i,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(I("input",n,e,t),I("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xIe=(n,e,t,r=cr)=>{switch(n.op){case"Cast":return[r.cast(I("x",n,e,t),I("dtype",n,e,t))];case"ExpandDims":{const s=I("axis",n,e,t);return[r.expandDims(I("x",n,e,t),s)]}case"Squeeze":{const s=I("axis",n,e,t);return[r.squeeze(I("x",n,e,t),s)]}case"Reshape":return[r.reshape(I("x",n,e,t),I("shape",n,e,t))];case"EnsureShape":return[r.ensureShape(I("x",n,e,t),I("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(I("x",n,e,t),I("padding",n,e,t),I("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(I("x",n,e,t),I("padding",n,e,t),I("constantValue",n,e,t))];case"SpaceToBatchND":{const s=I("blockShape",n,e,t),i=I("paddings",n,e,t);return[r.spaceToBatchND(I("x",n,e,t),s,i)]}case"BatchToSpaceND":{const s=I("blockShape",n,e,t),i=I("crops",n,e,t);return[r.batchToSpaceND(I("x",n,e,t),s,i)]}case"DepthToSpace":{const s=I("blockSize",n,e,t),i=I("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(I("x",n,e,t),s,i)]}case"BroadcastTo":return[r.broadcastTo(I("x",n,e,t),I("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(I("s0",n,e,t),I("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n,e,t,r,s=j){const i=((a,o,l)=>{switch(a.category){case"arithmetic":return s(()=>KTe(a,o,l));case"basic_math":return s(()=>YTe(a,o,l));case"control":return tIe(a,o,l);case"convolution":return s(()=>nIe(a,o,l));case"creation":return s(()=>rIe(a,o,l));case"dynamic":return sIe(a,o,l);case"evaluation":return s(()=>iIe(a,o,l));case"image":return s(()=>uIe(a,o,l));case"graph":return s(()=>aIe(a,o,l));case"logical":return s(()=>cIe(a,o,l));case"matrices":return s(()=>dIe(a,o,l));case"normalization":return s(()=>hIe(a,o,l));case"ragged":return s(()=>pIe(a,o,l));case"reduction":return s(()=>fIe(a,o,l));case"slice_join":return s(()=>mIe(a,o,l));case"sparse":return s(()=>gIe(a,o,l));case"spectral":return s(()=>yIe(a,o,l));case"string":return s(()=>bIe(a,o,l));case"transformation":return s(()=>xIe(a,o,l));case"hash_table":return lIe(a,o,l,r);case"custom":const u=MW(a.op);if(u&&u.customExecutor)return u.customExecutor(new HTe(a,o,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Pa(i)?i.then(a=>[].concat(a)):[].concat(i)}class wR{constructor(e={},t={},r={},s={},i){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n,e,t,r){const s=new Set,i=[];let a=null,o=null;const l=new Set,u=new Set(Object.keys(n).map(h=>ts(h)[0]));r=r||[];const c=new Set(r.map(h=>ts(h.name)[0])),d=[...e];for(;d.length>0;){const h=d.pop();if((Rl(h)||_Ie(h)||MIe(h))&&a==null&&(a=h,o=a.children.map(p=>p.name).filter(p=>s.has(p))),s.add(h.name),t[h.name]==null&&!u.has(h.name)&&!c.has(h.name)){if(h.inputs.length===0){i.push(h.name);continue}h.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),d.push(p))})}}return{inputs:n,outputs:e,usedNodes:s,missingInputs:i,dynamicNode:a,syncInputs:o}}function vIe(n,e){const{usedNodes:t,inputs:r}=e,s=Object.keys(r).map(m=>ts(m)[0]).map(m=>n.nodes[m]),i=n.initNodes||[],a=m=>t.has(typeof m=="string"?m:m.name);function o(m){return[...new Map(m.map(y=>[y.name,y])).values()]}const l=o([...s,...n.weights,...i]).filter(a),u=o([...l,...Object.values(n.nodes)]).filter(a),c=new Map(u.map(m=>[m.name,m])),d={};for(const m of u){d[m.name]=d[m.name]||0;for(const y of m.children)a(y)||(d[y.name]=Number.POSITIVE_INFINITY),d[y.name]=(d[y.name]||0)+1}const h=Object.entries(d).filter(([,m])=>m===0).map(([m])=>m),p=[...h];for(;h.length>0;){const m=h.pop(),y=c.get(m);for(const b of y.children.filter(a))--d[b.name]===0&&(p.push(b.name),h.push(b.name))}const g=p.map(m=>c.get(m)),f=wIe(g,l);return SIe(f,l),f}function wIe(n,e){const t=new Map(n.map(i=>[i.name,i])),r=e.map(i=>i.name),s=new Set(r);for(;r.length>0;){const i=r.pop(),a=t.get(i);for(const o of a.children)!t.has(o.name)||s.has(o.name)||(s.add(o.name),r.push(o.name))}return n.filter(i=>s.has(i.name))}class wy extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function SIe(n,e){const t=new Map(n.map((o,l)=>[o.name,l])),r=new Set(e.map(o=>o.name)),s=o=>r.has(typeof o=="string"?o:o.name),i=new Set(n.map(o=>o.name)),a=o=>i.has(typeof o=="string"?o:o.name);for(const o of n){for(const l of o.children.filter(a)){if(!t.has(l.name))throw new wy(`Child ${l.name} of node ${o.name} is unreachable.`);if(t.get(o.name)>t.get(l.name))throw new wy(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!s(o))for(const l of o.inputs){if(!t.has(l.name))throw new wy(`Input ${l.name} of node ${o.name} is unreachable.`);if(t.get(l.name)>t.get(o.name))throw new wy(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function TIe(n){const e=new Map(n.map((o,l)=>[o.name,l])),t=Number.MAX_SAFE_INTEGER,r=n.map((o,l)=>Rl(o)?t:l),s=o=>r[e.get(o.name)]??-1,i=n.map((o,l)=>o.children.map(s).reduce((u,c)=>Math.max(u,c),r[l])),a=new Map;for(let o=0;o<n.length;++o){const l=i[o];if(l===t)continue;const u=n[o],c=n[l];a.has(c.name)||a.set(c.name,[]),a.get(c.name).push(u)}return a}const IIe=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),kIe=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),CIe=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Rl(n){return IIe.has(n.op)}function _Ie(n){return kIe.has(n.op)}function MIe(n){return CIe.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J0{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new J0(e.functions[r],this)})}getCompilationKey(e,t){const r=e.map(i=>i.name).sort(),s=t.map(i=>i.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const r=SR(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:i,syncInputs:a}=r;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const u=t.map(d=>d.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${s}]`)}const o=vIe(this.graph,r),l=TIe(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return un(t),t}cloneTensorList(e){return e?e.map(t=>this.cloneAndKeepTensor(t)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=r.map(h=>this.graph.nodes[ts(h)[0]]),i=t.map(h=>ts(h)[0]),a=new Set(i);let o=i.map(h=>this.graph.nodes[h]);o.length===0&&(o=this._outputs);const l=this.getCompilationKey(s,o);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=q().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const c={},d={};return j(()=>{const h=new wR(this.weightMap,c,d,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(y=>{const[b,x]=ts(y,h),v=[];v[x]=e[y],p[b]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(v))});const g=this.getFrozenTensorIds(p),{orderedNodes:f,nodeLiveUntilMap:m}=u;for(const y of f){if(p[y.name])continue;const b=vR(y,p,h,this._resourceManager);if(Pa(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);p[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,p,h,g,a,m.get(y.name))}return this.parent==null&&h.dispose(g),t.map(y=>er(y,p,h))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,r,s,i,a,o){if(!(Rl(t)||a.has(e))){for(const l of r[e])l!=null&&(o[l.id]=(o[l.id]||0)+t.children.length);for(const l of t.inputs){if(Rl(l))continue;const u=mR(l.name,r,s);if(u!=null)for(const c of u){if(!c||c.kept||i.has(c.id))continue;const d=o[c.id];d===1?(c.dispose(),delete o[c.id]):d!=null&&o[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,s,i,a){function o(l){return Rl(l)||i.has(l.name)}if(!(Rl(e)||a==null))for(const l of a){if(o(l))continue;const u=mR(l.name,t,r);for(const c of u)!c||c.kept||s.has(c.id)||c.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,s={},i={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=q().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const a=new wR(this.weightMap,s,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,r),l=t.map(h=>er(h,o,a)),u=l.map(h=>h.id),c=Object.keys(e).map(h=>e[h].id),d=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach(h=>{h.forEach(p=>{p&&!p.isDisposed&&!d.has(p.id)&&p.dispose()})}),this.parent==null&&a.dispose(d),l}async executeFunctionAsync(e,t,r){const s=e.reduce((i,a,o)=>(i[this.inputs[o].name]=a,i),{});return this._executeAsync(s,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,s){const i=Object.keys(e),a=i.map(v=>this.graph.nodes[ts(v)[0]]),o=r.map(v=>ts(v)[0]),l=new Set(o);let u=o.map(v=>this.graph.nodes[v]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:d,dynamicNode:h,syncInputs:p}=SR(e,u,this.weightMap,this._initNodes),g=[...a,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(v=>{const[w,T]=ts(v),k=[];k[T]=e[v],f[w]=k});const m={},y=this.getFrozenTensorIds(f),b={};for(;g.length>0;){const v=this.processStack(a,g,t,f,b,y,l,m,c);await Promise.all(v)}h==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=u.filter(v=>!Rl(v)&&!er(v.name,f,t)).map(v=>v.name);if(x.length>0){let v="";throw h!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${i}]. Consider providing the following inputs: [${d}]. ${v}`)}return f}processStack(e,t,r,s,i,a,o,l,u){const c=[];for(;t.length>0;){const d=t.pop();r.currentContext=d.contexts;let h="";if(d.node.op==="Enter"&&I("isConstant",d.node,s,r)&&([h]=wa(d.node.name,r)),s[d.node.name]==null){const p=vR(d.node,s,r,this._resourceManager);h||([h]=wa(d.node.name,r));const g=r.currentContext;Pa(p)?c.push(p.then(f=>(s[h]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(f)),r.currentContext=g,this.checkTensorForDisposal(h,d.node,s,r,a,o,l),this.processChildNodes(d.node,t,r,s,i,u),f))):(s[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,d.node,s,r,a,o,l),this.processChildNodes(d.node,t,r,s,i,u))}else this.processChildNodes(d.node,t,r,s,i,u)}return c}processChildNodes(e,t,r,s,i,a){e.children.forEach(o=>{const[l]=wa(o.name,r);i[l]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!er(u,s,r))&&(i[l]=!0,t.push({contexts:r.currentContext,node:o})):o.inputNames.every(u=>!!er(u,s,r))&&(i[l]=!0,t.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[s]=ts(t),i=this.graph.nodes[s];if(i.attrParams.shape&&i.attrParams.shape.value){const a=i.attrParams.shape.value,o=a.length===r.shape.length&&r.shape.every((l,u)=>a[u]===-1||a[u]===l);M(o,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&M(r.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;const s={};for(const i in e){const a=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[i];a!=null?s[a.name]=e[i]:s[i]=e[i]}return s}checkInputs(e){const t=Object.keys(e).filter(r=>{const[s]=ts(r);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,s;const i=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[t];return i!=null?i.name:t},{})}checkOutputs(e){e.forEach(t=>{const[r]=ts(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class NIe{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EIe="?tfjs-format=file",RIe="model.json";class H_{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=W_){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new NIe}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Pa(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await jz(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const r=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const i=this.artifacts.userDefinedMetadata;i.signature!=null&&(s=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=s,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new J0(gR.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const i=gR.Instance.transformGraph(e.modelInitializer);this.initializer=new J0(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof xt?[e]:e,r={};return t.forEach((s,i)=>r[this.structuredOutputKeys[i]]=s),r}return e}predict(e,t){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof xt)&&!Array.isArray(e)){const i=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(i!=null)for(const a in i){const o=i[a];o.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((i,a)=>{var o,l,u;const c=(u=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[a])===null||u===void 0?void 0:u.resourceId;return c!=null?i[a]=this.resourceIdToCapturedInput[c]:i[a]=e[s++],i},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,r=Object.keys(t);for(let s=0;s<r.length;s++){const i=r[s],a=t[i];this.resourceIdToCapturedInput[a.resourceId]=e[s]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Je(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function LIe(n,e={},t=W_){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=zIe(n));const r=new H_(n,e,t);return await r.load(),r}function AIe(n){if(n==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(n instanceof Array){const[r,s]=n;if(!r)throw new Error("modelJSON must be the first element of the array");if(!s||!(s instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");const i=M0(r.weightsManifest),a=nI(r,i,s);e=j0(a)}else if("load"in n)e=n;else if("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n)e=j0(n);else throw new Error("Unknown model format");const t=new H_(e);return t.load(),t}function zIe(n){return n.endsWith("/")||(n=n+"/"),`${n}${RIe}${EIe}`}/** @license See the LICENSE file. */const RW="4.16.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class LW extends Ch{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const Sy='"',ip=Symbol("out"),TR=Symbol("field"),Ty=Symbol("quote"),zw=Symbol("quoteafterquote"),IR=Symbol("quoteinquote");class AW extends Ch{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&M(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((s,i)=>(s[i]=s[i]+1||1,s),{}),r=Object.keys(t).filter(s=>t[s]>1);if(M(r.length===0,()=>"Duplicate column names found: "+r.toString()),this.columnConfigs){for(const s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");const t=e.value;return this.parseRow(t,!1)}else return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new LW(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(M(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){const t=this.parseRow(e),r={},s={};for(let i=0;i<this.fullColumnNames.length;i++){const a=this.fullColumnNames[i],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){const l=t[i];let u=null;if(l==="")if(o&&o.default!==void 0)u=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const c=Number(l);if(isNaN(c))o&&o.dtype==="bool"?u=this.getBoolean(l):u=l;else if(!o||!o.dtype)u=c;else switch(o.dtype){case"float32":u=c;break;case"int32":u=Math.floor(c);break;case"bool":u=this.getBoolean(l);break;default:u=c}}o&&o.isLabel?s[a]=u:r[a]=u}}return Object.keys(s).length===0?r:{xs:r,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){const r=[];let s=0;const i=e.length;let a=ip;for(let o=0;o<i;o++)switch(a){case ip:switch(e.charAt(o)){case Sy:s=o+1,a=Ty;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;r.push(""),a=ip;break;default:a=TR,s=o;break}break;case TR:switch(e.charAt(o)){case this.delimiter:r.push(e.substring(s,o)),a=ip,s=o+1;break}break;case Ty:switch(e.charAt(o)){case Sy:a=zw;break}break;case zw:switch(e.charAt(o)){case this.delimiter:r.push(e.substring(s,o-1)),a=ip,s=o+1;break;case Sy:a=Ty;break;default:a=IR;break}break;case IR:switch(e.charAt(o)){case Sy:a=Ty;break}break}if(a===zw?r.push(e.substring(s,i-1)):r.push(e.substring(s)),t&&r.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${r}`);return r}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class K_ extends Bn{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!q().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new K_(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const r=await this.getAudioData();if(this.includeSpectrogram){const s=this.flattenQueue(r.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const s=this.flattenQueue(r.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let r=0;return new Promise(s=>{const i=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(i),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,r=new Float32Array(e.length*t);return e.forEach((s,i)=>r.set(s,i*t)),r}getTensorFromAudioDataArray(e,t){const r=new Float32Array(ie(t));return r.set(e,r.length-e.length),Kt(r,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Y_ extends Bn{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=nr([0],"int32"),this.webcamConfig.centerCrop){const r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,i=(1-r)/2,a=(1-s)/2,o=i+r,l=s+a;this.cropBox=Ao([a,i,l,o],[1,4])}else this.cropBox=Ao([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!q().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const r=new Y_(e,t);return await r.start(),r}async start(){this.webcamConfig.facingMode&&M(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=mk(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return j(()=>{const t=Jn(Te(e,"float32"),0);let r;r=js.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=r.shape;return H(r,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class zW{}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class DW extends Bn{split(e){return new DIe(this,e)}}class DIe extends DW{constructor(e,t){super(),this.upstream=e,this.impl=new PIe(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class PIe extends h_{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const r of t.slice(0,-1))this.outputQueue.push(r);return this.carryover=t[t.length-1],!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class $Ie extends Bn{decodeUTF8(){return new FIe(this)}}class FIe extends DW{constructor(e){super(),this.upstream=e,this.impl=new GIe(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class GIe extends h_{constructor(e){if(super(),this.upstream=e,q().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=require("string_decoder");this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t;if(e.done)return!1;t=e.value;let r;return q().get("IS_BROWSER")?r=this.decoder.decode(t,{stream:!0}):r=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(r),!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class PW extends $Ie{constructor(e,t={}){super(),this.file=e,this.options=t,M(e instanceof Uint8Array||(q().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{const r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,r)));else{const s=new FileReader;s.onload=a=>{let o=s.result;if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),!(o instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(o)},s.onabort=a=>t(new Error("Aborted")),s.onerror=a=>t(new Error(a.type));const i=this.file.slice(this.offset,r);s.readAsArrayBuffer(i)}this.offset=r}),done:!1}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function OIe(n,e={},t){let r,s;typeof n=="string"?r=n:(r=n.url,s=WIe(n));const i=await Oz(r,s);if(i.ok){const a=new Uint8Array(await i.arrayBuffer());return new PW(a,e)}else throw new Error(i.statusText)}const WIe=n=>({method:n.method,headers:n.headers,body:n.body,mode:n.mode,credentials:n.credentials,cache:n.cache,redirect:n.redirect,referrer:n.referrer,integrity:n.integrity});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function $W(n){return typeof n=="string"&&n.slice(0,7)==="file://"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class FW extends zW{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if($W(this.input)&&q().get("IS_NODE")){const e=require("fs");this.input=e.readFileSync(this.input.slice(7))}return new PW(this.input,this.options)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class GW extends zW{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return $W(this.url)?new FW(this.url,this.fileOptions).iterator():OIe(this.url,this.fileOptions)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function VIe(n,e={}){return new AW(new GW(n),e)}function BIe(n){const e=d_(n);return es(async()=>e)}function XIe(n){return es(async()=>{const e=await n();return d_(()=>e.next())})}async function UIe(n,e){return Y_.create(n,e)}async function ZIe(n){return K_.create(n)}/** @license See the LICENSE file. */const OW="4.16.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HIe=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset:AW,Dataset:Ch,FileDataSource:FW,TextLineDataset:LW,URLDataSource:GW,array:Yne,csv:VIe,func:BIe,generator:XIe,microphone:ZIe,version_data:OW,webcam:UIe,zip:jne},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const WW="4.16.0";/** @license See the LICENSE file. */const VW="4.16.0";/** @license See the LICENSE file. */const KIe="4.16.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YIe={"tfjs-core":vW,"tfjs-backend-cpu":WW,"tfjs-backend-webgl":VW,"tfjs-data":OW,"tfjs-layers":Cv,"tfjs-converter":RW,tfjs:KIe},jIe=Object.freeze(Object.defineProperty({__proto__:null,Abs:Lf,Acos:bd,Acosh:xd,AdadeltaOptimizer:ok,AdagradOptimizer:lk,AdamOptimizer:uk,AdamaxOptimizer:ck,Add:Mu,AddN:Af,All:Sb,Any:Tb,ArgMax:zf,ArgMin:Df,Asin:vd,Asinh:wd,Atan:Sd,Atan2:Id,Atanh:Td,AvgPool:Pf,AvgPool3D:$f,AvgPool3DGrad:kb,AvgPoolGrad:Ib,BatchMatMul:Ff,BatchToSpaceND:Gf,Bincount:Cb,BitwiseAnd:Of,BroadcastArgs:_b,BroadcastTo:_z,Callback:CW,CallbackList:GP,Cast:kd,Ceil:Cd,ClipByValue:_d,Complex:Mb,ComplexAbs:Wf,Concat:Vf,Conv2D:Bf,Conv2DBackpropFilter:Nb,Conv2DBackpropInput:Xf,Conv3D:Uf,Conv3DBackpropFilterV2:Eb,Conv3DBackpropInputV2:Rb,Cos:Md,Cosh:Nd,CropAndResize:Ab,Cumprod:Lb,Cumsum:Zf,CustomCallback:WP,DataStorage:WT,DenseBincount:zb,DepthToSpace:Db,DepthwiseConv2dNative:Hf,DepthwiseConv2dNativeBackpropFilter:Pb,DepthwiseConv2dNativeBackpropInput:$b,Diag:Fb,Dilation2D:Kf,Dilation2DBackpropFilter:T0,Dilation2DBackpropInput:S0,Draw:Gb,get ENV(){return ZT},EarlyStopping:_W,Einsum:Ob,Elu:Rd,EluGrad:Wb,Environment:kz,Equal:Yf,Erf:Ld,Exp:Ad,ExpandDims:jf,Expm1:zd,FFT:Vb,Fill:Bb,FlipLeftRight:Xb,Floor:Dd,FloorDiv:Pd,FromPixels:I0,FusedBatchNorm:Qf,FusedConv2D:af,FusedDepthwiseConv2D:of,GPGPUContext:Xy,GatherNd:Ub,GatherV2:Jf,GraphModel:H_,Greater:qf,GreaterEqual:$d,History:OP,IFFT:Zb,Identity:Fd,Imag:Hb,InputSpec:Tn,IsFinite:Gd,IsInf:Od,IsNan:Wd,KernelBackend:xb,LRN:am,LRNGrad:Yb,LayerVariable:DP,LayersModel:Ra,LeakyRelu:em,Less:tm,LessEqual:nm,LinSpace:Kb,Log:Vd,Log1p:Bd,LogSoftmax:Mz,LogicalAnd:rm,LogicalNot:sm,LogicalOr:im,LogicalXor:M9,LowerBound:N9,MathBackendCPU:fg,MathBackendWebGL:bg,MatrixBandPart:E9,Max:om,MaxPool:lm,MaxPool3D:um,MaxPool3DGrad:Qb,MaxPoolGrad:jb,MaxPoolWithArgmax:Jb,Maximum:Xd,Mean:cm,Min:dm,Minimum:Ud,MirrorPad:hm,Mod:Zd,MomentumOptimizer:dk,Multinomial:qb,Multiply:Hd,Neg:pm,NonMaxSuppressionV3:ex,NonMaxSuppressionV4:tx,NonMaxSuppressionV5:nx,NotEqual:fm,OP_SCOPE_SUFFIX:JT,OneHot:gm,OnesLike:mm,Optimizer:qa,OptimizerConstructors:HD,Pack:ym,PadV2:bm,Pool:R9,Pow:Kd,Prelu:xm,Prod:vm,RMSPropOptimizer:hk,RNN:Ri,RaggedGather:rx,RaggedRange:sx,RaggedTensorToTensor:ix,Range:ax,get Rank(){return WS},Real:ox,RealDiv:Ed,Reciprocal:Yd,get Reduction(){return Tr},Relu:jd,Relu6:Qd,Reshape:wm,ResizeBilinear:Tm,ResizeBilinearGrad:ux,ResizeNearestNeighbor:Sm,ResizeNearestNeighborGrad:lx,Reverse:Im,RotateWithOffset:Cx,Round:Jd,Rsqrt:qd,SGDOptimizer:lv,ScatterNd:cx,SearchSorted:hx,Select:km,Selu:eh,Sequential:_v,Sigmoid:sh,Sign:rh,Sin:th,Sinh:nh,Slice:Cm,Softmax:Em,Softplus:ih,SpaceToBatchND:Mm,SparseFillEmptyRows:px,SparseReshape:fx,SparseSegmentMean:mx,SparseSegmentSum:gx,SparseToDense:yx,SplitV:Nm,Sqrt:ah,Square:bx,SquaredDifference:oh,StaticRegexReplace:Rm,Step:hh,StridedSlice:xx,StringNGrams:vx,StringSplit:wx,StringToHashBucketFast:Sx,Sub:lh,Sum:_m,SymbolicTensor:ki,Tan:uh,Tanh:ch,Tensor:xt,TensorBuffer:In,TensorScatterUpdate:dx,Tile:dh,TopK:Tx,Transform:Ix,Transpose:Xl,Unique:kx,Unpack:Lm,UnsortedSegmentSum:Am,UpperBound:L9,Variable:cf,ZerosLike:zm,_FusedMatMul:sf,abs:vn,acos:iI,acosh:aI,add:me,addN:EO,all:Ex,any:hf,argMax:lu,argMin:oI,asin:lI,asinh:uI,atan:cI,atan2:dI,atanh:hI,avgPool:Fm,avgPool3d:fI,backend:Ki,backend_util:bP,basicLSTMCell:RO,batchNorm:ph,batchNorm2d:mI,batchNorm3d:gI,batchNorm4d:yI,batchToSpaceND:Gm,bincount:bI,bitwiseAnd:LO,booleanMaskAsync:hW,broadcastArgs:AO,broadcastTo:Ul,broadcast_util:oj,browser:vJ,buffer:rt,callbacks:iTe,cast:Te,ceil:xI,clipByValue:Xr,clone:na,complex:Ga,concat:pn,concat1d:vI,concat2d:wI,concat3d:SI,concat4d:TI,constraints:tSe,conv1d:Rx,conv2d:Oa,conv2dTranspose:Lx,conv3d:kI,conv3dTranspose:CI,copyRegisteredKernels:P9,cos:Om,cosh:Ax,cosineWindow:ev,cumprod:mf,cumsum:zx,customGrad:oa,data:HIe,denseBincount:N0,deprecationWarn:g6,depthToSpace:_I,depthwiseConv2d:fh,deregisterOp:oTe,device_util:c6,diag:zO,dilation2d:MI,disableDeprecationWarnings:m6,dispose:Je,disposeVariables:y6,div:Fe,divNoNan:NI,dot:EI,dropout:nk,einsum:_l,elu:mh,enableDebugMode:f6,enableProdMode:p6,enclosingPowerOfTwo:rk,engine:Dt,ensureShape:DO,env:q,equal:us,erf:RI,euclideanNorm:AI,exp:Ur,expandDims:Jn,expm1:zI,eye:Dx,fft:qm,fill:Ru,findBackend:T6,findBackendFactory:I6,floor:yh,floorDiv:Nx,forceHalfFloat:XG,fused:bW,gather:bh,gatherND:gW,gather_util:wJ,getBackend:Kz,getGradient:FS,getKernel:uf,getKernelsForBackend:k0,gpgpu_util:Dce,grad:Bj,grads:Xj,greater:Nr,greaterEqual:ja,ifft:id,imag:Wm,image:js,inTopKAsync:yW,initializers:ySe,input:wW,io:W_,irfft:Kx,isFinite:DI,isInf:PI,isNaN:$I,keep:un,kernel_impls:jwe,layers:P2e,leakyRelu:Vm,less:td,lessEqual:il,linalg:ak,linspace:PO,loadGraphModel:LIe,loadGraphModelSync:AIe,loadLayersModel:one,localResponseNormalization:FI,log:cs,log1p:Bm,logSigmoid:GI,logSoftmax:$x,logSumExp:Xm,logicalAnd:ei,logicalNot:Um,logicalOr:Fx,logicalXor:OI,losses:MD,lowerBound:$O,matMul:ot,math:Ywe,max:Es,maxPool:Zm,maxPool3d:WI,maxPoolWithArgmax:FO,maximum:ca,mean:en,memory:_0,meshgrid:GO,metrics:J2e,min:ed,minimum:Xo,mirrorPad:VI,mod:BI,model:bSe,models:q2e,moments:Hm,movingAverage:pW,mul:Z,multiRNNCell:OO,multinomial:WO,neg:Gt,nextFrame:tg,norm:gh,notEqual:hu,oneHot:nd,ones:Gr,onesLike:ds,op:V,outerProduct:VO,pad:Qa,pad1d:BO,pad2d:XO,pad3d:UO,pad4d:ZO,pool:XI,pow:Wa,prelu:Ym,print:sI,prod:UI,profile:b6,raggedGather:HO,raggedRange:KO,raggedTensorToTensor:YO,rand:jO,randomGamma:qO,randomNormal:Gx,randomStandardNormal:eW,randomUniform:al,randomUniformInt:tW,range:pu,ready:w6,real:rd,reciprocal:HI,registerBackend:qT,registerCallbackConstructor:vSe,registerGradient:Nz,registerKernel:jr,registerOp:aTe,regularizers:rTe,relu:Ni,relu6:Ox,removeBackend:S6,reshape:H,reverse:Ls,reverse1d:nW,reverse2d:rW,reverse3d:sW,reverse4d:iW,rfft:eg,round:Wx,rsqrt:Vx,scalar:Ve,scatterND:fW,scatter_util:m7,searchSorted:Vv,selu:Bx,separableConv2d:Xx,sequential:xSe,serialization:iJ,setBackend:v6,setPlatform:k6,setWebGLContext:HF,setdiff1dAsync:aW,shared:EF,sigmoid:xi,sign:KI,signal:_D,sin:Ux,sinh:Zx,slice:gt,slice1d:jm,slice2d:Hx,slice3d:Qm,slice4d:sd,slice_util:ZD,softmax:Jm,softplus:Lu,spaceToBatchND:Km,sparse:ND,sparseToDense:mW,spectral:CD,split:Wr,sqrt:ir,square:Lt,squaredDifference:Yx,squeeze:ol,stack:fr,step:zu,stridedSlice:YI,string:ED,sub:Ee,sum:Ae,sumOutType:_x,tan:jI,tanh:cu,tensor:Kt,tensor1d:nr,tensor2d:Ao,tensor3d:QI,tensor4d:oW,tensor5d:lW,tensor6d:uW,tensorScatterUpdate:cW,tensor_util:i6,test_util:gwe,tidy:j,tile:Ts,time:x6,topk:qI,train:Il,transpose:ft,truncatedNormal:Qx,unique:ek,unregisterGradient:D9,unregisterKernel:z9,unsortedSegmentSum:Jx,unstack:As,upcastType:Vr,upperBound:dW,util:H9,valueAndGrad:Uj,valueAndGrads:Zj,variable:tk,variableGrads:dD,version:YIe,version_converter:RW,version_core:vW,version_cpu:WW,version_layers:Cv,version_webgl:VW,webgl:ehe,webgl_util:Wue,where:Gn,whereAsync:O_,zeros:Sn,zerosLike:yt},Symbol.toStringTag,{value:"Module"})),BW=new Bt;BW.compose(new te,new qo,new te(.001,.001,.001));const QIe=new Bt().set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1);class XW{constructor({container:e,imageTargetSrc:t,maxTrack:r,uiLoading:s="yes",uiScanning:i="yes",uiError:a="yes",filterMinCF:o=null,filterBeta:l=null,warmupTolerance:u=null,missTolerance:c=null,userDeviceId:d=null,environmentDeviceId:h=null}){this.container=e,this.imageTargetSrc=t,this.maxTrack=r,this.filterMinCF=o,this.filterBeta=l,this.warmupTolerance=u,this.missTolerance=c,this.ui=new p9({uiLoading:s,uiScanning:i,uiError:a}),this.userDeviceId=d,this.environmentDeviceId=h,this.shouldFaceUser=!1,this.scene=new vE,this.cssScene=new vE,this.renderer=new DT({antialias:!0,alpha:!0}),this.cssRenderer=new W1e({antialias:!0}),this.renderer.outputEncoding=Wt,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new Us,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo(),this.video.srcObject.getTracks().forEach(function(e){e.stop()}),this.video.remove()}switchCamera(){this.shouldFaceUser=!this.shouldFaceUser,this.stop(),this.start()}addAnchor(e){const t=new Ic;t.visible=!1,t.matrixAutoUpdate=!1;const r={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!1,visible:!1};return this.anchors.push(r),this.scene.add(t),r}addCSSAnchor(e){const t=new Ic;t.visible=!1,t.matrixAutoUpdate=!1;const r={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!0,visible:!1};return this.anchors.push(r),this.cssScene.add(t),r}_startVideo(){return new Promise((e,t)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){this.ui.showCompatibility(),t();return}const r={audio:!1,video:{}};this.shouldFaceUser?this.userDeviceId?r.video.deviceId={exact:this.userDeviceId}:r.video.facingMode="user":this.environmentDeviceId?r.video.deviceId={exact:this.environmentDeviceId}:r.video.facingMode="environment",navigator.mediaDevices.getUserMedia(r).then(s=>{this.video.addEventListener("loadedmetadata",()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),e()}),this.video.srcObject=s}).catch(s=>{console.log("getUserMedia error",s),t()})})}_startAR(){return new Promise(async(e,t)=>{const r=this.video;this.container,this.controller=new F1e({inputWidth:r.videoWidth,inputHeight:r.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:i=>{if(i.type==="updateMatrix"){const{targetIndex:a,worldMatrix:o}=i;for(let l=0;l<this.anchors.length;l++)if(this.anchors[l].targetIndex===a){if(this.anchors[l].css?this.anchors[l].group.children.forEach(u=>{u.element.style.visibility=o===null?"hidden":"visible"}):this.anchors[l].group.visible=o!==null,o!==null){let u=new Bt;u.elements=[...o],u.multiply(this.postMatrixs[a]),this.anchors[l].css&&u.multiply(BW),this.anchors[l].group.matrix=u}else this.anchors[l].group.matrix=QIe;this.anchors[l].visible&&o===null&&(this.anchors[l].visible=!1,this.anchors[l].onTargetLost&&this.anchors[l].onTargetLost()),!this.anchors[l].visible&&o!==null&&(this.anchors[l].visible=!0,this.anchors[l].onTargetFound&&this.anchors[l].onTargetFound()),this.anchors[l].onTargetUpdate&&this.anchors[l].onTargetUpdate()}this.anchors.reduce((l,u)=>l||u.visible,!1)?this.ui.hideScanning():this.ui.showScanning()}}}),this.resize();const{dimensions:s}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let i=0;i<s.length;i++){const a=new te,o=new qo,l=new te,[u,c]=s[i];a.x=u/2,a.y=u/2+(c-u)/2,l.x=u,l.y=u,l.z=u;const d=new Bt;d.compose(a,o,l),this.postMatrixs.push(d)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),e()})}resize(){const{renderer:e,cssRenderer:t,camera:r,container:s,video:i}=this;if(!i)return;this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight);let a,o;const l=i.videoWidth/i.videoHeight,u=s.clientWidth/s.clientHeight;l>u?(o=s.clientHeight,a=o*l):(a=s.clientWidth,o=a/l);const c=this.controller.getProjectionMatrix(),d=this.controller.inputWidth/this.controller.inputHeight;let h;d>u?h=this.video.width/this.controller.inputWidth:h=this.video.height/this.controller.inputHeight;let p,g;d>u?(p=s.clientHeight,p*=h):(g=s.clientWidth,p=g/this.controller.inputWidth*this.controller.inputHeight,p*=h);let f=s.clientHeight/p;const m=2*Math.atan(1/c[5]*f)*180/Math.PI,y=c[14]/(c[10]-1),b=c[14]/(c[10]+1);c[5]/c[0],r.fov=m,r.near=y,r.far=b,r.aspect=s.clientWidth/s.clientHeight,r.updateProjectionMatrix(),i.style.top=-(o-s.clientHeight)/2+"px",i.style.left=-(a-s.clientWidth)/2+"px",i.style.width=a+"px",i.style.height=o+"px";const x=e.domElement,v=t.domElement;x.style.position="absolute",x.style.left=0,x.style.top=0,x.style.width=s.clientWidth+"px",x.style.height=s.clientHeight+"px",v.style.position="absolute",v.style.left=0,v.style.top=0,v.style.width=s.clientWidth+"px",v.style.height=s.clientHeight+"px",e.setSize(s.clientWidth,s.clientHeight),t.setSize(s.clientWidth,s.clientHeight)}}window.MINDAR||(window.MINDAR={});window.MINDAR.IMAGE||(window.MINDAR.IMAGE={});window.MINDAR.IMAGE.MindARThree=XW;window.MINDAR.IMAGE.tf=jIe;function JIe(){const n=Hy.useRef(null);return Hy.useEffect(()=>{let e,t;async function r(){e=new XW({container:n.current,imageTargetSrc:"https://p-alom-a.github.io/ARimagebased/targets-leUN.mind"});const{renderer:s,scene:i,camera:a}=e,o=e.addAnchor(0),l=new r9({roughness:.7,transmission:1,thickness:1}),u=new hz,c=.05,d=.6,h=.33;u.moveTo(-.6/2+c,-.33/2),u.lineTo(d/2-c,-.33/2),u.quadraticCurveTo(d/2,-.33/2,d/2,-.33/2+c),u.lineTo(d/2,h/2-c),u.quadraticCurveTo(d/2,h/2,d/2-c,h/2),u.lineTo(-.6/2+c,h/2),u.quadraticCurveTo(-.6/2,h/2,-.6/2,h/2-c),u.lineTo(-.6/2,-.33/2+c),u.quadraticCurveTo(-.6/2,-.33/2,-.6/2+c,-.33/2);const p=new GT(u),g=new Ma(p,l);g.position.set(0,0,0),o.group.add(g);const f=new a9(16777215,1);f.position.set(0,1,1),o.group.add(f);const m=new o9(4210752,.4);o.group.add(m),await e.start();const y=()=>{s.render(i,a),t=requestAnimationFrame(y)};y()}return r(),()=>{t&&cancelAnimationFrame(t),e&&e.stop()}},[]),Cy.jsx("div",{style:{width:"100%",height:"100%"},ref:n})}const qIe=Dw.createRoot(document.querySelector("#root"));qIe.render(Cy.jsx(Cy.Fragment,{children:Cy.jsx(JIe,{})}));
//# sourceMappingURL=index-BLNOQ4In.js.map
